#!/bin/bash
set -euo pipefail

src=${1:-}
dst=${2:-_deps}
libs=$dst/libs-inner
ext=$dst/libs-external
allsyms=$dst/sym.all

ignore=( _Unwind_Resume )
ignore=$(IFS=$'|'; printf '%s\n' <<< "${ignore[*]}")
ignore="^($ignore)$"

mkdir -p "$dst"
# -o | to search obj files
[[ -s $libs ]] || r.find-elf -abs -- "$src" > "$libs" \
  || printf 'Err: *.a/*.so binaries not found\n' >&2

[[ -s $ext  ]] || r.find-elf -bs -- "$src" | xargs -rn1 -P$(nproc) \
  ldd | awk '$3{print$3}' | LC_ALL=C sort -u > "$ext" \
  || printf 'Err: seems like ldd error\n' >&2

## THINK: ignore $5=="WEAK" bind ???
extract_symbols(){ local flib=$1 sym=$2 und=$3
  mkdir -p "${sym%/*}" "${und%/*}"
  readelf -Ws -- "$flib" | gawk -vignore="$ignore" '
    !$8 || $8 ~ ignore"" {
      next
    }
    $5=="GLOBAL" && $6=="DEFAULT" && $7=="UND" {
      print $8 > "/dev/stderr"; next
    }
    $4=="FUNC" || $4=="OBJECT" || $4=="TLS" {
      print $8
    }
  ' > >(LC_ALL=C sort -u > "$sym") \
  2> >(LC_ALL=C sort -u > "$und")
}

batch_extract(){ local dst=$1; shift
  while IFS= read -r flib; do
    printf '* (lib) %s\n' "$flib" >&2
    extract_symbols "$flib" "$dst/sym/${flib##*/}" "$dst/und/${flib##*/}"
  done < <(cat "$@")
}

resolve_symbols(){ local dsym=$1 fUnd=$2 dneed=$3
  mkdir -p "$dneed"
  grep -rHxFf "$fUnd" \
    --include '*.a' --include '*.a.*' \
    --include '*.so' --include '*.so.*' \
    --include '*.o' "$dsym" \
  | awk -F'[:/]' -vd=""$dneed"" '{print$NF > d"/"$(NF-1)}' \
  || printf '!!! (empty) %s\n' "$fUnd" >&2
}

resolve_stats(){ local dneed=$1 fstats=$2
  mkdir -p "${fstats%/*}"
  find -H "$dneed" -type f -print0 \
  | wc -l --files0-from=- \
  | awk -F'/|\\s' '{print$1"\t"$NF}' \
  | sort -k1rn,1 \
  | tail -n +2 \
  > "$fstats"
}

# TODO: try to @ -> @@ and repeat again
# e.g. (boost) _ZNSt6localeC1ERKS_@GLIBCXX_3.4
#   -> (stdc++) _ZNSt6localeC1ERKS_@@GLIBCXX_3.4
print_notfound(){ local fUnd=$1 dnot=$2
  printf '!!! (notfound) %s\n' "$fUnd" >&2
  mkdir -p "$dnot"
  { echo "$fUnd"
    grep -vxFf "$allsyms" -- "$fUnd" \
    | tee "$dnot/${fUnd##*/}" \
    | sed 's/^/\t/'
  } >&2
}

resolve_undefined(){ local fund=$1 dst=$2
  [[ -s $fund ]] || continue
  printf '* (resolve) %s\n' "$fund" >&2
  dneed=$dst/need/${fund##*/}
  fstats=$dst/stat/${fund##*/}
  resolve_symbols "$dst/sym" "$fund" "$dneed"
  resolve_stats "$dneed" "$fstats"
  [[ -s $fstats ]] || print_notfound "$fund" "$dst/notfound"
}

# export -f gensymtbl
# SHELL=/bin/bash parallel "resolve_undefined {} '$dst'/{}"
batch_resolve(){ local dst=$1
  while IFS= read -r p; do
    resolve_undefined "$p" "$dst"
  done < <(find -H "$dst/und" -type f -print)
}

[[ ! -f $dst/_gen_syms ]] \
  && batch_extract "$dst" "$libs" "$ext" \
  && touch "$dst/_gen_syms"

[[ -s $allsyms ]] \
  || find -H "$dst/sym" -type f -exec cat {} \+ \
  | LC_ALL=C sort -u > "$allsyms"

[[ ! -f $dst/_gen_need ]] \
  && batch_resolve "$dst" \
  && touch "$dst/_gen_need"


## DEBUG
# grep -rxFf "$dst"/und/libWavePlayerConfig.a \
#   --include '*.a.*sym' \
#   --include '*.o.*sym' \
#   --include '*.so.*sym' "$dst"
