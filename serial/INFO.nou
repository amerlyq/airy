REF :: serial == COM-port > RS-232 > UART
  http://www.armadeus.org/wiki/index.php?title=Serial_ports_usage_on_Linux
  READ http://tldp.org/HOWTO/Serial-HOWTO.html

BET: use terminal directly w/o minicom/picocom
  INFO: The "stty" command should work, unless another program is interfering.
    A common culprit is gpsd which looks for GPS devices being plugged in.
  Reset and set params for serial device
    $ stty -F /dev/ttyUSB0 raw
    $ stty -F /dev/ttyUSB0 115200 -evenp -cstopb -echo -onlcr
  Save and restore all current params
    $ stty -F /dev/ttyUSB0 -g | xsel -ib
    $ stty -F /dev/ttyUSB0 "$(xsel -ob)"
  Communicate
    $ printf '%s' $'\x12' > /dev/ttyS0
  Bidirectional communication
    $ cat /dev/ttyUSB0 & cat - > /dev/ttyUSB0
    OR $ tee /dev/ttyUSB0
    USE:(to close background cat): $ jobs && fg
  Set terminal size, etc
    TARG: $ stty rows 40 cols 80
    HOST: $ echo "stty rows $(tput lines) cols $(tput cols)" > /dev/ttyS0
    HOST: $ echo "export TERM=$TERM" > /dev/ttyS0


HACK: comment/tag serial output
  Open new terminal with
    $ r.t -M -e tmux new-session -s serial -- r.serial
    $ tail -f /var/log/messages.log
  From another terminal => mark new operation
    $ tmux set-option -t serial history-limit 40000
    $ _s(){ tmux send-keys -t serial $'\n'"# $*"$'\n'; }
    $ _c(){ _s "$@"; sleep 2; _s --; }
    $ _c $comment
  Save whole scrollback of original terminal
    <C-l><A-S-p>


|community/lrzsz|
rz/sz to receive/send files by Z-modem protocol
  $ picocom --send-cmd 'sz -vv' --receive-cmd 'rz -vv' ...
| <C-a><C-s> /host/file   | send into serial
| <C-a><C-r> /target/file | receive from serial
