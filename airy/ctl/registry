#!/bin/bash -eu
# USAGE: ./$0 dpi [fallback vals...]
# BAD:WARN: dirty sourcing -- need clean env w/o shellrc inside fakechroot
#   ALT: safe grep only independent vars with oneline vals
# DEV: move core into standalone 'fallback' app and wrap here with profile fetch
#   => OR add files as -f args to parse from

reg=~/.shell/profile
dflord='erd'

# order: env > reg > dfl > err, n=noerr, o=only
opts=; while getopts 'derno' o; do case $o in :|'?') exit 1
esac; opts+=$o; done; shift $((OPTIND - 1))

ord=${opts//[^der]}
[[ $opts =~ o ]] || ord+=${dflord//[$ord]}

# Transform $nm to match EnvVar convention
nm=$1; shift
nm=${nm^^}
nm=AIRY_${nm//[.\/]/_}
[[ $nm =~ ^[A-Z0-9_]+$ ]] || exit

for ((i=0; i<${#ord}; ++i)); do case ${ord:i:1}
in e) [[ -v $nm ]] && break
;; r) tmp=$(source "$reg" >/dev/null; declare -p "$nm" 2>/dev/null) && eval "$tmp" && break
;; d) for v; do [[ -n $v ]] && declare -g "$nm=$v" && break; done
;; *) exit 7
esac; done

[[ -v $nm || $opts =~ n ]] && printf '%s\n' "${!nm-}" || exit 3
