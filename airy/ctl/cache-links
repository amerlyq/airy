#!/bin/bash -eu
shopt -s nullglob

mod=${PWD##*/}
bin=${AIRY_BIN:-$HOME/.local/bin}

while getopts 'qg:t:p:' o; do case $o in :|'?') exit 1
;; g) group=$OPTARG
;; t) bin=$(readlink -m "$OPTARG")
;; p) prf=$OPTARG
;; q) quiet=1
esac; done; shift $((OPTIND - 1))

[[ ${prf-} ]] || prf='r.%d-'
prf=${prf//%d/${group:+${group}.}$mod}


bins(){ local i a=()
  for((i=1;i<=$#;++i)); do [[ ${!i} == -- ]] && break; done
  for f in "${@:i+1}"; do [[ -f $f && -s $f && -x $f ]] && a+=("$f"); done
  linkcp ${quiet:+-q} -t "$bin" "${@:1:i-1}" -- ${a[@]+"${a[@]}"}
}

# ALT: bins(){
#   lst=$(find . -maxdepth 1 -type f -name 'run*' -not -empty -executable -print0)
#   a=(); while IFS= read -rd $'\0'; do a+=("$REPLY"); done <<< "$lst"; }

# ALG? Find all files -- run bin/ ctl/, sort by overlay order and send to uniq to keep only first from overlay
# BET: for each mod find in reverse overlay order -- then accumulate list

bins -- ./bin/*  # bin/* -> bin/*
bins -p "${prf}" -- ./ctl/*  # ctl/* -> bin/r.%d-*
bins -p "${prf%-}" -s 'run/' -- ./run*  # run* -> bin/r.%d*


# FIXME: use ~/.cache/airy/prefix and add it to user session as-is
# BAD:(frail dep): used explicit dst dir
# BAD:(frail dep): explicit name for dst bin
# BAD: builds only binaries, can't distinguish libs
srcs(){ local nm d=~/.cache/airy/build/bin
  for p in "$@"; do
    [[ -f $p && -s $p && ! -x $p ]] || continue
    r.airy-compile-src -ft "$d" -- "$p"
    nm=${p##*/}; nm=${nm%.*}
    bins -p "${prf}" -- "$d/$nm"
  done
}
srcs ./src/*  # src/* -> $cache/build/* -> bin/r.%d-*


pymod(){ local d=~/.config/airy/python nm=${group:+${group}_}$mod
  linkcp ${quiet:+-q} -- "$1" "$d/$nm"
}
[[ ! -f ./python/__init__.py ]] || pymod ./python
