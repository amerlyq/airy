#!/bin/sh -eu

lp='%[{]'
mp='[A-Z_][A-Z_0-9]*'
rp='[}]'

opts=; while getopts 'dipl:m:r:' o; do case $o in :|'?') exit 1
;; [lmr]) declare ${o}p=$OPTARG
esac; opts+=$o; done; shift $((OPTIND-1))
has(){ [[ $opts =~ [$*] ]]; }

f=$1
t=${2:--}

has i && t=$(mktemp)
has d && t=-
[[ $t == - ]] && t=/dev/stdout
has p && mkdir -p "${t%/*}"

# WARN: unrestricted recursive substitution
# FIXME: -- endless loop for USER='%USER%' -- set depth limit ?
# ALT:BAD:(both empty and undef): if (length(v)==0)
gawk -vl="$lp" -vm="$mp" -vr="$rp" '{
  while(match($0, l m r)) {
    k = substr($0, RSTART, RLENGTH)
    k = gensub(l"("m")"r, "\\1", "1", k)
    if (! k in ENVIRON) {
      print "No env: "k > "/dev/stderr"
      exit 4
    }
    gsub(l k r, ENVIRON[k])
  }; print
}' "$f" > "$t"

has d || ! has i || mv -f "$t" "$f"
