#!/bin/bash -eu
# USAGE cd ./cfg && ./$0 "${mods[@]}" -- "${skip[@]}"
# NOTE:(obsolete): search is based on install/setup scripts
cwd=$(readlink -e "$PWD")
prf=${cwd##*/}

frgx(){ local p="\\b$*\\b"
  [[ "$*" =~ ^/$ ]] && p=$prf
  [[ "$*" =~ ^/.+$ ]] && p=$prf$p || p=".*$p"
  [[ "$*" =~ ^.+/$ ]] && p="${p}.*" || p=$p'$'
  printf '%s\n' "$p"
}

# FIXME: check wrong entries in PKG_LIST/SKIP (like mistake with 'browsers')
# CHECK: don't ignore explicit path inside PKG_LIST
#   => even if it also contained in PKG_SKIP
filter_find() { local accept regect=''
  for s in "${skip[@]}"; do regect+="\\|$(frgx "$s")"; done
  regect=${regect:2}

  for m in "${mods[@]:?}"; do accept=$(frgx "$m")
    find -H "$cwd" -type d -regex ".*/\($accept\)" \
      -exec test -f '{}/install' -o -f '{}/setup' \; \
      \! -regex ".*/\($regect\)" -print
  done
}

arg_split(){ local i; for((i=1;i<=$#;++i)); do
  [[ ${!i} == -- ]] && break; done; echo "$i"; }

# WARN: don't use any Emacs regex symbol for *mod* name
idx=$(arg_split "$@")
mods=( "${@:1:idx-1}" )
skip=( "${@:idx+1}" )

filter_find
