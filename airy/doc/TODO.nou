ALT:(dot-mgmt)
  TRY: https://github.com/thoughtbot/rcm

!! NOTE: all [airy] system uses only local ./_build paths


maint
  [_] encapsulate deploy system into independent 'airy' mod
  2017-02-04 [X] rename 'setup' to 'maint' OR 'ctl' ALT: use root Makefile
  [_] ./maint must be simple wrapper and actually call ./airy/run
    => applies r.airy to each mod inside ./pkg dir
  2017-01-30 [X] MOVE colorizing stuff in ./func.d OR:BET: ./bin/pretty
  [_] MOVE ./func.d -> *airy*
  [_] one list install to accelerate process
    simply check status of apt-get =100
  Options
    [$] Simultaneously -i -u -- doing all
    [_] ./setup -U -- do only ./update w/o ./setup
    [_] untie install-u and setup-u for short comprehensive orthogonal options
    [_] make opt '-c' for cleanup-only mode
      = symlinks/configs/fonts-links/fontcache/etc
      [_] do cleanup also in mode '-a'
  [_] make opt '-w/-d' for width/depth traversing
    width: -full- scenario per mode to fail earlier
    depth: all mods per -single- op
      * separate groups for setup/install/update/aliases
      * aggregate pkg_inst, etc to ./install | ./update
      * parallel execution for individual ./update
      * gather all aliases to dump
  [_] ENH return err if single-word *mod* in PKG_LIST isn't unique throughout all mods
    * check only PKG_LIST config
    * allowed to have multiple mods with same name in different locs (treated as the same mod)
      ? how to adequately order them ?
  [_] move sourcing from 'cfgsetup' to 'system'
  [_] use it's own flags set/handler instead of 'cfgsetup'
  [_] THINK: DFL no flags -- what to do by default ?
    only update 'packman' pkgs ? but we have 'pacman -Syu'
    !!! [_] BET: show info/status/statistics !!!
      * show pkgs status as before
      * count ./bin/* and $ aliases | wc -l
      * show dfl airy paths from profile
  2016-08-19 [X] NEED: log last run into file ~/.cache/airy/mods/setup.log


structure
  [_] MOVE ./bin -> ./ctl and populate prgs from ./bin with unchanged names
  [_] Add VAR 'tags' to generate symlinked categories into ./_build
    2017-01-30 [X] ALT:TEMP: for each 'setup' add '# tags: .. .. ..' after /^source ~\/.*cfgsetup/
    [_] cfgsetup = apply additional tag :: [in]active | [dis/en]abled | [un]used
      [_] ALT: link all ./pkg/* w/o mod file in root --> ./_build/{wrong|trash|empty|bad}
    [_] ALSO: search all non-'pretty' for that regex
      -- must source / traverse all mods and not only choosen ones from PKG_LIST
  Abstraction: defaults -> ./mod -> ./pkg
    [_] rename ./cfg -> ./pkg (for named main/aur pkgs only)
    2017-01-27 [X] rename ./my -> ./mod
      ALT: ./gen[eral] | ./abs[tract] | ./choice | ./case
    [_] link by ./airy/defaults general ./mod with choosen ./pkg
    [_] show error if some ./mod was added, but its default wasn't =set or wasn't =installed
    [_] create category symlinks to choose variant ./pkg/{..} -> ./mod/$mod/use/*
      THINK:BAD: excessive systemd cohesion -- we will be restricted by linked mods
      BUT: we need symlinks somewhere anyways -- MAYBE in ./_build/use
    [_] allow augmenting by user-specified defaults in his profile / mods
  [_] BET: use file ( ./mod | ./airy | ./AIRYPKG ) = like PKGBUILD with functions
    + each function -- works w/o sudo -- and only locally for user 'nobody'
      = only generates arguments for r.airy funcs
    + in future can be adapted/converted into PKGBUILD or *.deb
    BAD:ALT:(suboptimal): store all control scripts inside //mod dir in each *mod*
  [_] THINK: use ./tmpl OR ./etc
  [_] THINK: user's mod dir -- link into ./_build/user OR even ~/.config/airy -- as any other pr
  [_] create DFL ./tmpl/profile for *airy*
    -- can be deprecated by per-mod profile segments
    # To keep template fileset with mods for new accounts
    * one very simple with small set of features
    * one rich with all settings
  [_] profile ./{tmpl/\,}defaults instead of ./cfg/setup + mkdef
    * Place there list of all symlinks to create
    * Each ./my/* will source this file and will actually create symlinks
    [_] TODO: use DFL version in airy and override/augment by user's version
    ALT:THINK: use xdg-open for system-wide permission protected links
  [_] keep all mods inside flat ./mod directory instead of tree in ./cfg
    ? and create symlinks for categories tree inside ./_build ?
    ALT: keep categories tree as it is and create symlinks into ./mod
    ? ALSO:THINK: sep ./mymod for contents of ./bin and sparse functions ?
      => also *mod* in ./mymod  work as switch proxy to multiple providers (like browsers)
    ? beside ./mod need ./_obsolete dir
    ? USE symlinks to *mod* instead of 'PKG_LIST'
      + no need for recursive 'find'
      + explicit list -- and user directly see which links were broken
      + sep rel symlins list can be commited to own repo
      - git <v2.10.2 on Windows will replace symlinks by text files
        = so I can commit relative symblinks without problem

  [_] gather all artifacts into '_build' dir instead of ~/.cache/airy/
    [_] link /airy/_build into ~/.cache/airy and /airy/mod into ~/.config/airy
    [_] add support for XDG_... env vars into 'cfgsetup' to determine symlink targets
  [_] instead of using ./prf/* files -- use separate pieces of profile in each private *mod*
    * PKG_LIST is placed inside of *airy* mod
    * all profile pieces can be combined into single ./profile with non-exported environment for *airy*
    * even regular *mod* can contain pieces of profile inside of it
    * differs from ./env -- because ./env is always sourced into interactive sessions


setup
  2015-07-01 [X] FIX: /tmp/aura must be changed -> /tmp/$USER
    -- check if $USER available from bare script := see .xprofile
  [_] In each script replace ~/.config to $XDG_CONFIG_HOME with fallback
    ALSO: set this shell var in cfgsetup like TMPDIR
  [_] create ./wmkeys to populate current *wm* hotkeys
    => convert general format to wm-specific one
    * use general function names, with wm-specific impl


install
  [_] do_if -> system
  [_] do_if must accept commands from stdin
    = Aim -- in all ./setup files to simplify upgrade sections
  [_] No duplicates: simple '-p' argument (pkg_inst -p name) duplicates package name
    = if name -- list, repeat this check of name for each package
    = Add '-P' key for explicit consideration of package
  2016-07-14 [X] pkg_inst and aur_inst -> don't do anything, if already installed -- even on '-u'
    Because it must be done by '-Ss'
  [_] CHG: use pacaur instead of pacman on pkg update


linkcp
  2017-01-23 [X] remove 'sudo' from linkcp
  2017-01-23 [X] rename all 'link' func into 'linkcp' script
  ! [_] harden system perms security by using linkcp copy into sys dirs instead of symlinks
  [_] MOVE: linkcp, svc_activate into 'airy' in ./bin
  [_] THINK: optimize ./bin <Tab> time -- scripts can be copied instead of symlinks
    BAD: scripts can be dependent on in-dir stuff through 'readlink'
  [_] THINK: split into 'mlink' and 'mcopy' ?
  2017-02-04 [X] quiet linking on '-q'
  2017-02-05 [X] DEV: generalize file list to support batch format instead of linkmask
    ::: added '-s' for name substitution to be combined with prefix
  [_] DEV: disallow '-o/-C' any symlink overwrite / clobbering -- strict mode
  [_] DEV: reuse 'rel_search' func from svc_activate
  [_] THINK: embed 'envsubs' from svc_activate directly into 'linkcp' for copy mode
  2017-02-05 [X] TODO: convert 'linkmask' group to function like 'dcache' ::: r.airy-cache-links


cache_section
  [_] ALSO: gather 'env' files like 'alias'
    linkmask "$PWD/env"  'env/%d%n'


cache-alias
  [_] DEV: generalize to cache any file types beside storing shell aliases
  [_] FIXME:(restrict): don't source other files named 'aliases' beside in ./mod dir
  [_] THINK: keep short 'mod' name instead of 'path' to allow mods moving
    => can be changed back to 'full path' when all mods placed in single dir
  [_] TODO:DEV: dump aliases and functions individually for each shell after configure
    => faster startup from single file
  [_] BAD: if $f was manually edited -- NEED to regenerate anyway
    SEE: http://fahdshariff.blogspot.com/2012/12/sed-mutli-line-replacement-between-two.html

  2017-01-27 [X] Add alias file for some cfgs -- and on ./setup gather >> ~/.cache/airy/aliases
    + dump all files into single one
      + reduce startup time
      !! shell-specific unportable aliases (ZSH)
      !! 'return' to interrupt sourcing will affect whole dump
      ::: wrap each sourced file into function and call it immediately
        => ALT:(non-robust): instead of 'return' from sourced files use 'if..fi' guards
    ~ file list with whole pathes
    ~ dir with symlinks to aliases


PKGMOD
  [_] BAD: package can't touch any /home or /tmp path
    https://wiki.archlinux.org/index.php/Arch_packaging_standards#Directories
    ? is it enough for me to use system-wide dirs and cache ?
  [_] TRY: generate PKGBUILD for each *mod* through my scripts set
    + this allows clean uninstall previous versions based on $pkgver
      >> remove cleaning for ./systemd/user and ./bin symlinks
    +++ can resolve deps graph between my own moduls
      >> support any order of mods in PKG_LIST
    NEED: my own local AUR mirror for my mods only
      * pacman-like already built -- generate on first ./setup and rebuild all on changes
      * BET: aur-like build-on-demand -- but need access to
    ALT: generate single package //airy-$USER.pkg.tar.xz from whole 'airy'
      + no need for my own AUR local mirror
        => install by simple $ makepkg && pacman -U
      + package is individual for an
  [_] convert pkgbuild to deb
    http://www.overclock.net/t/1339466/converting-an-aur-slackbuild-script-for-use-in-debian
    http://archlinux.org.ru/forum/topic/15919/


other
  2015-09-21 [X] Replace name and email in devq work
  2015-06-05 [X] Insert vim installation and update check ALSO in vim_install (one-button)
    then delete it from list and try install again
  2015-09-21 [X] Move install profile choosing (fast with apt-get only, or full with compile)
    to git_install script, checking for flag and skipping if there isn't one
    ::: Concept is replaced with smart re-build only on diff
  2015-09-21 [X] Проблема группирования -- по объекту (bash,vim,git) или по
    стратегии (cfg, deploy, notes) решается через 'ln -r' симлинки в репе
    ::: По объекту группировка выгоднее если есть шоткаты быстрого доступа (..r, .cm)
  2015-09-21 [$] Зависание установки geeknote из-за необходимости вводить пароль и логин
    = Сделать его устанавливаемым только вручную!
    ::: Отказ от использования в пользу гит репозитория
  2015-06-05 [X] Некоторые конфиги имеет смысл запускать только после установки программ!
    choose_default -- после всех соотвествующих дефолтов (zsh, etc.)
    vim -- после установки vim'а...
    erian/install.sh -- which will install repos -- after all configs
  2015-09-21 [X] Сделать автоматическое изменение локальных кредентиалов пользователя в репах
    ::: DONE by erian -- simply clone all repos from its install script
  2015-09-21 [$] пароли для dir620 -- in profile
    хотя если я всё равно буду подключаться по SSH -- то проще использовать приватные ключи.
