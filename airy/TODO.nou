maint
  [_] encapsulate deploy system into independent 'airy' mod
  [_] rename 'setup' to 'maint' OR 'ctl' ALT: use root Makefile
  [_] ./maint must be simple wrapper and actually call ./airy/run
  [_] MOVE colorizing stuff in ./func.d OR:BET: ./ctl/bin/colorize
  [_] MOVE ./func.d -> *airy*
  [_] one list install to accelerate process
    simply check status of apt-get =100
  [$] Simultaneously -i -u -- doing all
  [_] make opt '-c' for cleanup-only mode
    = symlinks/configs/fonts-links/fontcache/etc
    [_] do cleanup also in mode '-a'
  [_] make opt '-w/-d' for width/depth traversing
    width: -full- scenario per mode to fail earlier
    depth: all mods per -single- op
      * separate groups for setup/install/update/aliases
      * aggregate pkg_inst, etc to ./install | ./update
      * parallel execution for individual ./update
      * gather all aliases to dump
  [_] ENH return err if single-word *mod* in PKG_LIST isn't unique throughout all mods
  [_] move sourcing from 'cfgsetup' to 'system'
  [_] use it's own flags set/handler instead of 'cfgsetup'
  [_] THINK: DFL no flags -- what to do by default ?
    only update 'packman' pkgs ? but we have 'pacman -Syu'


structure
  [_] store all control scripts inside //mod dir in each *mod*
  [_] THINK: use ./tmpl OR ./etc
  [_] create DFL ./tmpl/profile for *airy*
    -- can be deprecated by per-mod profile segments
    # To keep template fileset with mods for new accounts
    * one very simple with small set of features
    * one rich with all settings
  [_] profile ./{tmpl/\,}defaults instead of ./cfg/setup + mkdef
    * Place there list of all symlinks to create
    * Each ./my/* will source this file and will actually create symlinks
    [_] TODO: use DFL version in airy and override/augment by user's version
    ALT:THINK: use xdg-open for system-wide permission protected links
  [_] keep all mods inside flat ./mod directory instead of tree in ./cfg
    ? and create symlinks for categories tree inside ./_build ?
    ALT: keep categories tree as it is and create symlinks into ./mod
    ? ALSO:THINK: sep ./mymod for contents of ./bin and sparse functions ?
      => also *mod* in ./mymod  work as switch proxy to multiple providers (like browsers)
    ? beside ./mod need ./_obsolete dir
    ? USE symlinks to *mod* instead of 'PKG_LIST'
      + no need for recursive 'find'
      + explicit list -- and user directly see which links were broken
      + sep rel symlins list can be commited to own repo
      - git <v2.10.2 on Windows will replace symlinks by text files
        = so I can commit relative symblinks without problem
  2017-01-27 [X] Add alias file for some cfgs -- and on ./setup gather >> ~/.cache/airy/aliases
    => instead of 'return' from sourced files use 'if..fi' guards
    ::: ALT: wrap each sourced file into function and call it immediately
  [_] gather all artifacts into '_build' dir instead of ~/.cache/airy/
    [_] link /airy/_build into ~/.cache/airy and /airy/mod into ~/.config/airy
    [_] add support for XDG_... env vars into 'cfgsetup' to determine symlink targets
  [_] instead of using ./prf/* files -- use separate pieces of profile in each private *mod*
    * PKG_LIST is placed inside of *airy* mod
    * all profile pieces can be combined into single ./profile with non-exported environment for *airy*
    * even regular *mod* can contain pieces of profile inside of it
    * differs from ./env -- because ./env is always sourced into interactive sessions


setup
  2015-07-01 [X] FIX: /tmp/aura must be changed -> /tmp/$USER
    -- check if $USER available from bare script := see .xprofile
  [_] In each script replace ~/.config to $XDG_CONFIG_HOME with fallback
    ALSO: set this shell var in cfgsetup like TMPDIR
  [_] create ./wmkeys to populate current *wm* hotkeys
    => convert general format to wm-specific one
    * use general function names, with wm-specific impl


install
  [_] do_if -> system
  [_] do_if must accept commands from stdin
    = Aim -- in all ./setup files to simplify upgrade sections
  [_] No duplicates: simple '-p' argument (pkg_inst -p name) duplicates package name
    = if name -- list, repeat this check of name for each package
    = Add '-P' key for explicit consideration of package
  2016-07-14 [X] pkg_inst and aur_inst -> don't do anything, if already installed -- even on '-u'
    Because it must be done by '-Ss'
  [_] CHG: use pacaur instead of pacman on pkg update


linkcp
  2017-01-23 [X] remove 'sudo' from linkcp
  2017-01-23 [X] rename all 'link' func into 'linkcp' script
  ! [_] harden system perms security by using linkcp copy into sys dirs instead of symlinks


other
  [_] TRY: generate PKGBUILD for each *mod* through my scripts set
    + this allows clean uninstall previous versions
    ALT: generate single package from whole 'airy'
  2015-09-21 [X] Replace name and email in devq work
  2015-06-05 [X] Insert vim installation and update check ALSO in vim_install (one-button)
    then delete it from list and try install again
  2015-09-21 [X] Move install profile choosing (fast with apt-get only, or full with compile)
    to git_install script, checking for flag and skipping if there isn't one
    ::: Concept is replaced with smart re-build only on diff
  2015-09-21 [X] Проблема группирования -- по объекту (bash,vim,git) или по
    стратегии (cfg, deploy, notes) решается через 'ln -r' симлинки в репе
    ::: По объекту группировка выгоднее если есть шоткаты быстрого доступа (..r, .cm)
  2015-09-21 [$] Зависание установки geeknote из-за необходимости вводить пароль и логин
    = Сделать его устанавливаемым только вручную!
    ::: Отказ от использования в пользу гит репозитория
  2015-06-05 [X] Некоторые конфиги имеет смысл запускать только после установки программ!
    choose_default -- после всех соотвествующих дефолтов (zsh, etc.)
    vim -- после установки vim'а...
    erian/install.sh -- which will install repos -- after all configs
  2015-09-21 [X] Сделать автоматическое изменение локальных кредентиалов пользователя в репах
    ::: DONE by erian -- simply clone all repos from its install script
  2015-09-21 [$] пароли для dir620 -- in profile
    хотя если я всё равно буду подключаться по SSH -- то проще использовать приватные ключи.
