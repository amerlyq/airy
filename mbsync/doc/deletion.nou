REF
  (imap): https://tools.ietf.org/html/rfc2193
    http://www.faqs.org/rfcs/rfc3501.html
    flag: \Deleted
    http://deflexion.com/2006/05/server-side-message-labels
    https://www.melnikov.ca/mel/Drafts/draft-melnikov-imap-keywords-00.txt
  (maildir): http://cr.yp.to/proto/maildir.html
    flag: T = trashed
  TUT: https://github.com/djcb/mu/issues/1136


Propagate deletion (expunge) and =Trash
  ARCH: delete propagation
    * mutt=D
      - on <d>-key add message to selection to be deleted (mutt memory-only flag "D")
    * mutt=sync-mailbox   # apply action to selection:
      ~ do nothing        # * selection is ignored and lost on mailbox/dir reopen
      ~ imap=\Deleted     # * mark and sync flag to IMAP server
        => then send ~EXPUNGE~ to server and delete local memory/disk cache of these messages
      ~ append Maildir=T  # * to names of all selected messages flag
    * mbsync=sync
      - mark not found locally as \Deleted  # not found = {msgid < max-UID}, presumably deleted
      - mark Maildir=T as imap=\Deleted
      - sync in both directions
      - mark not found remote as Maildir=T locally
    * mbsync=expunge
      - send ~EXPUNGE~ to IMAP server
      - delete all marked with "T" locally

  mutt: copy to =Trash, mark +delete, sync and send "Expunge" (purge) to IMAP
    => IMAP: (additionally) auto-move +delete to its own =TrashOnServer => return reduced list
    => davmail: sync =Trash, (utterly) purge +delete files on Exchange directly => return reduced list immediately w/o round trip to server
    => mbsync: sync (push) new in =Trash and all +delete to IMAP server => it does as usuas => pull back
      !! locally deleted messages (as files) will be re-downloaded from server
      !! messages deleted directly on server (through web browser) will remain untouched locally (and may become uploaded again)
      BUT at least they are marked +delete
    Expunge
      None:
        mark +delete on any side, don't copy anywhere, don't expunge, sync to the other side (local/remote), kept on both sides
          => duplicates all deleted msg on local
        remote +delete, sync-mailbox, copy to remote =Trash, remote "Expunge"
      Slave:
        remote +delete, sync local, delete locally (or copy to local =Trash), sync back to server (delete on server?)

  maildir_trash "T"
    SEE http://mutt-users.mutt.narkive.com/Hbv0ynxU/maildir-trash-what-does-it-do
      (mutt) set maildir_trash = yes
      [_] CHECK:CMP: hidden "T" vs moved to =Trash
        = compare which way user/script are best for processing (CMP diff usecases/scenario)

  BAD: pushing +deleted to server marks them "T", which are treated as different UID mail
    !! locally duplicated on !each! pull, each f*cking pull !!
      SEE:(similar): https://sourceforge.net/p/isync/mailman/message/34564157/
      SEE: $ man mbsync $ /Maildir Stores/ :: native / alternative UID schemes problems
      SEE: /CopyArrivalDate/ :: maybe +deleted timestamp (part of UID?) is changed when pushed and pulled back
    * new UID with "T" is pulled from server
    * old mail renamed to "T" (as not found on server)
      => "Expunge Slave" will delete both of them, not only the old UID which disappeared on server !!!
    [_] TODO: test flags/uids behavior on "[GMail]/Trash" to exclude problems of davmail/exchange
      = use Trash folder to prevent auto-archiving of GMail on "D" in any other folder
      => to localize problem OR determine it's adhering to standardt / implementation defined


CMP =Trash vs "T"
  + =Trash is more intuitive for users (you are explicitly moving +deleted to =Trash) (and GMail virtually works same way)
  + =Trash doesn't introduce any unexpected overhead when pulling =INBOX
  + =Trash is easy to clean-up regularly (remove too big or too old mails)
  + =Trash demonstrates the less unexpected behavior of the two
    WARN! servers are doing notoriously different things with "T"/+deleted messages when you push them to server
    GMail: ~archives~ them to [GMail]/All Mails (instead of ignoring completely or moving to "=[GMail]/Trash" by itself)
    Exchange: (davmail) == (!broken!) deleted or marked with "T" are completely recreated as different UID mail
      [_] CHECK:MAYBE: it's davmail exclusive bug -- or is it correct behavior by specs ?
  * "T" used by davmail/Exchange natively
    ~ deletion from web-interface
    ~ recalling of messages e.g. 1524771066.31197_3.NB-109,U=642:2,ST
  * +deleted msgs are still shown as normal ones in Exchange
    ! disable "davmail.imapAutoExpunge=false" otherwise all marked messages will disappear immediately on sync
      <= i.a. sometimes you need to be able to copy +deleted messages to server w/o actual "Expunge"
  * you can't mark "T" inside =Trash (where you have moved messages)
    !! they won't be present in "Deleted Items" of Exchange web-interface
  * "T" effectively hides msgs from MUA
    ! BUT they are still present in "Maildir" in their original folder
    => Exchange has virtual folder "Deleted Items" which aggregates all hidden msgs
    ++ easy to restore or attribute message
    -- need periodic scan of all folders to delete all msgs older 30 days
    https://github.com/djcb/mu/issues/1136
      https://together.jolla.com/question/12079/deleted-emails-stick-around-until-expunged-imap/


GMail :: to delete mail it must be explcitly moved into [GMail]/Trash
  EXPL http://promberger.info/linux/2008/03/10/mutt-and-gmail-via-imap-how-to-delete-messages/
  USE:(mutt) set trash = "=[Gmail]/Trash"
   macro index d "<save-message>=[Gmail]/Trash<enter>" "Trash"
