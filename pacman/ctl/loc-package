#!/usr/bin/env bash
#%SUMMARY: from list of pkgnames build and create packages in "dev" repo
#%USAGE: $ ./$0 < "${TMPDIR:-/tmp}/airy/loc.list"
#%NOTE: abs/rel paths aren't allowed, only pkgnames
#%  $ xargs -- realpath --relative-to="$d_root" -e -- | ...
#%NOTE: defaults disabled, only explicit pkgname <= [[ -t 0 ]] && exec <<< "$PWD"
set -fCureEo pipefail

# BUG: "emacspeak-git" can't be built w/o 'tclx' which is absent in 'dev' due to --config dev.conf
export AUR_REPO=dev
d_root=~/.cache/aurutils/airy
# ALT: enforce rebuild by incrementing 'pkgrel=1' or 'epoch' in PKGBUILD
chroot=1
update=

while getopts 'hCu' o; do case $o in :|'?') exit 1
;; h) exec sed -rn '1d;/^(.*\s)?#%/s///p' "$0"  #% h = help
;; C) chroot=
;; u) update=1
esac; done; unset o; shift $((OPTIND-1))
(($#)) && exec < <(printf '%s\n' "$@") || [[ ! -t 0 ]] || exit 1

# ERROR: aur-sync: pacman failed to install missing dependencies
# BUG: can't install without confirm
# HACK: https://github.com/AladW/aurutils/issues/447
#   $ makechrootpkg -- 'PACMAN_OPTS=--confirm'
# OR$ arch-nspawn /var/lib/aurbuild/x86_64/root pacman -S sqlite-replication

# INFO: "sudo" isn't affected by "/dev/stdin" argument ALT: cache "sudo -k" beforehand
${chroot:+env --chdir "$d_root" --} \
  aur build ${update:+--force} --arg-file='/dev/stdin'
  # ${FONT_ST:+--margs -- FONT_ST="$FONT_ST"}


########
# E.G.:(oneliner): $ echo *mypkgdirs* | xargs -- realpath -ze -- | env -C ~/.cache/mypkgs -- xargs -0 -- sh -c '
#   install -Dt "${0##*/}" -- "$0/PKGBUILD" && aur build -a /dev/stdin <<< "${0##*/}" && sudo pacman -S ???' "$0"
#
# ALT:USE: $ makepkg [ENVVAR=...]
# THINK: using '-C' for clean builds (re-dld all src)
# BUG: $?=0 when coflict on install
# ((update)) && arg=--force || arg=--needed
# makepkg "$arg" --syncdeps --install ${interactive:+--noconfirm} "$@"
