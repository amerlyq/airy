#!/bin/bash -eu
source ~/.shell/profile

skip(){ set -- ${!1:+"${!1}"}; (($#))||return 0
  printf -- '--ignore '; (IFS=,;printf '%s\n' "${*// /\\ }")
}

# HACK: first update GPG keys
# sudo pacman -Syu archlinux-keyring ca-certificates

# FIXED:BUG: can't "sleep 30" -- TERM signal won't be delivered until loop unpaused
# BUG: |: ./pacman/update: line 12: /usr/bin/sleep: No such file or directory
{ i=0; while sleep 1; do ((++i%30))||sudo -v; done; } & pidsudo=$!
onexit(){ kill -TERM "$pidsudo"; wait; }
trap onexit INT ERR
sudo -v

# ALT:(timeout3):
# (while ((t>0)); do sleep 30; kill -0 $$||exit 0; ((t-=30)); done
# kill -s SIGTERM $$ && kill -0 $$ || exit 0
# sleep 1; kill -s SIGKILL $$
# ) 2>/dev/null &


# NOTE:(darkhttpd): $ r.pacman-cache-server && FIX(nft):SEE:SUM
# NEED: $ echo "192.168.2.4 darkhttpd" >> /etc/hosts
refresh_mirrors(){ local udt db=${1:+/var/lib/pacman/sync/core.db}
  ## ALT:(db): enable historical archive for stale system (instead of today's upgrade)
  reflector --score 5 --protocol https | sed "
    1d;
    0,/^Server =/s||# Server = http://darkhttpd:8080\\n\\n\\0|
  " | sudo tee /etc/pacman.d/mirrorlist
  # FIXED: you must sync db with new mirrors first, before assuming archive timestamp of the db
  sudo pacman -Sy
  # [_] FIXME: must use UTC time corresponding to EOD (FIND: timezone of archive.archlinux.org server)
  udt=$(date ${db:+-r "$db"} +%Y/%m/%d)
  sudo tee -a /etc/pacman.d/mirrorlist <<< "
Server = https://archive.archlinux.org/repos/$udt/\$repo/os/\$arch"
}

# NOTE: three-stage process to upgrade AUR together with dependencies
# HACK: skip 'exit 1' if update 'n' in pacman
# BUG: skips upgrade if file exists -- because errcode=1
# shellcheck disable=SC2046
pkgupd(){ sudo pacman -Syu $(skip 'PKG_IGNORE[@]') || ((1==$?)); }
refresh_mirrors "$([[ " $* " =~ " -r " ]]&&echo 1)"
pkgupd
# shellcheck disable=SC2046
aur sync --database=aur --no-view --no-confirm --upgrades $(skip 'AUR_IGNORE[@]')
pkgupd

# BUG: returns error "sudo pkgfile --update"
# FAIL: 404 when fetching *.files from LAN pacman cache
if [[ " $* " =~ " -u " || ! -f /var/cache/pkgfile/core.files ]]
then sudo pkgfile --update; fi

onexit
