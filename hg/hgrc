# SEE
#   http://mozilla-version-control-tools.readthedocs.org/en/latest/hgmozilla/index.html
#   http://gregoryszorc.com/blog/2013/05/12/thoughts-on-mercurial-%28and-git%29/

[defaults]
qnew = -Ue
# suppress noisy extdiff header message
cdiff = -q

[alias]
# USE instead of 'hg log'
wip = log --graph --rev=wip --template=wip
# REF: https://selenic.com/hg/help/revsets
# lmb: list merged branches
lmb = log -r "ancestors(.) & head()" --template '{branch}\n'
adiff = !for f in $(hg status -n "$1"); do hg vdiff "$f" || break; done

[revsetalias]
wip = (parents(not public()) or not public() or . or head()) and (not obsolete() or unstable()^) and not closed()

[templates]
wip = '{label("log.branch", ifeq(branch, "default", "", branch))} {label("changeset.{phase}", rev)} {label("grep.user", author|user)}{label("log.tag", if(tags," {tags}"))} {bookmarks % "{ifeq(bookmark, currentbookmark, label('log.activebookmark', bookmark), label('log.bookmark', bookmark))} "}\n{label(ifcontains(rev, revset('parents()'), 'desc.here'),desc|firstline)}'
wbrch = '{label("log.branch", ifeq(branch, "default", "", branch))}'
wcset = '{label("changeset.{phase}", rev)}'
wuser = '{label("grep.user", author|user)}'
wtags = '{label("log.tag", if(tags," {tags}"))}'
wbook = '{bookmarks % "{ifeq(bookmark, currentbookmark,
                             label('log.activebookmark', bookmark),
                             label('log.bookmark', bookmark))} "}'
wdesc = '{label(ifcontains(rev, revset('parents()'), 'desc.here'), desc|firstline)}'
changeset = '{wbrch} {wcset} {wuser} {wtags} {wbook}\n{wdesc}'

[extensions]
## Beautifiers
color=
pager=
progress=
## Commit helpers
record=
## History rewriting
purge=
histedit=
rebase=
shelve=
strip=
# mq =
## Viewing
graphlog=
hgext.hgk=
hgext.extdiff=

[color]
# mode=terminfo
# log
log.branch=cyan
log.summary=yellow
log.description=yellow
log.bookmark=green
log.tag=red
log.activebookmark = green bold underline
# changeset
changeset.public=green bold
changeset.secret=blue bold
changeset.draft=yellow bold
# desc
desc.here=bold blue_background
diff.diffline = bold
diff.extended = cyan bold
diff.file_a = red bold
diff.file_b = green bold
diff.hunk = magenta
diff.deleted = red
diff.inserted = green
diff.changed = white
diff.trailingwhitespace = bold red_background
# status
status.modified = yellow bold
status.added = green bold
status.removed = red bold
status.deleted = cyan bold
status.unknown = blue bold
status.ignored = black bold

[diff]
# git = 1  # DFL:BET: don't use 'git=1' :: chg permissions won't be showed, ALT:(hg diff -g)
showfunc = 1
unified = 8

[extdiff]
# configure extended diff to use colordiff (requires colordiff installed in your system)
cmd.cdiff = colordiff
opts.cdiff = -uprN
cmd.vdiff = r.vim
opts.vdiff = -d

[histedit]
## So 'hg histedit' could work w/o args
defaultrev=only(.)

[hooks]
# To prevent accidental pushes instead of qpush in mq
pre-push = printf 'Are you sure you want to push to remote? (y/n): '; read R; [ x"$R" == "xy" ]

[ui]
# For <v1.5 -- relative to PWD, after -- relative to repo root
# So in chroot -- commit only from repo root
ignore = .hg/hgignore
