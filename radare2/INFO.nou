irc: freenode/#radare (r2tg -- telegram bot)

SEE:
  REF
    http://radare.org/r/
    http://radare.org/r/pics.html
    http://radare.today/page/3/
    > http://radare.today/visual-mode/
    >> http://phrack.org/issues/66/14.html
    + http://reverseengineering.stackexchange.com/questions/1842/what-are-the-main-features-of-radare2
  EXPL
    http://dukebarman.pro/na-radare-kak-na-ladoni/
    https://github.com/radare/radare2/wiki/Migration-from-ida-or-GDB
  Cheetsheets
    https://github.com/pwntester/cheatsheets/blob/master/radare2.md
    https://radare.gitbooks.io/radare2book/content/introduction/commandline_flags.html
  SEE There are also sdb!
    ? https://github.com/radare/radare2/tree/master/shlr/sdb
    http://radare.today/posts/solving-crackmes-with-ldpreload/
  TUT
    ++ https://retro.moe/2015/11/18/disassembling-6502-code-with-radare-part-i/
    ++ https://blog.techorganic.com/2016/03/08/radare-2-in-0x1e-minutes/
    +++ http://radare.tv/a/1
    ++ https://techstarspace.wordpress.com/2015/04/23/reverse-engineering-1-getting-familiar-with-radare2/
    http://phrack.org/issues/66/14.html
    https://www.praetorian.com/blog/reversing-and-exploiting-embedded-devices-part-1-the-software-stack
    http://developers-club.com/posts/274617/
    http://davidjwalling.blogspot.com/2016/10/radare2-redux-single-step-debug-64-bit.html
  Detouring
    http://www.doc.ic.ac.uk/teaching/distinguished-projects/2012/m.kwan%2520.pdf

    https://linux.conf.au/wiki/Tutorials/Reverse_engineering_embedded_software_using_Radare2
    https://github.com/pastcompute/lca2015-radare2-tutorial
    https://github.com/pastcompute/radare2
  IDA cmp
    http://solidsec.blogspot.com/2015/10/tool-radare-2-open-source-alternative.html
    wine: ida $ paci wine wine-mono wine_gecko
  Hack collaboration tools
    http://lockboxx.blogspot.com/2015/11/cooperative-infrastructure-for-security.html
  Reverse
    https://insinuator.net/2016/08/reverse-engineering-with-radare2-intro/
    https://insinuator.net/2016/08/reverse-engineering-with-radare2-part-1/
    https://insinuator.net/2016/08/reverse-engineering-with-radare2-part-2/
    https://insinuator.net/2016/10/reverse-engineering-with-radare2-part-3/
  !!! Tools
    http://wiki.yobi.be/wiki/Reverse-Engineering
    http://pax0r.com/staff/tools2016/
  DEBUG
    http://reverseengineering.stackexchange.com/questions/11207/how-to-debug-like-gdb-with-radare2
    https://github.com/radare/radare2/wiki/Migration-from-ida-or-GDB

ALSO
  inguma, bokken, pyew
    http://ingumadev.blogspot.com/

Radare2 in docker
  http://jango.si/post/running-radare2-in-docker/


%% USAGE
  > e asm.syntax = att
  See mips
    radare2 -A -a mips ./libsome.so
  Reopen
    oo
  Info on cmd
    rasm2 -w <cmd>
    rasm2 -a mips -b32  -d 27586001
    radare2 -a mips -b32 file.bin
  Demangle
    e asm.demangle = true
    e bin.demangle = true
    : You can grep through the output for all the vars that have the pattern demangle with
    > e??~demangle<Tab>
    Individual demangle
      iD cxx _ZNSo3putEc
  Shift section vma
    (gdb) info files
    [r2]> S 0x0003ef70 0x2c0e5f70 0x6a4a0 0x6a4a0 .text r-x
  Shift base address
    Load at base address: offs = 0 (elf header)
      $ r2 -a mips -B $((text_va - text_offs)) lib.so  # E.G. $((0x6e81e120-0x27120))
      OR: e bin.baddr = 0x6e81e120
      * works for PIE binds
      * .so have 'va' => so use 'baddr'
    Map file at given address
      !!! -m is suposed to be used only to map the paddr
      $ r2 -m 0x6e81e120 lib.so   # BAD: don't work ?
    > oa 0x6e81e120 ./lib.so      # BAD: don't work ?
    > o ./lib.so 0x6e81e120       # BET: seems to work
      NOTE: open library twice -- at beginning and then at address of choice
        => ALT: use actual ELF binary as first one
  Disassemble
    # aaa
    pd
  Map region as function '_clean'
    af _clean 0x2c0eb104
    pdf@_clean
  Disasm
    radare2 -c 'aa;pdf@main' ./level09
  Analyze stack
    ad@esp
    pxw@esp
  Load-time relocation of shared libs
    http://eli.thegreenplace.net/2011/08/25/load-time-relocation-of-shared-libraries/

  Loading shared libs -- static environment
    EXPL: Why vaddr = ph offset
      https://github.com/radare/radare2/issues/4155
    +++ http://michalmalik.github.io/elf-dynamic-segment-struggles
    ==> https://radare.gitbooks.io/radare2book/content/basic_commands/mapping_files.html
    https://github.com/radare/radare2/issues/4816
    REQ: I can directly ask #radare on freenode
      https://github.com/radare/radare2/issues/1000#issuecomment-94160750

  Regex/filtering ops
    : ?@?
    https://github.com/radare/radare2/issues/5695

CFG
  Analysis speed
    http://radare.today/posts/analysis-by-default/

Shell
  Shell interaction $ radare2 /sbin/init
  [0x000096e9]> pd | wc -l  # (print number of lines in outout!)
  [0x0000974d]> pd `a_program_calculates_address.sh`  # (disassembly, etc)
  [0x0000974d]> pd > somefile.txt  # (redirection)
  [0x0000974d]> !ls -l  # (shell command output)
  [0x0000974d]> f | less  # (browse all flags)
  [0x0000974d]> pD `echo 42`  # (inline substitution, disassemble 42 bytes)


%% Coredump
  https://github.com/radare/radare2/issues/152
  https://github.com/radare/radare2/wiki/Migration-from-ida-or-GDB


  TRY: connecting radare2 to gdbserver ALSO use gdb as gdb server
    https://github.com/radare/radare2/issues/217
    http://sourceware.org/gdb/onlinedocs/gdb/Server.html
    http://sourceware.org/gdb/onlinedocs/gdb/Connecting.html

  REF
    https://2016.hack.lu/
    http://archive.hack.lu/2015/
      http://archive.hack.lu/2015/radare2-workshop-slides.pdf
    https://radare.gitbooks.io/radare2book/content/introduction/basic_debugger_session.html
    http://radare.today/posts/using-radare2/

  Disassemble
    https://samsymons.com/blog/reverse-engineering-with-radare2-part-1/
    $ xxd -p -g4 -c4 -s $((text_off)) lib.so | head | xargs -rn1 rasm2 -a mips -d
    > px @ $pc  # => hexstring 40045c00
    $ rafind2 -x 40045c00 lib.so  # => 0x1debc
    DEV: split any ./core-nm file into ./core-nm/{reg\,load\,inf}/* to repair/analyze corrupted core file
    TODO: activate [multilib] in pacman.conf and FIND binutils-multilib
