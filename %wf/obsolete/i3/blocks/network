#!/bin/bash

PL=/tmp/${LOGNAME}/i3blocks-net
DIR=/sys/class/net
mask='^(w|e|p)'
# if [ ! -d "$DIR/$ifc" ]; then exit 33; fi

# CHECK STATUS
for ifc in $DIR/*; do
    ifc="${ifc##*/}"
    if [[ "$ifc" =~ $mask ]]; then
        IFCS+="$ifc "
        if [[ "$(cat $DIR/$ifc/operstate )" == "up" ]]; then
            state="${ifc:0:1}$state"; state="${state^^}"
        fi
    fi
done
if [[ -z "$state" ]]; then printf "E/W\nE/W\n#DD0000"; exit 0; fi


# CACHE RESULTS -- list of time and IFCS data
prev=( $(cat "$PL") )
curr=( $(date +%s.%0N) $(cat /proc/net/dev | awk '
    $1 ~ "'"$mask"'.*:" { printf $2" "$10" " }' ))
printf "${curr[*]}" > "$PL"

# TOTAL:
# BEGIN { dl=0; up=0 }
# $1=="eth0:" || $1=="wlan0:" { dl+=$2; up+=$10 }
# END { printf dl" "up" " }


# DIFF
for i in ${!curr[*]}; do
    delta[$i]=$( awk 'BEGIN { printf "%s",('"${curr[$i]} - ${prev[$i]}"')}' )
done


# CALCULATE RATE
for i in 0 1; do
    dd="( ${delta[$(($i+1))]} + ${delta[$(($i+3))]:-0} ) / ${delta[0]} / 1024"
    rate=$( awk 'BEGIN{ printf "%.2f",('"$dd"')}' )
    if [ ${rate%.*} -le 1024 ]; then rate="${rate}K";
    else rate=$( awk 'BEGIN{ printf "%.2fM",('"$rate/1024"')}' ); fi
    bx[$i]=$rate
done



# EVENTS
case "$BLOCK_BUTTON" in
    1)  ifc=$(sed -r "s/.* (${state,,}\w+) .*/\1/" <<<" ${IFCS[*]} ")
        # WLAN DETAILS
        # apt-get install wavemon | wlan0 ncurses monitor
        case $state in W*)
            buf=$( iwconfig $ifc 2>&1| sed -n "
                s/.* ESSID:\"\(.*\)\".*/ssid=\1;/p;
                s/\s*Bit Rate=\([0-9]*\).*/mbs=\1;/p;
                s/\s*Link Quality=\(\S*\) .*/qual=\1;/p" )
            eval "$buf" ;;
        *) mbs=$(cat /sys/class/net/$ifc/speed)
        ;; esac

        ipaddr=$(ip addr show ${ifc} | sed -n 's|.*\s*inet \([0-9\.]*\)/.*|\1|p')
        text="$state (${ssid} ${mbs}Mb/s) $ipaddr"; color=''
        ;;

    3) text=$( awk 'BEGIN { printf "↓%sM ↑%sM",'"
        int((${curr[1]}+${curr[3]:-0})/1024/1024),int((${curr[2]}+${curr[4]:-0})/1024/1024)
        "'}' ); text="$state $text"; color='#DD9900'
        ;;

    *) text="$state ↓${bx[0]} ↑${bx[1]}"; color='#00AA00' ;;
esac
# total=(bx0+bx1) #↕

printf "$text\n$text\n${color:+$color\n}"


# watch -n 1 cat /proc/net/wireless | periodically calling

#"/dev/shm/measure-net-speed"   # temporary (running) filesystem

# IF NO SUCH PATH: /proc/net/dev
#  eth0=$DIR/eth0/statistics
# wlan0=$DIR/wlan0/statistics
# read eth0_rx < "${eth0}/rx_bytes"
# rx/tx -- incoming/outgoing
# $(cat "${eth0}/rx_bytes") $(cat "${eth0}/tx_bytes")
# $(cat "${wlan0}/rx_bytes") $(cat "${wlan0}/tx_bytes")

# IF NO SUCH PATH: /sys/class/net/eth0/statistics
# FL=/tmp/net-speed-devs
# if [ ! -f "$FL" ]; then # Does once after boot, then uses cached.
#     find "/sys/devices/pci0000:00/" -name "statistics" > "$FL"
# fi
#  eth0=$( sed -n '/eth0/{p;q}'  "$FL" )
# wlan0=$( sed -n '/wlan0/{p;q}' "$FL" )
