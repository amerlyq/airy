#!/bin/bash -e

VNM=arch32k
SERIAL=/tmp/vbox-${VNM:?}
PTYCOM=/tmp/$VNM

# ALT: printf "\n%s\n" 'root' | nc -U "${SERIAL:?}"
# ALT:(GUI) VBoxManage startvm arch32k

[[ $1 || ! -e $PTYCOM ]] ||
  exec picocom --baud 115200 --flow n --databits 8 --parity n $PTYCOM

for nm in vboxdrv vboxnetflt vboxpci vboxnetadp
do lsmod | grep -q "^$nm\>" || sudo modprobe -a "$nm"; done
VBoxHeadless --startvm "$VNM" --vrde off &

close(){ ! VBoxManage list runningvms | grep -q "\<$VNM\>" ||
  VBoxManage controlvm "$VNM" poweroff; }
trap 'close' INT EXIT QUIT TERM ERR

do_sleep() { sleep "$1" & { while kill -0 $! >/dev/null 2>&1
  do printf "."; sleep 0.5; done; echo; }; }

do_sleep 8
#=>  Press <Tab> to edit boot string, add 'console=ttyS0', press <Enter>
sed 's/\s*#.*$//; /^\s*$/d' <<EOTKEYS |
0f 8f 39 b9  # <Tab><Space>
2e ae 18 98 31 b1 1f 9f 18 98 26 a6 12 92         # 'console'
0d 8d 14 94 14 94 15 95 36 1f 9f b6 0b 8b 33 b3   # '=ttyS0,'
02 82 02 82 06 86 03 83 0b 8b 0b 8b 31 b1 09 89   # '115200n8'
1c 9c  # Enter
EOTKEYS
while read line; do
  VBoxManage controlvm "$VNM" keyboardputscancode ${line:?}
done

socat -d -d $SERIAL PTY,link=$PTYCOM &
wait
