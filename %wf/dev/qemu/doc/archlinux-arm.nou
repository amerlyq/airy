%%%% ArchLinuxARM / RaspberryPI / Cloud

  [_] TRY: User Mode Linux instead of Qemu ※⡞⡲⠮⠦

INFO
  ++ Build Your ARM Image for QEMU – Medicine's Blog ※⡞⡫⠮⣨
    https://medicineyeh.wordpress.com/2016/03/29/buildup-your-arm-image-for-qemu/
  TUT Emulate Raspberry Pi with QEMU | graznik.de ⌇⡞⡫⠘⡤
    http://graznik.de/posts/emulate-raspberry-pi-with-qemu/
    $ wget https://github.com/dhruvvyas90/qemu-rpi-kernel/raw/master/kernel-qemu-4.4.34-jessie
    $ wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-latest.tar.gz
    SRC dhruvvyas90/qemu-rpi-kernel: Qemu kernel for emulating Rpi on QEMU ⌇⡞⡫⠘⡭
      https://github.com/dhruvvyas90/qemu-rpi-kernel/
    SRC Raspberry Pi | Arch Linux ARM ⌇⡞⡫⠘⡳
      https://archlinuxarm.org/platforms/armv6/raspberry-pi
  Using QEMU to emulate a Raspberry Pi ⌇⡞⡫⠨⡷
    https://blog.agchapman.com/using-qemu-to-emulate-a-raspberry-pi/
  Emulate Raspberry Pi with QEMU | Azeria Labs ⌇⡞⡫⠰⡯
    https://azeria-labs.com/emulate-raspberry-pi-with-qemu/


ALSO
  debian - Building and running a ARM system image with QEMU? - Unix & Linux Stack Exchange ⌇⡞⡫⠧⣷
    https://unix.stackexchange.com/questions/470210/building-and-running-a-arm-system-image-with-qemu
  Running virtualized x86_64 and emulated arm64 Ubuntu cloud images using QEMU ⌇⡞⡫⠨⡅
    https://gist.github.com/george-hawkins/16ee37063213f348a17717a7007d2c79
  Generic ARM Cortex A9 image for QEMU – nerves_system_qemu_arm v1.0.0 ⌇⡞⡫⠰⡠
    https://hexdocs.pm/nerves_system_qemu_arm/readme.html


% Clean guest
  Arch + virtio
    https://bbs.archlinux.org/viewtopic.php?id=133623
    http://allskyee.blogspot.com/2013/12/over-weekend-i-decided-to-give-arch.html
    https://turlucode.com/qemu-kvm-on-arch-linux-guide/
    http://lifeisabug.com/kvm-virtualization-arch-linux-host-system-qemu-virtio-hugepages-systemd/
  Create user w/o password
    $ passwd -d user
  Setup eth0/DHCP
  Setup 'sshd'
    PermitEmptyPasswords yes
    UsePAM no
  Setup sudo
    ALL = (ALL) NOPASSWD: ALL


% Bootloader / ArchISO / UEFI
  ADD: kernel options
  Menu: <Tab> to open kernel cmdline editor
    console=ttyS0
    console=ttyS0,115200n8
