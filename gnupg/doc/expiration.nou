Extend expiration date of subkey

  Import multihost master key from encrypted USB flash-drive
    $ sudo mount /dev/sdb /mnt
    # $ git annex unlock /path/to/tomb/secu.luks
    # $ r.tomb-backup -S '' -T /path/to/tomb -n secu -m
    $ cd /mnt
    $ gpg --import ./amerlyq.gpg-{public,private}.asc

  Extend expiration date of choosen subkeys (sign + encrypt)
    $ gpgkey=amerlyq@gmail.com
    $ gpg --edit-key $gpgkey
    gpg> key 1, key 2, expire, y, 6m, y, save

  (optional) Send the updated key to the keyservers
    $ gpg --send-key --keyserver <server> $gpgkey

  Re-export master to flash-drive, keeping only subkeys (SEE: ./new-key.nou for details)
    $ gpg --export-secret-keys --armor $gpgkey > amerlyq.gpg-private.asc
    $ gpg --export --armor $gpgkey > amerlyq.gpg-public.asc
    $ gpg --export-secret-subkeys $gpgkey > subkeys.asc
    $ gpg --delete-secret-key $gpgkey
      = yes, yes, delete, delete, delete
    $ gpg --import subkeys.asc
      MAYBE: share subkeys.asc
    $ shred --remove subkeys.asc
    $ mv -vft /mnt -- amerlyq.gpg-{public,private}.asc
    !! Verify that gpg -K shows a "sec#" instead of just "sec" for your private key.
    $ gpg -K

  Share encryption key to other devices (only the latest encryption key is actually used by identity)
    $ gpg --export-secret-subkeys --armor --output amerlyq.gpg-encrypt.asc "$(gpg --list-secret-keys --keyid-format short | awk '$4=="[E]"{print substr($2,index($2,"/")+1)}')\!"

  MAYBE: "trust" them on other devices
    [⡞⣲⡈⣝] FIXED:ERR:
      gpg: 01BA4719C80B6FE9: There is no assurance this key belongs to the named user
      gpg: /dev/shm/pass.jhC6g0sC24m6e/WeN5Bd-my-host-user.txt: encryption failed: Unusable public key
    $ gpg --list-secret-keys --keyid-format long
    $ gpg --edit-key 01BA4719C80B6FE9
     ⦅gpg⦆ trust, 5, save
     SECU: use (5) trust=ultimate to be able to encrypt new files
    $ gpg -K
