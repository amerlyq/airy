#!/usr/bin/nft -f
#%SUMMARY: simple stateful firewall for ipv4/ipv6
#%USAGE: /etc/nftables.conf $ systemctl enable nftables && systemctl start nftables && nft list ruleset
#%REF: https://wiki.archlinux.org/index.php/Nftables
#%E.G. /usr/share/nftables/*
#%WARN! don't forget to change SSH port accordingly

flush ruleset

table inet filter {
    chain input {
        type filter hook input priority 0; policy drop;

        # Defaults
        ct state {established,related} accept comment "Accept traffic originated from us"
        ct state invalid drop comment "Drop invalid connections"
        iifname lo accept comment "Accept any localhost traffic"


        # Accept ICMP and IGMP:
        ip6 nexthdr icmpv6 icmpv6 type {
            destination-unreachable, packet-too-big, time-exceeded,
            parameter-problem, mld-listener-query, mld-listener-report,
            mld-listener-reduction, nd-router-solicit, nd-router-advert,
            nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit,
            ind-neighbor-advert, mld2-listener-report
        } accept comment "Accept ICMPv6"

        ip protocol icmp icmp type {
            destination-unreachable, router-solicitation, router-advertisement,
            time-exceeded, parameter-problem
        } accept comment "Accept ICMP"

        ip protocol igmp accept comment "Accept IGMP"


        # New udp traffic will jump to the UDP chain
        ip protocol udp ct state new jump UDP
        # New tcp traffic will jump to the TCP chain
        ip protocol tcp tcp flags & (fin|syn|rst|ack) == syn ct state new jump TCP

        # Reject all traffic that was not processed by other rules:
        ip protocol udp reject
        ip protocol tcp reject with tcp reset
        counter reject with icmp type prot-unreachable comment "Count any other traffic"
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }

    chain UDP {
        # tcp dport 53 accept comment "Accept DNS"
    }

    chain TCP {
        tcp dport 22 accept comment "Accept SSH"
        # tcp dport 80 accept
        # tcp dport 443 accept
        # tcp dport 53 accept comment "Accept DNS"
    }
}
