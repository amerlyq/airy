#!/usr/bin/nft -f
#%SUMMARY: simple stateful firewall for ipv4/ipv6
#%USAGE: $ sudo nft -f ./$0
#%INSTALL: /etc/nftables.conf $ systemctl enable nftables && systemctl start nftables && nft list ruleset
#%
#%HACK: edit rules in-place $ sudo nft list ruleset | vipe | sudo nft -f-
#%REF: https://wiki.archlinux.org/index.php/Nftables
#%E.G. /usr/share/nftables/*
#%  https://github.com/weirdNox/dotfiles/blob/master/other/nftables.conf.base
#% SEE: https://dwaves.org/2020/01/12/the-second-nftables-howto-it-is-fast-and-complicated/
#%WARN! don't forget to change SSH port accordingly

flush ruleset

table inet filter {
    chain input {
        type filter hook input priority 0; policy drop;

        # Defaults
        ct state {established,related} accept comment "Accept traffic originated from us"
        ct state invalid drop comment "Drop invalid connections"
        iif lo accept comment "Accept any localhost traffic"
        iifname "tun0" jump USB_android comment "Filter USB traffic"

        # Accept ICMP and IGMP:
        ip6 nexthdr icmpv6 icmpv6 type {
            destination-unreachable, packet-too-big, time-exceeded,
            parameter-problem, mld-listener-query, mld-listener-report,
            mld-listener-reduction, nd-router-solicit, nd-router-advert,
            nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit,
            ind-neighbor-advert, mld2-listener-report
        } accept comment "Accept ICMPv6"

        ip protocol icmp icmp type {
            destination-unreachable, router-solicitation, router-advertisement,
            time-exceeded, parameter-problem
        } accept comment "Accept ICMP"

        ip protocol igmp accept comment "Accept IGMP"


        # Test for both TCP/UDP traffic
        # meta l4proto {tcp, udp} @th,16,16 1714-1764 accept comment "Accept KDEConnect"

        # New udp traffic will jump to the UDP chain
        ip protocol udp ct state new jump UDP
        # New tcp traffic will jump to the TCP chain
        ip protocol tcp tcp flags & (fin|syn|rst|ack) == syn ct state new jump TCP

        # Reject all traffic that was not processed by other rules:
        ip protocol udp reject
        ip protocol tcp reject with tcp reset

        # FIND: how to show counters $ sudo nft list counters table inet filter
        #   REF: https://wiki.nftables.org/wiki-nftables/index.php/Stateful_objects
        #   USAGE: https://serverfault.com/questions/971633/how-to-reset-nftable-counter
        # REF: https://wiki.nftables.org/wiki-nftables/index.php/Counters
        #   <= "counter" after/before statement has different behavior
        # ERR:(named): counter name "rejected" reject with icmp type prot-unreachable comment "Reject and count other types of traffic"
        counter reject with icmp type prot-unreachable comment "Reject and count other types of traffic"
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        ct state {established,related} accept comment "Forward existing NAT traffic"

        # NOTE: for tun0 MAC is not set
        ip saddr 10.1.1.2/24 iifname "tun0" oifname "wlo1" accept comment "Accept Simple-RT (reverse-USB-tethering)"
        ether saddr 00:d8:61:48:6f:68 iifname "enp0s25" oifname "wlo1" accept comment "Route WiFi to LAN PC on same subnet"
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }

    chain UDP {
        # udp dport 53 accept comment "Accept DNS"
    }

    chain TCP {
        tcp dport 22 accept comment "Accept SSH"
        # tcp dport 3389 accept comment "Accept VBox/VRDP"
        # tcp dport 8080 accept comment "Accept pacman/darkhttpd"

        # tcp dport 80 accept
        # tcp dport 443 accept
        # tcp dport 53 accept comment "Accept DNS"
    }

    chain USB_android {
        # NOTE: for tun0 MAC is not set
        ip saddr != 10.1.1.2/24 drop comment "Drop everything beside Simple-RT"

        udp dport 21027 accept comment "Accept Syncthing (broadcast)"
        tcp dport 22000 accept comment "Accept Syncthing (listen)"

        # SRC: https://community.kde.org/KDEConnect
        # udp dport 1714-1764 accept comment "Accept KDEConnect (UDP)"
        # tcp dport 1714-1764 accept comment "Accept KDEConnect (TCP)"
        # SRC: https://unix.stackexchange.com/questions/448209/how-to-match-both-udp-and-tcp-for-given-ports-in-one-line-with-nftables
        meta l4proto {tcp, udp} @th,16,16 1714-1764 accept comment "Accept KDEConnect"
    }
}

# NOTE:(inetâ†’ip): due to large address space NAT is not needed for IPv6
table ip nat {
    chain prerouting {
        type nat hook prerouting priority 0; policy accept;
    }

    chain postrouting {
        type nat hook postrouting priority 100; policy accept;

        # NOTE: for tun0 MAC is not set :: USE: (ip saddr 10.1.1.2/24) OR (ether saddr 00:d8:61:48:6f:68)
        oifname "wlo1" masquerade comment "Replace src addr with primary IP of WAN ifc"
    }
}
