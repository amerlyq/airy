#!/bin/bash
#%USAGE: $ ./$0 [<history|secrets|chat>...]
#%ONELINE:(fast): $ tar -I lz4 --xattrs -cpvf "$(hostname)-$(date +%Y%m%d_%H%M%S).tar.lz4" ...
#%  CMP: https://catchchallenger.first-world.info/wiki/Quick_Benchmark:_Gzip_vs_Bzip2_vs_LZMA_vs_XZ_vs_LZ4_vs_LZO#Compression_time
#%PERF: 6 min = 13 topics = 4.7GB total
set -euo pipefail

# [_] TRY: /net/backup BAD? store backup directly to NAS -- may corrupt transmitted archives
# DEV:USE: "pigz" -- parallel gzip
# BET:PERF: "zstd" from libarchive instead of "xz"
# BET:TRY: "borg"

## CHG: place into synced dir from profile
dst=${BACKUP_DIR_ROOT:-/tmp}
args=( "$@" )


## Store all permissions and extended attributes.
#   (otherwise many programs will stop working!)
make_backup(){ local f nm=$1
  # shellcheck disable=SC2076
  ((${#args[@]})) && [[ ! " ${args[*]} " =~ " $nm " ]] && return
  f=$dst/$nm-$(hostname)-$(date +%Y%m%d_%H%M%S).tar.gz
  sed -r "
    s/^\s+//              # indenting spaces
    /(^#|  # ).*$/s///    # comments (separate and inline)
    s/\s+$//              # trailing spaces (ALSO: left before comments)
    /^\s*$/d              # empty lines
    s|~|$HOME|            # expand home dir
  " | tar --xattrs -pT- -czvf "$f"
  # --exclude-from="$fexc"
}

#%INFO: backup history and other local db (both binary and textual)
# ALT: use bash array with globs in sep files -- instead of parsing them myself
make_backup history <<EOT
  ~/.local/share/airy/dict-words-en.txt
  ~/.local/share/airy/dict-words-ru.txt
  ~/.cache/vim/plugins/mru_file
  ~/.config/mpd/history
  # ~/.config/selfspy/selfspy.sqlite
  ~/.config/VirtualBox

## cli
  ~/.local/share/gdb/history
  ~/.local/share/zsh/history
  ~/.config/radare2/history
  # ~/.fbless_save
  ~/.ipython/profile_default/history.sqlite
  ~/.bash_history
  ~/.jhistory
  ~/.local/share/zathura
  # ~/.sbcl_history
  ~/.sqlite_history
  ~/.w3m/history
  ~/.wget-hsts
EOT

## browsers (frequently updating cache)
ffprf=$(find ~/.mozilla/firefox -maxdepth 1 -type d -name '*.default' -print -quit)
make_backup browsers <<EOT
  ~/.config/qutebrowser/autoconfig.yml          # transient settings
  ~/.local/qute-proxy                           # additional session
  ~/.local/share/qutebrowser/cmd-history
  ~/.local/share/qutebrowser/history.sqlite
  $ffprf/places.sqlite                          # bookmarks
  $ffprf/sessionstore.js                        # opened tabs
  $(find "$ffprf/sessionstore-backups" -maxdepth 1 -type f \( -name '*.js' -o -name '*.js-*' \) -print)
EOT



# BET:DEV:SECU create versioned *tomb* for secrets backup
make_backup secrets <<EOT
  ~/.android                  # authorized adb shell
  ~/.config/kdeconnect        # authorized clipboard sharing
  ~/.config/syncthing         # certificates and ids
  ~/.gnupg                    # export keys
  ~/.password-store           # NEED: ~/.gnupg
  # ~/.password.tomb
  # ~/.password.tomb.key
  ~/.ssh                      # copy keys
  ~/.weechat/certs/nick.pem   # privatkey-login
  # /work/cache/gpg
EOT


make_backup chat <<EOT
  ~/.purple/logs
  ~/.weechat/logs
EOT


# = custom digital presets
make_backup krita <<EOT
  ~/.local/share/krita
  ~/.cache/krita
EOT

# = syncthing folders
make_backup sync <<EOT
  # ~/books
  # ~/mems
  ~/sync
EOT

make_backup aura <<< ~/aura             # = all personal repos
# make_backup gamesaves <<< ~/gamesaves   # = aggregated game saves
# make_backup hub <<< ~/hub               # = code examples and teaching materials
make_backup research <<< ~/research     # = ongoing research topics
make_backup vim <<< ~/.cache/vim/cache  # = vim files backups
make_backup work <<< ~/work             # = archived work topics
# make_backup mail <<< ~/.mail            # = offline emails
# make_backup doc <<< /work/doc           # = working notes

# make_backup dld <<< /_dld               # = unsorted downloads (always move media files to /data)

make_backup etc <<< /etc ||:      # = system-wide user configs (skipping passwords w/o sudo)
# make_backup srv <<< /srv          # = ftp/http/tftp/vbox-share/etc
# make_backup usrsrc <<< /usr/src   # = some downloaded sources

# ALSO: defects analysis reports
# find /work/{bug,task,task.done,task.seized} -name '*.nou' -print0 | tar -cvzf analysis-$(hostname)-$(date +%Y%m%d_%H%M%S).tar.gz --null -T -

# ALSO:
# /games and /opt must backup filelist instead of content
#   -- to be able to restore same hierarchy on demand e.g. to remember active games
# ~~ same for ./odd-packages installed from pacman
# ~~ and history of everything which we installed into ~/.cache/aurutils/
