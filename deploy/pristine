#!/bin/bash
# pristine -- древний; первоначальный, изначальный; чистый, нетронутый; неиспорченный
# Manual install: -t_egp_bcxz

source ~/.bash_export
source ~/.bash/functions
source ~/.bash/functions.d/packages
amScriptDir -s
if [ -z "$SCRIPT_DIR" ]; then echo "Error: SCRIPT_DIR"; exit 1; fi

## Dir for manual install and compilation (beside ppa)
mkdir -p "$CURR_DIR_PKG"
PRS_DIR="$SCRIPT_DIR/${SCRIPT_PATH##*/}.d"


## Parse my own set of params
OPTS_SET=($@)
if [ $# -eq 0 ]; then
    OPTS_SET=( $CURR_PKG_LIST )
fi

if [ "$1" == "-u" ]; then
    sudo apt-get update -y
    sudo apt-get upgrade -y
    # sudo apt-get dist-upgrade -y #&& sudo reboot
else
    # Installing
    echo "OPTS_SET: ${OPTS_SET[@]}"
    echo "FROM: ${PRS_DIR}"
    for pr in "${OPTS_SET[@]}"; do
        printf "$(tput setaf 2)--- INSTALL: ${pr}.pr\n$(tput sgr0)"
        "$PRS_DIR/${pr}.pr"
    done 2>&1 | tee /tmp/pristine.log | sed -n -e "
        /^E:.*/ s//\t$(tput setaf 1)\0$(tput sgr0)/p
        /^\(.*\) is already the newest version\./ s//\t$(tput setaf 3)\1\*$(tput sgr0)/p
        /^The following extra packages/,/^After this operation/p
        /.*/ s//\./p
        " -e '/^\./N'
        # " |  awk '{ s=$0; if(s==".") { printf $s } else { printf "\n"$s } }'
        #
fi


# MAN
# if add-apt-repository not found:  sudo apt-get python-software-properties
# to remove unavailable ppa:        sudo apt-get install ppa-purge, sudo ppa-purge [the ppa you want to remove]
#   ALT: Manually edit 'sudo vim /etc/apt/sources.list.d/*'
# to upgrade:                       sudo do-release-upgrade
# remove packages:                  sudo apt-get autoremove ..  or  sudo apt-get remove --purge

