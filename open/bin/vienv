#!/bin/bash
set -euo pipefail

case ${1-} in -r) bReplace=1; shift ;; esac
shl=$1
nm=${2:-$(mktemp)}
env='#!/usr/bin/env'

if [[ ${bReplace-} || ! -f $nm ]]; then
    # Python recognizes encoding: "coding[:=]\s*([-\w.]+)"
    case "$shl"
    in  pl) sb="#!/usr/bin/perl\nuse warnings FATAL => 'all';\nuse autodie qw(:all);\nuse strict;\nuse v5.14;  # for s///r"
    ;; py2) sb="$env python2\n# vim: fileencoding=utf-8"
    ;; py3) sb="$env python3"
    ;;  sh) sb="$env bash\nset -euo pipefail"
    ;;  zh) sb="#!/usr/bin/zsh -eu\nsetopt pipe_fail"
    ;;   *) sb="$env $shl"
    esac
    printf "%b\n\n\n" "$sb" > "$nm"  # Compatible with 'echo -e'
    chmod 755 "$nm"
fi

if [[ -t 0 ]]; then  # input from terminal
    # OR: vim "$nm" -c "normal i$env $shl<CR>"
    $EDITOR +'$' "$nm"
else  # redirected input from file '<' or pipe '|'
    cat >> "$nm"
fi
