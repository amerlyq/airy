⌇⡟⠔⣺⢨

[_] XXX: "THEME:"
[_] MAYBE: "TBD" and "WiP" "PoC" | "MIND" .vs. "CARE" | "THEO" INSIGHT | "R&D" "ROADMAP"
[_] MAYBE: REC:RECOMM:RECOMMENDATION:  https://www.quora.com/What-is-the-correct-abbreviation-of-recommend
[_] MAYBE: legalize DB|DBs|FS|AI DofD PR
[_] ALSO: OPTM|optim(al/um) + OPTZ|optimize
[_] ALSO: LORE:KL:KNWL:KNOWLEDGE:KNOWLEDGE-LINK // ALT:(KL): kernel language | key lemma | key light | keyboard layout
[_] NOTE: PA=PRIA BUT $ r.dict-regex '^p\S*\sa\S*$'
[_] HACK:(low-level): -> LOVEHACK :) | ll-details:LLD / detail-of-impl:DofI/ImD | "MAN" (do the same manually)
[_] CHG? REQ => RQST -- to strongly differentiate from RQ
OBSOL: discard ALGO => ALG

[X] EXPL: used <DECI> because DEC==decrement/decrease

DECI
  [_] ":::" == "SOL" .vs. "SOLU" .vs. "SOLV" == ?"ANS"? == "SUM"
    VIZ: solace solemn soleness solicit solidarity solidify solitary solution solve solving
  [_] "KL" == "KNOWLEDGE" == "LORE"
    VIZ: kernel language | key lemma | key light | keyboard layout
  ?? [_] "EST" == "ESTIMATE"
    VIZ: $ r.dict-regex '^est\S+$'


%% Latin

  check = prove = assert = verify
  check:maybe = lemma = assumption = guess = conjecture = hypothesis
  Latin abbrev: SEE https://en.wikipedia.org/wiki/List_of_Latin_abbreviations
  E.G. exampli gratia (~ example given)
  I.E. id est (~ in especial, effectively)
  I.A. inter alia (~ among other things)
  VIZ. videlicet (~ precisely: implies (near) completeness)
  N.B. nota bene (~ pay attention, take notice) == NOTE, ATT
  w.r.t. with regard to (USAGE: https://github.com/gperftools/gperftools/wiki/gperftools'-stacktrace-capturing-methods-and-their-issues)
