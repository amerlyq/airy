" vim:ts=2:sw=2:sts=2
if &compatible| set nocompatible |en

fun! _cfg(path)  " Must not contain '\n' in path. Compat globpath <v7.4.279
  for f in split(globpath($VIMHOME.'/cfg/', a:path), '\n')
    exe 'source' fnameescape(f)
  endfor
endf

" Set augroup for my vimrc autocmd
augroup MyAutoCmd
  autocmd!
augroup END

" ENH: cat all vimrc in cached version at $VCACHE
"   -- BUT some files contain 'finish' which obstructs merging
"   -- ALSO what to do with _cfg(...) commands left inside scripts?
" ENH: place some cfg in 'post' group to augment some commands/mappings
"   if their respectful plugin is disabled/absent or no plugins at all.

" NOTE: disables all '*/site' packages installed by pacman. SEE :h 'rtp'
set runtimepath=$VIMHOME,$VIMRUNTIME
call _cfg('core/*.vim')
call _cfg('core-cfg/*.vim')
call _cfg('features/'.(has('nvim')        ? 'neovim'  : 'vim'      ).'.vim')
call _cfg('features/'.(IsAndroid()        ? 'android' : 'clipboard').'.vim')
call _cfg('features/'.(IsWindows()        ? 'windows' : 'unix'     ).'.vim')
call _cfg('features/'.(has('gui_running') ? 'gui'     : 'term'     ).'.vim')
call _cfg('dein.vim')
call _cfg('core-post/*.vim')
"" NOTE: Place &rtp fixup after dein#end()
" [runtime] -- used for ./spell and 'before/' folder
set runtimepath-=$VIMHOME,$VCACHE/runtime
set runtimepath^=$VIMHOME,$VCACHE/runtime
set runtimepath+=$VIMHOME/after

let myscriptsfile = "$VIMHOME/scripts.vim"
filetype plugin indent on  " Required!
syntax enable  " 'enable' only sets groups not set yet. Use 'on' to overwrite

try
  if exists('$TMUX') && &t_Co <= 16
    " solarized8_[light|dark][|_[low|high|flat]]
    color slate |else| color solarized8_dark
  endif
catch /^Vim\%((\a\+)\)\=:E185/
  color slate
endtry

" Exec .vimrc in curr dir, but deny itc :autocmd, :shell and :write cmds
" DEPRECATED:(exrc):USE:(vim-localvimrc)
set noexrc secure modeline    " also parse 'vim:...' cmds from comments
