‚åá‚°ü‚¢π‚£ù‚¢Ü

Python IDE

TRY
  [‚°†‚†ç‚£≤‚¢Å] psf/black: The uncompromising Python code formatter ‚åá‚°ü‚¢π‚°á‚°ª
    https://github.com/psf/black
    NICE:HACK: skip reformatting commits $ git blame --ignore-revs-file .git-blame-ignore-revs
  davidhalter/jedi: Awesome autocompletion, static analysis and refactoring library for python ‚åá‚°ü‚¢π‚°á‚†å
    https://github.com/davidhalter/jedi
  neoclide/coc.nvim: Intellisense engine for Vim8 & Neovim, full language server protocol support as VSCode ‚åá‚°ü‚¢π‚°á‚†à
    https://github.com/neoclide/coc.nvim
  [‚°†‚†ç‚£≤‚°≠] numirias/semshi: üåà Semantic Highlighting for Python in Neovim ‚åá‚°ü‚¢π‚°á‚†Ü
    https://github.com/numirias/semshi
  liuchengxu/vista.vim: Viewer & Finder for LSP symbols and tags ‚åá‚°ü‚¢π‚°Ü‚£æ
    https://github.com/liuchengxu/vista.vim
  [‚°†‚†ç‚£≤‚°´] dense-analysis/ale: Check syntax in Vim asynchronously and fix files, with Language Server Protocol (LSP) support ‚åá‚°†‚†ç‚£ó‚¢ª
    https://github.com/dense-analysis/ale
  google/yapf: A formatter for Python files ‚åá‚°†‚†ç‚£ó‚£¢
    https://github.com/google/yapf
    Why do people prefer Black over Yapf? : Python ‚åá‚°†‚†ç‚£≥‚°Ω
      https://www.reddit.com/r/Python/comments/8sbipd/why_do_people_prefer_black_over_yapf/
  [‚°†‚†ç‚£≤‚°©] Introducing Isort 5 - isort ‚åá‚°†‚†ç‚£°‚£ò
    https://pycqa.github.io/isort/docs/major_releases/introducing_isort_5/
  [‚°†‚†ç‚£≤‚°¶] lyz-code/autoimport: Autoimport automatically fixes wrong import statements. ‚åá‚°†‚†ç‚£≤‚°ö
    https://github.com/lyz-code/autoimport
  microsoft/pyright: Static type checker for Python ‚åá‚°†‚†ç‚£≥‚°≤
    https://github.com/microsoft/pyright
    CMP:(mypy.vs.pyright): Sebasti√°n Ram√≠rez on Twitter: ‚åá‚°†‚†ç‚£≤‚¢§
      https://twitter.com/tiangolo/status/1278708545773621248?lang=en


CFG: ALE ‚åá‚°†‚†ç‚£Æ‚£ô
  [_] SEIZE: /home/user/.cache/vim/dein/repos/github.com/psf/black/.git
  community/python-flake8-black 0.2.1-4
    Flake8 plugin to call black as a code style validator
  community/python-flake8-blind-except 0.1.1-4
    A flake8 extension that checks for blind except: statements
  community/python-flake8-debugger 3.2.1-3
    ipdb/pdb statement checker plugin for flake8
  community/python-flake8-docstrings 1.5.0-3
    Plugin to Flake8 to include checks provided by pydocstyle
  community/python-flake8-isort 4.0.0-3
    Flake8 plugin to validate annotations complexity
  community/python-flake8-typing-imports 1.10.1-1
    flake8 plugin which checks that typing imports are properly guarded
  aur/python-flake8-bandit 2.1.0-1 (+1 0.29%)
    Automated security testing using bandit and flake8.
  aur/python-flake8-bugbear 20.11.1-1 (+1 0.00%)
    Plugin for Flake8 finding likely bugs and design problems in your program
  aur/python-flake8-print 3.1.4-1 (+0 0.00%)
    Check for Print statements in python files.


TUT
  Vim for Python in 2020 | Vim From Scratch ‚åá‚°ü‚¢π‚°Ç‚°ß
    https://www.vimfromscratch.com/articles/vim-for-python/
  Setup Neovim for Python Developing ‚Äì SRE ‚åá‚°ü‚¢π‚°É‚¢à
    https://thesre.wordpress.com/2020/01/18/setup-neovim-for-python-developing/

ALSO
  jarolrod/vim-python-ide: Python development config ‚åá‚°ü‚¢π‚°Ç‚¢è
    https://github.com/jarolrod/vim-python-ide
  Using nvim as Python IDE via pynvim? : neovim ‚åá‚°ü‚¢π‚°Ç‚¢ñ
    https://www.reddit.com/r/neovim/comments/axilbq/using_nvim_as_python_ide_via_pynvim/

formatting
  Let's talk formatting again : neovim ‚åá‚°ü‚¢π‚°Ç‚£¶
    https://www.reddit.com/r/neovim/comments/jvisg5/lets_talk_formatting_again/
  lukas-reineke/format.nvim: Neovim lua plugin to format the current buffer with external executables ‚åá‚°ü‚¢π‚°Ç‚£∞
    https://github.com/lukas-reineke/format.nvim

completion
  How to Set Up Code Completion for VIM/NeoVIM ‚åá‚°ü‚¢π‚°Å‚¢¢
    https://www.narga.net/how-to-set-up-code-completion-for-vim/
  Vim | Flow ‚åá‚°ü‚¢π‚°Å‚£†
    https://flow.org/en/docs/editors/vim/
  A guide to modern Web Development with (Neo)vim ‚åá‚°ü‚¢π‚°Ç‚†Ñ
    https://www.freecodecamp.org/news/a-guide-to-modern-web-development-with-neo-vim-333f7efbf8e2/
  neoclide/coc.nvim: Intellisense engine for Vim8 & Neovim, full language server protocol support as VSCode ‚åá‚°ü‚¢π‚°Ç‚†ò
    https://github.com/neoclide/coc.nvim
  ncm2/ncm2: Slim, Fast and Hackable Completion Framework for Neovim ‚åá‚°ü‚¢π‚°É‚£ë
    https://github.com/ncm2/ncm2

OLD ‚åá‚°ó‚£•‚†π‚°õ
  https://github.com/python-mode/python-mode ‚åá‚°û‚†•‚†Æ‚££
  http://www.sontek.net/blog/2011/05/07/turning_vim_into_a_modern_python_ide.html
  http://habrahabr.ru/post/224979/
  http://redkrieg.com/2012/12/11/writing-python-like-a-jedi/
  http://vimawesome.com/plugin/jedi-vim
  http://michiganlabs.com/vim-python-ide/
  http://thibaut.horel.org/blog/using-vim-as-a-python-ide.html

DEBUG
  http://shanit.blogspot.com/2010/06/debugging-python-with-pdb-and-ipython.html ‚åá‚°ò‚†ä‚£à‚¢≥

  +++ [!] puremourning/vimspector: vimspector - A multi-language debugging system for Vim ‚åá‚°†‚†à‚†•‚†æ
    https://github.com/puremourning/vimspector
    Vimspector | Trello ‚åá‚°†‚†à‚†¶‚†û
      https://trello.com/b/yvAKK0rD/vimspector



BUG
  2018-04-01 [X] CRIT: CPU overload on edit of any *.py E.G. ./qutebrowser/config.py
    ::: TEMP: disable python-mode
  [_] BUG: open python file, then ",f" and open new .py -- pycomplete will be broken
    : maybe, something relative: if you open .otl -- you get no syntax highlighting
  2015-09-21 [X] Find vim python completer and debugger
