# REF: https://github.com/rakshasa/rtorrent/wiki/TORRENT-Watch-directories

## Layout
# TODO: make more abstract tags/names or extract configuration into erian
method.insert = cfg.watch_add,  private|const|string, (cat,(cfg.basedir),"watch_add/")
method.insert = cfg.watch_now,  private|const|string, (cat,(cfg.basedir),"watch_now/")
method.insert = cfg.watch_games,private|const|string, (cat,(cfg.basedir),"watch_games/")
method.insert = cfg.watch_ost,  private|const|string, (cat,(cfg.basedir),"watch_ost/")
method.insert = cfg.watch_sda1, private|const|string, (cat,(cfg.basedir),"watch_sda1/")
method.insert = cfg.watch_sda2, private|const|string, (cat,(cfg.basedir),"watch_sda2/")
method.insert = cfg.watch_anime,private|const|string, (cat,(cfg.basedir),"watch_anime/")

## Create directories
execute.throw = mkdir, -p, (cfg.watch_add), (cfg.watch_now),\
    (cfg.watch_games), (cfg.watch_ost), (cfg.watch_sda1), (cfg.watch_sda2), (cfg.watch_anime)

## Watch directories (NEED: unique schedule names)
## NOTE watch directories by inotify (if installed) -- only add or also start downloading
directory.watch.added = (cfg.watch_add), load.verbose
directory.watch.added = (cfg.watch_now), load.start_verbose
## ALT: use scheduler
# schedule2 = watch_load,  11, 10, ((load.verbose, (cat, (cfg.watch_add), "/*.torrent")))
# schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch_now), "/*.torrent")))

# FIXME: use inotify but place each command into function
# method.insert = d.watch_custom, simple, (cat, ..., "$argument.0=", ..., "$argument.1=")
# method.insert = d.watch_custom_games, simple, (cat,"d.watch_custom_games=",(cfg.watch_games),"/games/_dld/")
# directory.watch.added = (cfg.watch_games), d.watch_custom_games=
# ...

# TRY:DEV: first move file into history on scheduller, and only after that -- load it as torrent
schedule2 = watch_games, 10, 10, (cat, "load.start_verbose=", (cfg.watch_games), "/*.torrent",\
    ",d.directory.set=", "/games/_dld/", ",d.custom1.set=Games")
schedule2 = watch_ost, 13, 10, (cat, "load.start_verbose=", (cfg.watch_ost), "/*.torrent",\
    ",d.directory.set=", (cat,"/media/",(system.env,USER),"/sda1/_OST/"), ",d.custom1.set=Music")
schedule2 = watch_sda1, 11, 10, (cat, "load.start_verbose=", (cfg.watch_sda1), "/*.torrent",\
    ",d.directory.set=", (cat,"/media/",(system.env,USER),"/sda1/_dld/"), ",d.custom1.set=Games")
schedule2 = watch_sda2, 12, 10, (cat, "load.start_verbose=", (cfg.watch_sda2), "/*.torrent",\
    ",d.directory.set=", (cat,"/media/",(system.env,USER),"/sda2/_dld/"), ",d.custom1.set=Games")
schedule2 = watch_anime, 14, 10, (cat, "load.start_verbose=", (cfg.watch_anime), "/*.torrent",\
    ",d.directory.set=", (cat,"/media/",(system.env,USER),"/sda2/anime"), ",d.custom1.set=Video")


## ALT: directly download into specific location (incremental polling time)
# schedule = watch_directory_2,20,10,"load.start=/media/rtorrent/watch/Books/*.torrent,d.directory.set=/media/rtorrent/downloading/Books/,d.custom1.set=Books"
# schedule = watch_directory_3,21,10,"load.start=/media/rtorrent/watch/TV/*.torrent,d.directory.set=/media/rtorrent/downloading/TV/,d.custom1.set=TV"
# schedule = watch_directory_4,22,10,"load.start=/media/rtorrent/watch/Movie/*.torrent,d.directory.set=/media/rtorrent/downloading/Movie/,d.custom1.set=Movie"
# schedule = watch_directory_5,23,10,"load.start=/media/rtorrent/watch/Software/*.torrent,d.directory.set=/media/rtorrent/downloading/Software/,d.custom1.set=Software"
#
## ALT:TODO:SEIZE: dynamic move torrent by corresponding watch directory
# https://github.com/rakshasa/rtorrent/wiki/Common-Tasks-in-rTorrent#move-completed-torrents-to-different-directory-depending-on-watch-directory
## BET: move based on content heuristics
# https://rtorrent-docs.readthedocs.io/en/latest/use-cases.html#versatile-move

# schedule2 = watch_directory_1,10,10,"load.start=~/Download/watch_stuff1/*.torrent,d.custom1.set=~/Download/stuff1/"
# schedule2 = watch_directory_2,10,10,"load.start=~/Download/watch_stuff2/*.torrent,d.custom1.set=~/Download/stuff2/"

# method.insert = d.data_path, simple, "if=(d.is_multi_file), (cat,(d.directory),/), (cat,(d.directory),/,(d.name))"
# method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="
# method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.data_path=,$d.custom1="
#
#
# ALT: move by label subdir
# https://unix.stackexchange.com/questions/127382/move-completed-torrents-in-rtorrent-according-to-label
# https://www.krank.se/2014/06/25/rtorrent-magic-moving-finished-torrents-based-on-labels/
