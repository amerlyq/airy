%%%%% GIT

SEE
  http://nuclearsquid.com/writings/git-tricks-tips-workflows/

  Git extensions to provide high-level repository operations for Vincent Driessen's branching model.
    https://github.com/nvie/gitflow


%% aliases

  [_] FIXME: graph for current dir only
    $ glg. = glg -- .
    $ gdf. = gdf -- .
    THINK:ALT: use $PWD by default, use glg@ for all


%% r.git

https://github.com/timcharper/git-helpers
https://github.com/nigelbabu/git-repo-tools
! https://github.com/Prelang/g  # zsh

Nested repos
  [_] zsh git status must show original repo name like: (repo/master)
    : Because repos are renamed into dirs and its hard to remember
    : For main repo it's not the case -- because current pwd has its name
    ? Maybe include original repo name in this info ?
      = container/branch/dir : repo/master

% TODO
  [_] add binary diff driver to compare ./vim/en.utf-8.add.spl
  [_] USE: include/includeIf directive to symlink config directly instead of manual composition
  2018-02-27 [X] FIX "No newline at end of file"
    ::: newline really must be fixed (vim simply doesn't show last newline)
    per-file attributes filter
      https://stackoverflow.com/questions/1050640/vim-disable-automatic-newline-at-end-of-file
    vim auto-eol
      https://stackoverflow.com/questions/14171254/why-would-vim-add-a-new-line-at-the-end-of-a-file
  [_] NOTE: 'git augment' -- even share for doc can be changed == WTF?
  [_] FIND gittemplate -- что это и зачем
  [_] FIX ignore repo insides -- I don't wan't to update even ext pkgs inside projects
  [_] MOVE: multi-thread workers/jobs into sep script in //shell/zsh
  [_] TODO: enhance status to show for all branches (at least pull/push)
  [_] TODO: show unpushed branches
    http://stackoverflow.com/questions/7773939/show-git-ahead-and-behind-info-for-all-branches-including-remotes
  [_] FIXME: remove currently active branch from showed list
  2017-01-03 [X] THINK: replace my jobs by 'parallel' (and extract jobs in separate script)
    OR:TRY: xarg -P 8
    MAYBE:(parallel) will be able to sort output and print as query available?
      https://www.gnu.org/software/parallel/parallel_tutorial.html
      $ printf "%s\n" ./**/.git(-^D:h) | parallel 'cd {} && git pull --verbose --all --rebase --autostash'
    2017-01-04 [X] extract r.git thread pools into aeternum
    2017-01-06 [X] BUG: r.git-all-push -- error code 36/34/39
  [_] TRY git pull --autostash
  [_] ENH: status for submodules
  [_] CHG: split name in two columns aligned on center -- dir | file
    * for nested repos use another (blue) color
    * nested repo path is treated as single name w/o splitting
      = align on (dir/file) of container repo
  [_] FIX: filter-out colors from branch name instead of using '\t'
    : necessary for short branch names like 'doc' or 'dev'
  [_] filter list
    * status != NONE
    * dirty
    * push only commited
    * pull only fetched
  [_] THINK by default git cmds -- and shell ones with '-c' OR shell by DFL?
    FIND: how to use aliases for each repo (expanding,autocomplete)
  [_] Provide autocomplete for zsh and source it inside
  Many repos
    [_] CHG: show last upd time only on demand
    [_] TRY: processed status_only -- show in columns two/three columns
  2014-12-01 [X] Git ENH
    http://blog.mixu.net/2012/04/06/git-tips-and-tricks/
  2014-11-30 [X] Сделать отдельный скрипт по манипуляции кучей репозиториев.


% DEV
  2020-07-31 [_] 1h30m DEV #git "repo overview" (like Yocto) -- USE <Gs> to only list "modified" repos ⌇⡟⠟⠧⡓
    [_] ALSO: git-pull only show progress + updated + errors (like Yocto build)
  [_] DEV: multirepo overview -- to remember what I did yesterday and pick which project to continue today
    = print all commits for last day/week per each repo
  [_] DEV: ./ctl/auto-pick-hunks
    = add several hunks to index by some heuristic procuring minimal useful commits
  [_] DEV: ./ctl/auto-message
    = create description automatically based on hunks currently added into index
    SEE: how it is done in gitfs(1) -- how many situations it disctinguish
  [_] DEV: ./ctl/auto-commit
    = repeat auto-pick-hunks and auto-message until there are no more changes
  [_] FIND:(maybe faster): if possible to check latest commit hash directly from github
    TODO: check all in parallel, compose list on update, do git-up sequentially to prevent problems with gnupg
  * go through all and do 'git fetch'
    WARNING: fetch+rebase has unrepairable pitfalls
      http://stackoverflow.com/questions/6284887/whats-the-difference-between-git-fetch-then-git-rebase-and-git-pull-reb
  = as I see status of all branches -- there no need for git-up
  * go find all 'behind w/o ahead' and make merges
    ALT: 'pull --rebase with stash' but w/o internet access
  * search '.freeze' file up in dir tree -- adding dir1/dir2/$rep accordingly
    [_] Sync '.freeze' through private *mod*
