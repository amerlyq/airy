#!/bin/bash -eu
## WARNING:
# Will find even submodules as separate repo!
# It's useful for status, but could be very bad for pull/push/<cmd>

## DISABLED: nothing wrong if <Gs> is run from / beside its slowness ?
# FIXME: ignore guard if set env var or pass some flag
# if [[ ! ${1:-$PWD} =~ ^$HOME/ ]]; then
#   echo 'Guard: run only from $HOME' >&2
#   exit 1
# fi

# DISABLED: "\( -type d -o -type l -xtype d \)"
#   <= .git dir symlink is only useful for submodules under git-annex
#   ::: it means, there is no need to list them as part of <Gs>
exec find -H "${1:-$PWD}" -maxdepth 1 \
  -xtype d \( -name '_build*' -o -name '_cache*' -o -name '&*' \) -prune -o \
  -xtype d -exec test -e {}/.git \; "${@:2}" -printf '%P\0'
  # -execdir git -C {} rev-parse --git-dir \;
  # -xtype d -execdir sh -c '
  #   g=$(git -C "$0" rev-parse --git-dir 2>/dev/null)
  #   test "$0/.git" -ef "$g"
  # ' {} \;

# OR: --is-inside-work-tree
# OLD: semi-recursive
# [[ -d /@/.git ]] && printf '%s\0' '/@'
# exec find -L "${1:-$PWD}" -maxdepth 2 \
#   -xtype d \( -name '_build*' -o -name '_cache*' -o -name '&*' \) -prune -o \
#   -type d -name .git -prune "${@:2}" -printf '%h\0'

# FIXME: find dir which contains exact list of file and dir names
# NEED: fix status/pull/push for bare repo
# exec find "${1:-$PWD}" \( \
#   \( -type d -o -type l -xtype d \) -name .git \
#   -o \( -type f -name HEAD \) \
# \) -prune "${@:2}" -printf '%h\0'
