#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: 2019 Amerlyq <amerlyq@gmail.com> and contributors
#
# SPDX-License-Identifier: MIT
#
#%SUMMARY: set local user/email/url identity for current repository
#%ARCH: use multiple identities (per repository) and DISABLE global identity
#%NEED: add 'ghub' entry to ~/.ssh/config -- otherwise pull/push won't work
#%USAGE: $ cd /path/to/repo && ./$0 [name] [email] [remote-url]
set -o errexit -o errtrace -o noclobber -o noglob -o nounset -o pipefail

repo=$(realpath --no-symlinks -e "${REPO:-$PWD}")
git(){ command git -C "$repo" --no-pager "$@" || exit $(($?==1 ? 0 : $?)); }


name=${1:-$(git config --local user.name)}
mail=${2:-$(git config --local user.email)}
url=${3:-$(git config --get remote.origin.url | sed '{s@.*git\(.*\)\.com/@g\1:@}')}
# git remote show origin | grep "Push *URL" | sed "s@.*:.*:\(.*\$\)@\1@"


if [[ -z ${name/-[amMwW]} || -z $mail ]]; then
  # THINK: replace "source" with global registry to use "set -r"
  source ~/.shell/profile
  if [[ $name == -M ]]; then
    name=${WORK_NAME:?}
    mail=${MAIN_MAIL:?}
    mail=${mail/@/+code@}
  elif [[ $name == -a ]]; then
    name=annex
    mail=${MAIN_MAIL:?}
  elif [[ $name == -m || $repo == /home/* ]]; then
    name=${MAIN_NAME:?}
    mail=${MAIN_MAIL:?}
    mail=${mail/@/+code@}
  elif [[ $name == -w || $repo == /work/* ]]; then
    name=${WORK_NAME:?}
    mail=${WORK_MAIL:?}
  elif [[ $name == -W ]]; then
    prf=$(realpath -e "$config/profile")
    source "${prf%/*}/common-work"
    name=${WORK_NAME:?}
    mail=${WORK_MAIL:?}
  else
    >&2 echo "Err: use main/mixed/work preset \$ ./${0##*/} {-m|-M|-w}"
    >&2 echo " OR: explicit credentials \$ ./${0##*/} name email"
    exit 1
  fi
fi


# MAYBE: don't change if the same -- to keep file timestamp
git config --local user.name "${name:?}"
git config --local user.email "${mail:?}"
[[ $url ]] && git remote set-url origin "$url"


printf 'C: (%s <%s>), %s <- %s\n' \
  "$name" "$mail" "${url:-/local/}" "${repo#$HOME/}"
