#!/usr/bin/env bash
# To use minicom in interactive regime, disable HW flow control, as our COM
# doesn't have neccessary wires and never receives "OK to send" signal.

# PORT=/dev/ttyUSB0
PORT=/dev/serial/tv-board   # Set-up by udev rule

# Dump params, -g -- print bit-str
#   sudo stty -a -F /dev/ttyUSB0
sudo stty -F "$PORT" 115200 rows 0 columns 0 line 0 min 1 time 5 \
    -parenb -parodd cs8 -hupcl -cstopb cread clocal crtscts \
    ignbrk -brkint -ignpar -parmrk -inpck -istrip \
    -inlcr -igncr -icrnl -ixon -ixoff -iuclc -ixany -imaxbel -iutf8 \
    -opost -olcuc -ocrnl -onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0 \
    -isig -icanon -iexten -echo -echoe -echok -echonl \
    -noflsh -xcase -tostop -echoprt -echoctl -echoke \
    intr ^C quit ^\  erase ^? kill ^U eof ^D \
    start ^Q stop ^S susp ^Z rprnt ^R werase ^W lnext ^V flush ^O \
    # eol <undef> eol2 <undef> swtch <undef>

DIR=/tmp
FA=usb-all.log
FF=usb-filter.log
RMDIR=/home/shared

# sed "w /tmp/usb-all.log" | sed "$FILTER; w /tmp/usb-filter.log"
BODY='{ pn=pf; pf=0; print $0 > fa }

    /\s*E\/|\[TUNER[^\[\]]*\]|\[DWS-FRAMEWORK\]|\[SNAP\]\
|tztv_tuner_set_mft|mmcblk0|SfRulesUpdater|sd_notify|launch-helper\
|^Thrift|^Starting|^Started|\[DLOG\]|tvtuner|TD_SOUND/ {
        pf=1; printf "."
    }

    { if(pn!=0 && pn!=pf) { printf "\n" } }
    { if(pf==0) {
        print $0 > ff;
        fflush(fa); fflush(ff);
        printf "%s\n",$0
    } } '


# Script to fast show-log
ssh srk 'LOGDUMP="'$RMDIR/show-log'"
    printf "#!/bin/bash\ntailf usb-filter.log\n" > "$LOGDUMP"
    chmod 777 "$LOGDUMP"
    >'$RMDIR/$FA'
    >'$RMDIR/$FF' '

# Send log by ssh
>"$DIR/$FA"
{ tailf "$DIR/$FA" | ssh srk "awk -v fa=\"$RMDIR/$FA\" -v ff=\"$RMDIR/$FF\" '$BODY'"; } &

# Ping board to prevent sleep? Don't work.
# PING=~/work/sip/scripts/arm-connect.sh
# { while $PING; do sleep 30; done; printf "\n"; } &

# Filtering Serial output
#ALT (ansifilter): stdbuf -oL -eL tr -cd "[:print:]\033\n"
#OR (to disable buffering completely): stdbuf -i0 -o0 -e0 command
sudo cat "$PORT" | ansifilter |
    awk -v fa="$DIR/$FA" -v ff="$DIR/$FF" "$BODY"


# Create socket
#   http://www.lainoox.com/bash-socket-programming/
