#!/usr/bin/env bash
#
# dvolbar - OSD Volume utility
#
# thanks to http://bbs.archlinux.org/viewtopic.php?id=46608
#Customize this stuff
IF="Master" # audio channel: Master, PCM, etc
SECS="1" # sleep $SECS
BG="#ff9900" # background colour of window
FG="#ffffff" # foreground colour of text/icon
BAR_FG="#ffffff" # foreground colour of volume bar
BAR_BG="#444444" # background colour of volume bar
SCR_HEIGHT="1080" # screen height
SCR_WIDTH="1920" # screen width
HEIGHT="30" # window height
WIDTH="250" # window width
BAR_WIDTH="165" # width of volume bar
SOUND_ICON=~/.data/icons/dzen/vol-hi.xbm
MUTE_ICON=~/.data/icons/dzen/vol-mute.xbm
FONT="-*-dina-medium-r-*-*-13-*-*-*-*-*-*-*"
#Probably do not customize
PIPE="/tmp/dvol" # where the pipe is
# The real center of the screen, dynamically calculated. Awesome and lazy.
XPOS="$(echo $SCR_WIDTH/2 - $WIDTH/2 | bc)"
YPOS="$(echo $SCR_HEIGHT/2 - $HEIGHT/2 | bc)"
err() {
echo "$1"
exit 1
}
usage() {
echo "usage: dvol [option] [argument]"
echo
echo "Options:"
echo " -i, --increase - increase volume by \`argument'"
echo " -d, --decrease - decrease volume by \`argument'"
echo " -t, --toggle - toggle mute on and off"
echo " -g, --get - show the current volume"
echo " -h, --help - display this"
exit
}
#Argument Parsing
case "$1" in
'-i'|'--increase')
[ -z "$2" ] && err "No argument specified for increase."
[ -n "$(tr -d [0-9] <<<$2)" ] && err "The argument needs to be an integer."
AMIXARG="${2}%+"
;;
'-d'|'--decrease')
[ -z "$2" ] && err "No argument specified for decrease."
[ -n "$(tr -d [0-9] <<<$2)" ] && err "The argument needs to be an integer."
AMIXARG="${2}%-"
;;
'-t'|'--toggle')
AMIXARG="toggle"
;;
'-g'|'--get')
AMIXARG="get"
;;
''|'-h'|'--help')
usage
;;
*)
err "Unrecognized option \`$1', see dvol --help"
;;
esac
#Actual volume changing (readability low)
if [ "$AMIXARG" = "get" ]; then
AMIXOUT="$(amixer get "$IF" | tail -n 1)"
else
AMIXOUT="$(amixer set "$IF" "$AMIXARG" | tail -n 1)"
fi
MUTE="$(cut -d '[' -f 4 <<<"$AMIXOUT")"
if [ "$MUTE" = "off]" ]; then
VOL="0"
else
VOL="$(cut -d '[' -f 2 <<<"$AMIXOUT" | sed 's/%.*//g')"
fi
# Set the correct icon if the volume is muted/zero
if [ "$VOL" = "0" ]; then
ICON=$MUTE_ICON
else
ICON=$SOUND_ICON
fi
#Using named pipe to determine whether previous call still exists
#Also prevents multiple volume bar instances
if [ ! -e "$PIPE" ]; then
mkfifo "$PIPE"
(dzen2 -tw "$WIDTH" -h "$HEIGHT" -x "$XPOS" -y "$YPOS" -fn "$FONT" -bg "$BG" -fg "$FG" < "$PIPE"
rm -f "$PIPE") &
fi
#Feed the pipe!
(echo "$VOL" | gdbar -l "^i(${ICON})" -fg "$BAR_FG" -bg "$BAR_BG" -w "$BAR_WIDTH" ; sleep "$SECS") > "$PIPE"

