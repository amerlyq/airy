#!/bin/bash

#tar xvfz android-sdk_r22.6.2-linux.tgz
#cd android-sdk-linux/tools
#./android

# check:
# Tools: Tools, Platform-tools, Build-tools (first)
# Android 4.4.2: all
# Android 4.0
# Extras:
#   Android Support Repository, Library
#   Google Play services
#   Google Repository
# Install -> Accept License ->

# These packages are needed to run many many android commands such as ADB and FASTBOOT (only 64-bit needs this)
# sudo apt-get install ia32-libs
#
# FIXING NO PERMISSIONS ERROR
# http://forum.xda-developers.com/showthread.php?t=2302780
#
# Install Oracle JDK
# http://www.webupd8.org/2012/01/install-oracle-java-jdk-7-in-ubuntu-via.html
#
# Building
# http://geosoft.no/development/android.html
#


# NDK
# Unpack: android-ndk-r9c-linux-x86_64.tar.bz2 -> android-ndk-r9c

# на exchange залил -> закинуть в <bundle>\sdk\temp\
# http://www.kandroid.org/ndk/docs/ANDROID-MK.html
# https://android.googlesource.com/platform/frameworks/native.git

# Else: .bashrc or .profile
#if [ ! -f '~/.bash_export' ] || ! [ cat '~/.bash_export' | grep -q '### Android ###' ]; then
# Change to >> ~/.bash_export
#j    echo ''
#else

dst="~/.bash_export"
wstr "
### Android ###
ANDROID_DIR=~/dev
export ANDROID_HOME=\$ANDROID_DIR/android-sdk-linux
export PATH=\$PATH:\$ANDROID_HOME/tools
export PATH=\$PATH:\$ANDROID_HOME/build-tools/19.1.0
export PATH=\$PATH:\$ANDROID_HOME/platform-tools

#export ANDROID_SRC=\$ANDROID_DIR/android_sources
#export ANDROID_BIN=\$ANDROID_DIR/android_binaries
#export ANDROID_NDK_TOOLCHAIN_ROOT=\$ANDROID_DIR/android-toolchain
#export NDK=\$ANDROID_DIR/android-ndk-r9c
#PATH=\$PATH:\$ANDROID_NDK_TOOLCHAIN_ROOT/bin"

#fi

# Now restart terminal and build toolchain:
# $NDK/build/tools/make-standalone-toolchain.sh --platform=android-18 --install-dir=$ANDROID_NDK_TOOLCHAIN_ROOT
# В принципе всё, но увы некоторые возможности всё равно не будут работать (native: utils/Log.h не найден итп)
# Для этого служат два архива android_binaries,android_sources -- которые взяты непонятно откуда
# Либо же android_sources (состоящий из av, base, core, native) можно подтащить по частям внутрь этой папки
#
# https://android.googlesource.com/platform/frameworks/native.git
# аналогично ...( av | base | core ).git


# далее надо добавить среды разработки
# http://developer.android.com/sdk/installing/adding-packages.html


### GenyMotion ###
# https://cloud.genymotion.com/page/launchpad/download/
#sudo apt-get install virtualbox lib64z1 libc6:i386 libstdc++6:i386 zlib1g:i386
# Settings -> ADB -> Choose path to android-sdk
# launch and check:
# $ adb devices
#   List of devices attached
#   192.168.56.101:5555	device
#

# man
# http://geosoft.no/development/android.html


# Gen R.java (with id for ide)
# ┌──╼ [~/dev/activity-lifecycle]s.xml
# └────╼ aapt package -v -f -m -S res -J src -M AndroidManifest.xml -I ../android-sdk-linux/platforms/android-19/android.jar

# Compile *.java code into *.class
# ┌──╼ [~/dev/activity-lifecycle]
# └────╼ javac -verbose  -classpath ~/dev/android-sdk-linux/platforms/android-19/android.jar -sourcepath src src/com/example/android/lifecycle/*.java

# Dalvik DEX
# ┌──╼ [~/dev/activity-lifecycle]
# mkdir bin
# dx --dex --verbose --output=bin/classes.dex  libs
# aapt package -v -f -M AndroidManifest.xml -S res -I ~/dev/android-sdk-linux/platforms/android-19/android.jar -F bin/AndroidTest.unsigned.apk bin

# Gen certificate
# cd [~/dev/activity-lifecycle]
# keytool -genkeypair -validity 10000 -dname "CN=company name, OU=organisational unit, O=organisation, L=location, S=state, C=country code" -keystore AndroidTest.keystore -storepass password -keypass password -alias AndroidTestKey -keyalg RSA -v

# Sign
# cd [~/dev/activity-lifecycle]
# jarsigner -verbose -keystore AndroidTest.keystore -storepass password -keypass password -signedjar bin/AndroidTest.signed.apk bin/AndroidTest.unsigned.apk AndroidTestKey

# Pack
# zipalign -v -f 4 bin/AndroidTest.signed.apk bin/AndroidTest.apk

# Find name and id of emulator
#   VBoxManage list vms
# Lauch device
# ┌──╼ [~/dev/genymotion]
# └╼ ./player --vm-name "Google Nexus 4 - 4.4.2 - API 19 - 768x1280" {0b6434fe-8cca-4665-b130-01f2d8096aad}

# Install in emulator
# adb -e install bin/AndroidTest.apk

# Extract manifest (needs package line)
# aapt d xmltree ~/dev/Alekseyt.Lusher_c6.apk AndroidManifest.xml

# Launch apk
# adb shell am start -n Alekseyt.Lusher/.LusherActivity
