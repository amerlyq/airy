REF commands
  +++ https://sourceware.org/gdb/current/onlinedocs/gdb/
  +++ http://visualgdb.com/gdbreference/commands/
  OLD http://www.gnu.org/software/gdb/documentation/
  ++ http://scc.ustc.edu.cn/zlsc/chinagrid/intel/debugger/cl/GUID-4D2DFF8D-60A0-4439-B162-2A9794692B3B.htm
  http://www.cs.rit.edu/~csci243/resources/gdb.pdf
  $ info gdb

TUT
  !! http://www.dirac.org/linux/gdb/
    = BET so far with memory layout and actual examples on OpenGL, ncurses, etc
  http://visualgdb.com/tutorials/
  https://wiki.archlinux.org/index.php/Step-by-step_debugging_guide
  Variables / examine data
    http://ftp.gnu.org/old-gnu/Manuals/gdb/html_chapter/gdb_9.html
    https://ftp.gnu.org/old-gnu/Manuals/gdb-5.1.1/html_node/gdb_109.html

Tips
  http://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Companion/intro_talks/gdb/gdb.html
  http://rus-linux.net/nlib.php?name=/MyLDP/algol/gdb/otladka-s-gdb.html
  http://www.delorie.com/gnu/docs/gdb/gdb_toc.html
  http://xakep.ru/articles/22176/
  http://www.dirac.org/linux/gdb/02a-Memory_Layout_And_The_Stack.php

List active signal handlers
  http://palves.net/list-active-signal-handlers-with-gdb/
    https://github.com/palves/misc/blob/master/gdb/signals.gdb

READ all
  http://beej.us/guide/
    * http://beej.us/guide/bggdb/
  http://web.mit.edu/gnu/doc/html/gdb_9.html
  * http://en.wikibooks.org/wiki/Linux_Applications_Debugging_Techniques
  > http://www.yolinux.com/TUTORIALS/GDB-Commands.html
  > http://www.chemie.fu-berlin.de/chemnet/use/info/gdb/gdb_12.html
  > http://www.haifux.org/lectures/210/gdb_-_customize_it.html

  TUT http://docs.adacore.com/gdb-docs/html/gdb.html
  >> http://docs.adacore.com/gdb-docs/html/gdb_10.html
    http://docs.adacore.com/gdb-docs/html/gdb_6.html#SEC43
    http://docs.adacore.com/gdb-docs/html/gdb_24.html

  READ http://palves.net/a-tale-of-inexplicable-gdb-racy-fails/

  Working with asm
    https://sourceware.org/gdb/onlinedocs/gdb/Machine-Code.html
    http://www.csee.umbc.edu/portal/help/nasm/nasm.shtml
  Dump commands history
    https://sourceware.org/gdb/onlinedocs/gdb/Command-History.html

  How gdb works (internals / algorithms for binaries parsing)
    https://sourceware.org/gdb/wiki/Internals

  Grass Geo
    https://grasswiki.osgeo.org/wiki/GRASS_Debugging


%%% ALT:(gdb)

On x64, install another x32 gdb
  $ ls -l `which gdb32`
  /usr/bin/gdb32 -> ‘/your/install/path


% Problem Determination Tools for Linux
  • -Wall
  • Code review
  • Program’s traces, syslog, profilers
  • Static Source Code Analysis:
  – scan.coverity.com – free for FOSS
  – Flexelint
  • Dynamic analysis: Valgrind,
  • strace, /proc filesystem, lsof, ldd, nm, objdump, wireshark

% List of widely used debuggers
  GNU Debugger (GDB)
  Intel Debugger (IDB)
  LLDB
  Microsoft Visual Studio Debugger
  Valgrind (IBM's Purify, which has features similar to Valgrind for finding memory leaks and invalid memory accesses. A trial download is available.)
  WinDbg
  Eclipse debugger API used in a range of IDEs: Eclipse IDE (Java) Nodeclipse (JavaScript)
