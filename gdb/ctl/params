#!/bin/sh -eu
# SEE:BAD:(-L) http://unix.stackexchange.com/questions/34248/how-can-i-find-broken-symlinks

search(){ local t=$1 k=$2; shift 2
  if test "$t" "${!k-}"
  then v=$(readlink -e "${!k}")
  else [[ ${!k+x} ]] || v=$( "$@" ); fi
  readonly "$k=$v"
}

search -d ROOT find "$PWD" -maxdepth 1 -xtype d -exec test -d "{}/lib" -a -d "{}/usr/lib" -a -f "{}/VERSION.TXT" \; -print -quit
search -f CORE find "$PWD" -maxdepth 2 ! -readable -prune -o -xtype f -regex '^.*/core\.[^/]+\.[0-9]+$' -print -quit
# ALT: search archive with cores, then:
#   tar --wildcards -C "$PWD" -zxvf "$CORE" 'core.*'
pr=${CORE##*/core.}; pr=${pr%%.*}
search -f EXE find -H "$ROOT" ! -readable -prune -o -xtype f -name "$pr" -print -quit

if file -b "$EXE" | grep -qwF ARM; then
  unset xct_gdb
elif file -b "$EXE" | grep -qwF MIPS; then
  xct_gdb='/opt/mips-unknown-linux-uclibc/bin/mips-linux-gdb'
fi

# [[ -n ${SRC-} ]] || SRC=$PJROOT/src
# [[ -n ${BDR-} ]] || BDR=$PJROOT/buildroot
search -f GDB ls -d "$BDR"/toolchain_build_*/gdbhost-*/gdb/gdb || GDB=$xct_gdb
search -d GDB_DATA echo "${GDB%/*}"
search -d LIBS ls -d "$BDR"/build_*/staging_dir/lib
search -d DEBUG echo "${LIBS}"

# THINK: move exporting into 'session' MAYBE rename 'session' -> 'env'
#   => this file must only print key-value results
# SEE: exporting from conf
#   http://stackoverflow.com/questions/19331497/set-environment-variables-from-file
cd "$(r.gdb-tmp -d)"
links=( GDB GDB_DATA DEBUG ROOT CORE EXE SRC BDR LIBS )
echo "links=( ${links[*]} )" > ./env
for nm in "${links[@]}"; do echo "${nm}=${!nm-}" >> ./env; done
