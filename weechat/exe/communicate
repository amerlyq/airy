#!/bin/bash
#%SUMMARY: strips comments from command files and sends them to weechat pipe
#%USAGE: ./$0 [<flags>...] [--] [/dev/stdin] [<cfgspec>...]
#%INFO: pipe=~/.weechat/weechat_fifo
#%  $ echo 'irc.server.freenode */nick newnick' > "$pipe"
#%  $ echo 'irc.freenode.#weechat *hello!' > "$pipe"
#%  $ echo '*hello!' > "$pipe"
set -euo pipefail -o errtrace
onexit(){ [[ ${wee_pid+x} ]] || return 0; echo '*/quit' && wait "$wee_pid"; }
die(){ echo "Err:(${0##*/}): $*" >&2; exit 1; }

pipe=${WEECHAT_HOME:-$HOME/.weechat}/weechat_fifo
flog=${WEECHAT_HOME:-$HOME/.weechat}/logs/core.weechat.weechatlog
dryrun=
verbose=

while getopts 'dhp:v' o; do case $o in :|'?') exit 1
;; h) exec sed -rn '1d;/^(.*\s)?#%/s///p' "$0"  #% h = help
;; d) dryrun=1      #% d = dryrun
;; v) verbose=1     #% v = verbose
;; p) pipe=$OPTARG  #% p = pipe /path/to/weechat_fifo
esac; done; unset o; shift $((OPTIND-1))

# [_] TODO:DEV: merge lines ending with single unescaped '\'
strip_comments(){ sed -r '/^\s+/s///; /(^#|  # ).*$/s///; /^$/d'; }
parse_config(){ env-subs "$@" | strip_comments | sed 's/^/*/'; }

stdout_to_pipe(){ local p=$1
  if [[ ! -p $p ]]; then
    weechat-headless --no-connect & declare -g wee_pid=$!
    trap 'onexit' HUP INT QUIT TERM ERR
  fi
  timeout 1 sh -c "while ! test -p '$p'; do printf .; sleep 0.1; done && echo" \
    || die "pipe '$p' must exist"
  exec > "$p"

  # WARN: wait on "$wee_pid" only, not itself; ALT:(kill last job): kill %% 2>/dev/null
  # ERR: |: tail: cannot open '~/.weechat/logs/core.weechat.weechatlog' for reading: No such file or directory
  tail -n0 -f "$flog" --pid="${wee_pid:-$$}" | grep --line-buffered -P '\t(?:âš |=!=)\t|\t\K(?:Error:?|irc:)(?=\s)' >&2 &
}

((dryrun)) || stdout_to_pipe "$pipe"

## DEV: --renew
# MAYBE: '/unset -mask irc.*'
# BUG:(don't work): /server del *
# BAD:(removes too much): /unset -mask weechat.*

for cfg; do
  ((verbose)) && printf '\n[%s]  @%s\n' "${cfg##*/}" "$cfg" >&2
  parse_config "$cfg"
done

echo '*/save'  # OR: '/save irc'
onexit
