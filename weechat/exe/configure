#!/bin/bash
#%SUMMARY: supplements weechat communication files by overlays and passwords
#%USAGE: ./$0 [-v] [-d] [-r] <tags>...
#%
set -euo pipefail -o noglob
source ~/.shell/profile

die(){ echo "Err:(${0##*/}): $*" >&2; exit 1; }

sec_conf=${WEECHAT_HOME:-$HOME/.weechat}/sec.conf
renew=
dryrun=
verbose=

while getopts 'dhrv' o; do case $o in :|'?') exit 1
;; h) exec sed -rn '1d;/^(.*\s)?#%/s///p' "$0"  #% h = help
;; d) dryrun=1     #% d = dryrun
;; r) renew=1      #% r = renew, recreates "sec.conf" when password have changed (user changes will be lost)
;; v) verbose=1    #% v = verbose
esac; done; unset o; shift $((OPTIND-1))
(($#)) || { echo "Err: empty requested tags list (\$@)" >&2; exit 1; }
tags=( "$@" )

mcfg=weechat/cfg
export CFG_OVERLAY_BASE=$(cfg-overlay -Q -p "%s/$mcfg:" -b "${AIRY_OVERLAY_BASE-}" --)
export CFG_OVERLAY_PATH=$(cfg-overlay -Q -p "%s/$mcfg:" -o "${AIRY_OVERLAY_PATH-}" --)

# readarray -t names < <(cfg-overlay -q -p '%s\n' -- "${tags[@]}")
readarray -t files < <(cfg-overlay -M+ -E~ -s '{}.conf' -- "${tags[@]}")

_pass_required=0
grep -qsxF '__passphrase__ = on' "$sec_conf" && _pass_required=1

# NOTE: export only passwords required inside list of config files
servers=$(grep -hPos '^[^#].*%\{WEECHAT_PASS_\K\w+(?=\})' "${files[@]}")
while IFS= read -r srv; do
  export WEECHAT_PASS_${srv}=$(r.query-passwd "chat/${srv,,}")
done <<< "$servers"

# NOTE: propagate passwd from keyring (when available) if you use /secure for weechat
# BUG: can't suppress passphrase prompt by {WEECHAT_PASSPHRASE=' '}, genuine password is required
# FAIL: $ weechat -r '/set sec.crypt.passphrase_file /dev/stdin' ...
if ((_pass_required)); then
  weechat_pass=$(r.query-passwd "chat/weechat")
  # BAD: impossible to detect when password has changed (and data can't be decrypted)
  #   => HACK: recreate "sec.conf" on each reconfigure (user additional changes will be lost)
  if ((renew)); then rm -f "$sec_conf"
  else export WEECHAT_PASSPHRASE=${weechat_pass:?}; fi
elif [[ ${servers:+x} ]]; then
  #%NOTE: all user changes to "sec.conf" before first encryption will be kept
  weechat_pass=$(r.query-passwd "chat/weechat")
else
  weechat_pass=$(r.query-passwd "chat/weechat" 2>/dev/null||:)
fi

## WARN:SECU! unencrypted "passwd" is contained in user's env (-r--------)
#   $ cat /proc/$(pidof weechat)/environ
## NOTE: passphrase can be added always <= no passphrase is requested on startup
#   until some encrypted data will be added (i.e. WEECHAT_PASS_* vars)
exec <<< ""
[[ ${weechat_pass:+x} ]] && exec <<< "/secure passphrase $weechat_pass"

# cat
# env | grep WEECHAT

d_exe=$(dirname "$(readlink -e "$0")")
"$d_exe/communicate" ${dryrun:+-d} ${verbose:+-v} -- /dev/stdin "${files[@]}"
