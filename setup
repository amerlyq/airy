#!/bin/bash -e
cd $(dirname $(readlink -m ${0}))
[[ -L ~/.shell ]] || ln -svT "$PWD/cfg/shell" ~/.shell
source ~/.shell/func.d/cfgsetup
echo "$THEME" > "${CURR_DIR_CACHE?No}/theme"
queue="${TMPDIR:-/tmp}/mods_installing"
mods="${CURR_DIR_CACHE?No}/mods/mods" && mkdir -p "${mods%/*}"

# ======================================================================
for n in {0..15}; do declare C${n}=$(tput setaf ${n:?}); done && CR=$(tput sgr0)
header(){ printf "\n$(tput setaf ${2:-1})>>> %s <<<$(tput sgr0)\n" "$1"; }
pretty() { sed -r "s|/home/$(whoami)|\~|g
              s|\~/\S+/cfg/||g;  />>>/!s|^|  |g
        /^>>> /s//\n$C2\[/g; / <<<$/s//\]$CR/g
    /(C|W):\s.*/s//$C13&$CR/; /(N):\s.*/s//$C6&$CR/
        /.*\s-> L\s.*/s//$C4&$CR/; /.*\s-> C\s.*/s//$C3&$CR/;
            /\<(E|Err|ERR):\s.*/s//$C1&$CR/
";}
# ======================================================================
# NOTE: If problem with package update, firts update 'archlinux-keyring' pkg
if cfgOpt i && cfgOpt u && [[ ! -f "$queue" ]]; then
    if distro arch; then
        sudo pacman -Syu --ignore=firefox  # REM:BUG
        echo "ERR: firefox is frozen in pacman" | pretty
        # OR: /etc/pacman.conf: IgnorePkg=firefox ; IgnoreGroup=core
        # Degrade manually:
        #   pacman -U /var/cache/pacman/pkg/firefox-42.0-3-x86_64.pkg.tar.xz
    elif distro ubuntu; then
        sudo apt-get install gawk
        echo "sudo apt-get update && sudo apt-get upgrade"
    fi
fi
# ======================================================================
## Populate sensible configs
if [[ -f ../erian/setup ]] && [[ ! -f "$queue" ]]; then
    header "Erian private data"
    ../erian/setup "$ARGS" | pretty
fi

# ======================================================================
## Setup all configs (private data must be initialized already)
header "Airy cfgs"
source ~/.shell/profile
mkdir -vp "${CURR_DIR_CACHE:?No}"
link "$PWD/bin" ~/.bin
if cfgOpt u; then opts='-u'; fi
if cfgOpt s; then PKG_LIST=( ${ARGS[@]} ); PKG_SKIP=( ); fi
printf "LIST: %s\n\n" "${PKG_LIST[*]}"
printf "SKIP: %s\n\n" "${PKG_SKIP[*]}"
PKG_SKIP+=( firefox )  # REM:BUG
frgx(){ local patt="\\b$*\\b"
    [[ "$*" =~ ^/.*$ ]] && patt="cfg$patt" || patt=".*$patt"
    [[ "$*" =~ ^.*/$ ]] && patt="${patt}.*"|| patt="$patt\$"
    echo "$patt"
}
filter_find() { local accept regect
    for n in "${PKG_SKIP[@]}"; do regect+="\\|$(frgx $n)"; done
    for y in "${PKG_LIST[@]}"; do accept=$(frgx $y)
        find cfg -type d -regex "$accept" \
            -exec test -f '{}/install' -o -f '{}/setup' ';' \
            \! -regex "${regect:2}" -printf "$PWD/%p\n"
    done
}

# Caching the list of modules activated in profile
run(){ [[ ! -f "$1" ]] || "$1" ${@:1}; }
if cfgOpt r && [[ -f "$mods" ]]; then
    cp -vf --backup=numbered "$mods" "$mods" && rm "$mods"
fi
[[ -f "$mods"  ]] || filter_find > "$mods"
[[ -f "$queue" ]] || cp -vT "$mods" "$queue"

[[ -n "$DISPLAY" ]] || export DISPLAY=:0.0
while read d; do echo ">>> $d <<<"
    ! cfgOpt i || run "$d/install" $opts
    run "$d/setup" $opts
    sed -i '1d' "$queue"
done <<< "$(<"$queue")" | pretty
rm "$queue"
# ======================================================================

header "DONE"
