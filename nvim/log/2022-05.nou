
2022-05-01-Sun-W17
  [⡢⡮⢳⢐] 1h15m ^⡢⡜⠥⣩ CFG #nvim commentary + ENH keybindings
  [⡢⡮⢾⣧] 20m ^⡢⡜⠥⣩ CFG #nvim ENH send jupyter on save
  [⡢⡮⣒⢸] 25m ^⡢⡜⠥⣩ CFG #nvim ENH telescope / which-key
  [⡢⡮⣞⡏] 15m CFG #tenjo fix global <g.*> opening :/path in non-@/todo repos
  [⡢⡮⣬⢙] ✗ 1h15m FIXME #nvim .py errors in !pylint log / !black does not work
    ~~ MAYBE:COS: require('impatient')
      ::: must wait until diagnostics fully loaded before saving/reformatting file


2022-05-02-Mon-W18
  [%] ◔ 30m DEBUG #nvim LSP does not work


2022-05-03-Tue-W18
  [X] 2h20m DEBUG #nvim LSP does not work
    [X] ≈ FIXME #nvim .py errors in !pylint log / !black does not work
  [+] 1h CFG #nvim PERF: startup/switch USE !execsnoop
  [+] 2h40m CFG #nvim PERF: new minimal mod @/airy
  [+] 1h #nvim FIXME: lualine disable calling "git diff" on BufEnter/Write
  [+] 2h #nvim DEV: my own colorscheme
  [+] 2h #nvim DEV: my own statusline


2022-05-04-Wed-W18
  [%] 4h25m CFG #nvim in Lua ⌇⡢⡳⡶⠫
    [⡢⡲⢢⠓] 20m ADD !vv cmd to run vim wo swap/plugins for pass edit
      ~~ BUT: !vis has peculiar grep-replace system from !sam, therefore I can't delete it either
    [⡢⡲⣗⡫] 3h20m FIXME: packadd/autocmd not loaded ※⡢⡲⣜⣯
      [⡢⡲⣁⣹] TODO: grep all event names $ /@/airy/nvim/exe/grep-autocmd
    [%] 45m lazy for "treesitter" too
      lua/nvim-treesitter/configs.lua:  api.nvim_create_autocmd("FileType", {
      lua/nvim-treesitter/indent.lua:  vim.api.nvim_create_autocmd("Filetype", {
  [⡢⡶⢽⠡] #nvim IDEA:PERF: disable "filetype on" by DFL, and then enable only on demand or after delay
    https://github.com/LunarVim/LunarVim/issues/1418
    ⦅lua⦆ vim.cmd [[ syntax off | filetype off | filetype plugin indent off ]]
    FAIL: useless, as it sources //{ftplugin,indent}.vim anyways,
    and then loads additional files to *disable* previously loaded files.
    Moreover, deferring syntax/highlight results in flickering, which is a pain.
  [_] HACK:TRY: lazy load plugins on "FuncUndefined"
    ~/.cache/vim/dein/repos/github.com/Shougo/dein.vim/autoload/dein/min.vim:30
    [_] NICE:ALT: plugins which are not easily automated (e.g. vim-surround) -- can be loaded after delay
      The illusion of fast startup times in vim | Devlog ⌇⡢⡳⡰⢽
        https://vonheikemen.github.io/devlog/tools/the-illusion-of-fast-startup-times-in-vim/
    [_] ALT: keybinding loading for e.g. :PlantUML
      command! MarkdownPreview packadd markdown-preview.nvim | call mkdp#util#open_preview_page()"
      autocmd! FileType qf packadd quickfix-reflector.vim
    [_] SEIZE: ready-to-use code to load on fn/cmd call ⌇⡢⡶⡳⣝
      https://github.com/tjdevries/lazy.nvim


2022-05-05-Thu-W18
  [%] 4h20m CFG #nvim in Lua ⌇⡢⡴⣌⢣
    [X] 35m XLR: links
    [⡢⡳⣢⢌] 25m Speedup neovim - rok ⌇⡢⡳⣢⢇
      https://aca.github.io/neovim_startuptime.html
    [X] 25m MOVE vim/lua into nvim
    [⡢⡳⣴⢾] 50m SEIZE https://www.reddit.com/r/vim/comments/ufgrl8/journey_to_the_ultimate_imap_jk_esc/
    [X] 15m PERF #nvim
    [⡢⡴⠒⣞] 1h50m PERF colorscheme in .lua batch API
      [X] NICE:(nvim_set_hl): use as a base
        /@/plugins/nvim/core/start/nvim-treesitter/plugin/nvim-treesitter.lua
      [⡢⡴⠃⣰] SEE: *api-highlights* nvim_buf_add_highlight()
        PERF:NOTE: hl multiple regions in buf by single group ##
          src = vim.new_highlight_source()
          buf = vim.current.buffer
          for i in range(5):
              buf.add_highlight("String",i,0,-1,src_id=src)
      [⡢⡴⠐⣭] FAIL: should use ns_id=0 to override colorscheme
        # local ns_id = vim.api.nvim_create_namespace(vim.g.colors_name)
      [⡢⡴⠑⢶] CMP: almost no difference
        OLD: # 017.366  002.150  002.150: sourcing /@/airy/nvim/colors/airy.vim
        NEW: # 017.073  001.871  001.871: sourcing /@/airy/nvim/colors/airy.lua
      [⡢⡴⠒⢮] TRY: "blend/combine" to highlight word "hi" in bold w/o altering its color
        https://git.packetlostandfound.us/chiefnoah/neovim/commit/628f8f3dfdbc734096b04c3040c1f4d2cea873c4
        ::: FAIL: "blend" works like "opacity"
           and "nocombine" ¦ override attributes instead of combining them
    [%⡢⡴⠝⢉] 40m FIXME lazy load for "treesitter"
      [X] check PERF logs
  [_] TRY: use similar hi! by treesitter like in Semshi
    [_] TODO: re-create colorscheme from zero -- redefine only needed groups
      USE: as a base -- vim.g.material_style = "deep ocean" /@/plugins/#/material.nvim
  [_] #nvim USE new cfg for .nou
    [_] NEED: merge notches/etc. plugins into single pack with nou.vim
    [_] NEED: bkgr ranger
  [_] INSTALL:
    andymass/vim-matchup: vim match-up: even better % navigate and highlight matching words modern matchit and matchparen ⌇⡢⡳⣞⠢
      https://github.com/andymass/vim-matchup
      [_] TRY: lazy load by pressing "%"
    phaazon/hop.nvim: Neovim motions on speed! ⌇⡢⡳⣢⡈
      https://github.com/phaazon/hop.nvim
      nmap <silent><Leader>w :packadd hop.nvim \| :lua require'hop'.jump_words()<cr>
    Intelligently reopen files at your last edit position with `remember.nvim` : neovim ⌇⡢⡴⠈⣉
      https://www.reddit.com/r/neovim/comments/ufi9ws/intelligently_reopen_files_at_your_last_edit/
      Preserve last editing position in VIM - Stack Overflow ⌇⡢⡴⠈⣠
        https://stackoverflow.com/questions/7894330/preserve-last-editing-position-in-vim/14449484#14449484


2022-05-06-Fri-W18
  [%] 6h5m CFG #nvim in Lua ⌇⡢⡵⡤⣛
    [X] 1h CFG "cmp" again
    [+] 2h FIXME smart lazy loading
    [⡢⡵⡎⠵] 1h10m ^⡢⡜⠥⣩ CFG #nvim BUG: no auto-suggestions on "." in .py
      trigger completion menu after pressing `.` · Issue #340 · hrsh7th/nvim-cmp ⌇⡢⡵⡍⣾
        https://github.com/hrsh7th/nvim-cmp/issues/340
        ::: seems like it simply... works again ?
    [⡢⡵⡢⠧] 50m FIXME: luasnip does not have snippets
      ::: DONE: at least loads my own vim snippets based on honza/vim-snippets
      [$] BAD: too little of useful snippets ⌇⡢⡵⡛⢌
        https://github.com/molleweide/LuaSnip-snippets.nvim
      [≫] ADD my own .lua snippets :: BAD: too cumbersome syntax to use
        https://github.com/L3MON4D3/LuaSnip/blob/master/DOC.md#lua-snippets-loader
        https://github.com/L3MON4D3/LuaSnip/blob/master/Examples/snippets.lua#L190
      [≫] MERGE: pick only needed and cvt to .lua into my own snips
        /@/xdg_cache/vim/dein/repos/github.com/honza/vim-snippets/snippets/python.snippets
        /@/xdg_cache/vim/dein/repos/github.com/honza/vim-snippets/UltiSnips/python.snippets
        /@/xdg_cache/vim/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets/python.snip
    [⡢⡵⡤⡁] 10m READ: paq-nvim/paq.lua at master · savq/paq-nvim ⌇⡢⡵⡤⠽
      https://github.com/savq/paq-nvim/blob/master/lua/paq.lua
      ::: nothing immediately useful
        [≫] FUTURE:SEIZE: how to call processes through vim.loop
    [•] 55m #nvim SEIZE https://github.com/bageljrkhanofemus/dotfiles
      [~] onsails/lspkind.nvim: vscode-like pictograms for neovim lsp completion items ⌇⡢⡵⡸⣽
        https://github.com/onsails/lspkind.nvim
      [!] t-troebst/perfanno.nvim: NeoVim lua plugin that annotates source code with profiling information from perf or other profilers ⌇⡢⡵⡹⡀
        https://github.com/t-troebst/perfanno.nvim
        https://www.reddit.com/r/neovim/comments/sry0pu/plugin_perfanno_explore_perf_call_graph_profiler/
      [@] windwp/nvim-autopairs: autopairs for neovim written by lua ⌇⡢⡵⡹⣾
        https://github.com/windwp/nvim-autopairs
      [@] hrsh7th/cmp-nvim-lsp-signature-help: cmp-nvim-lsp-signature-help ⌇⡢⡵⡻⠬
        https://github.com/hrsh7th/cmp-nvim-lsp-signature-help
      [!] mfussenegger/nvim-dap: Debug Adapter Protocol client implementation for Neovim ⌇⡢⡵⡼⠳
        https://github.com/mfussenegger/nvim-dap
        CFG: https://github.com/bageljrkhanofemus/dotfiles/blob/master/dot_config/nvim/lua/configs/dap.lua
      [~] hrsh7th/cmp-nvim-lsp-document-symbol: nvim-cmp source for textDocument/documentSymbol via nvim-lsp. ⌇⡢⡵⡼⢐
        https://github.com/hrsh7th/cmp-nvim-lsp-document-symbol
      [•] only this dir starting from this file left to SEIZE
        https://github.com/bageljrkhanofemus/dotfiles/blob/master/dot_config/nvim/lua/configs/keymaps.lua
  [_] CFG super-tab
    Example mappings · hrsh7th/nvim-cmp Wiki ⌇⡢⡵⡗⢢
      https://github.com/hrsh7th/nvim-cmp/wiki/Example-mappings#luasnip


2022-05-07-Sat-W18
  [%] 8h5m CFG #nvim in Lua ⌇⡢⡶⡅⣋
    [⡢⡶⢑⣠] 2h10m CHG: use old nvim only for .nou (through "vo" cmd), open everything else in new nvim
      [⡢⡶⢑⣞] BAD: shada is too big PERF=+36ms :: TRY lazy load it too
        [Feature]: Improve startup time · Issue #1418 · LunarVim/LunarVim ⌇⡢⡶⡴⡰
          https://github.com/LunarVim/LunarVim/issues/1418
    [+] 10m/ XLR telescope
    [⡢⡶⢧⢢] 1h merge some removed plugins
    [%] 4h45m BET:IDEA: disable loading all "plugins" on startup
      and then source them manually once everything had started
        + NICE: no need to trash &rtp by numerous /opt/* plugins
        + NICE: load whole %cmp and %treesitter groups at once as single layer
      [X] ✗ TRY: reset $XDG_CONFIG_DIRS to stop loading /etc/xdg
  [_] XLR telescope
    nvim-telescope/telescope.nvim: Find, Filter, Preview, Pick. All lua, all the time. ⌇⡢⡶⢔⡔
      https://github.com/nvim-telescope/telescope.nvim
    nvim-telescope ⌇⡢⡶⢔⡟
      https://github.com/nvim-telescope


2022-05-08-Sun-W18
  [%⡢⡸⠕⡰] 8h30m CFG #nvim in Lua ※⡢⡷⢃⣟
    [X] 15m TODO: check once again !execsnoop from ranger
    [⡢⡷⢗⣗] 30m MOVE: rnvimr.vim from "lazy" into "always/preload" to work as netrw (low loading time)
    [X] 25m ENH //paths
    [⡢⡷⢾⠿] 1h50m FIX shada,jupyter,ranger
    [⡢⡷⣱⠔] 3h DEV statusline with bufferlist and hl
      [⡢⡷⣛⣴] ALSO: print fields if enc!=utf8 or crlf!=unix
      [⪡⡊⢰] ✗ FIXME: lualine disable calling "git diff" on BufEnter/Write <⡊⢫>
        https://github.com/feline-nvim/feline.nvim
        https://github.com/glepnir/galaxyline.nvim
        https://github.com/beauwilliams/statusline.lua
        https://github.com/windwp/windline.nvim
      [X] ALT:DEV: very simple statusline myself
        [X] ✓ BUT: what about colors and bufferlist ?
        NICE: https://nuxsh.is-a.dev/blog/custom-nvim-statusline.html
        https://stackoverflow.com/questions/70234195/neovim-statusline-show-filename-with-minimal-setup-and-without-plugin
    [⡢⡸⠀⡔] 1h FIXME: old keymaps, statusline hl
    [⡢⡸⠔⢐] 1h20m FIXME: nested ranger
      [X] ✗ preload ranger after 1s
        ::: should remove from init :: nvim_open_win(rnvimr#context#bufnr(), v:true, init_layout)
      alias failed: No such command: mkdircd
      Invalid linemode: devicons; should be filename/metatitle/permissions/file ...
      The error `'doc'` was caused by evaluating the following code:
        `for k,nm in fm.commands['doc'].lst.items(): cmd("map O{0} doc {1}".format(k, nm))`
      alias failed: No such command: rg


2022-05-09-Mon-W19
  [⡢⡹⢦⡞] 8h20m CFG #nvim in Lua ⌇⡢⡸⣠⢀
    [⡢⡹⠆⡤] 2h15m update rnvimr | CHECK !execsnoop
      [⡢⡸⣷⢬] TODO: suggest execsnoop
      [⡢⡹⠆⡚] TODO: suggest singleton
        https://github.com/kevinhwang91/rnvimr/issues/115
    [⡢⡹⠂⠯] 30m FIX my own ranger
      [⡢⡹⠁⢕] install release ranger to prevent checking version on startup
        [⡢⡹⠂⠱] NEED: monkey-patch AUR __release__ during installation
        13:57:55 git              12727  12725    0 /usr/bin/git describe
      [X] DISABLED: @me prevent spawning x3 tmux commands only to rename hidden statusline
        set update_tmux_title false
        13:57:55 tmux             12729  12725    0 /usr/bin/tmux show-window-options -v allow-rename
        13:57:55 tmux             12730  12725    0 /usr/bin/tmux display-message -p #W
        13:57:55 tmux             12731  12725    0 /usr/bin/tmux show-window-options -v automatic-rename
    [⡢⡹⠑⠎] ⋆ 15m rnvimr github
    [⡢⡹⠷⣀] 1h port some keys
      [⡢⡹⠰⠭] fix "remove empty trailing lines"
    [⡢⡹⠽⡰] 40m fix table.unpack(keys)
    [⡢⡹⡔⡾] 20m update plugins
    [⡢⡹⡔⢃] 1h20m FIXME lazy loading
      ::: finally :TS hl works
    [⡢⡹⢕⠆] 2h merge remaining removed configs
      [X] ◔ 1h add my usual useful options/keybindings
  [⡢⡹⢥⣭] 2h15m #notches IDEA:PERF: generate .lua plugin from my spec.py ⌇⡢⡹⠥⠁
    >> looks like matchadd() is still the way to go
    [X] HACK: use keywords overlay group inside vim.api.nvim_set_hl()
      [⡢⡹⡰⠺] TRY: overlay hl group api nvim_buf_set_extmark()
        ::: FAIL: does not accept regexes
        https://www.reddit.com/r/neovim/comments/s4o7zt/can_virtual_text_be_used_to_highlight_lines/
      [⡢⡹⢕⢣] nvim_set_decoration_provider
        ::: FAIL: callback for frequent creating extmarks
    [>] place it inside @/nou.vim package
    [_] SEIZE: folke/todo-comments.nvim: ✅ Highlight, list and search todo comments in your projects ⌇⡢⡮⢮⠺
      https://github.com/folke/todo-comments.nvim
  ~~~
  [_] #nvim XLR:TRY run global ranger in !tmux and connect to it by "tmux attach" and callback by !nvr
    [_] IDEA: import !nvr as my plugin to ranger -- to reduce !nvr startup time
      [_] ALT: use same hack with vim client session from !rnvimr
    [_] OBSOL: most of !rnvimr beside window open/hide code
      [_] SEE: minimal ex: ⦅vim⦆ *api-floatwin*
      [_] ALT:USE: https://github.com/voldikss/vim-floaterm
        https://github.com/jlesquembre/nterm.nvim
      [_] BET? akinsho/toggleterm.nvim: A neovim lua plugin to help easily manage multiple terminal windows ⌇⡢⡹⢠⣁
        https://github.com/akinsho/toggleterm.nvim
  [_] #nvim ALT quickhl ~~ NICE: position-based highlight (single instance) inof regex (all matches)
    Pocco81/HighStr.nvim: 🦎 A NeoVim plugin for highlighting visual selections like in a normal document editor! ⌇⡢⡹⡷⣐
      https://github.com/Pocco81/HighStr.nvim
    structured/"rich" text, text annotations/overlay · Issue #1767 · neovim/neovim ⌇⡢⡹⡸⡉
      https://github.com/neovim/neovim/issues/1767
  [_] TRY: grammar on the fly
    brymer-meneses/grammar-guard.nvim: Grammar Guard is a Neovim plugin that checks your grammar as you write your LaTeX, Markdown or plain text document. ⌇⡢⡹⢠⣗
      https://github.com/brymer-meneses/grammar-guard.nvim
  [!] READ: pros/cons of fmts
    Plugin metadata formats: what has been tried already, why did they fail, and can it succeed? - Plugins - Neovim Discourse ⌇⡢⡹⢠⣲
      https://neovim.discourse.group/t/plugin-metadata-formats-what-has-been-tried-already-why-did-they-fail-and-can-it-succeed/1153


2022-05-10-Tue-W19
  [%] ⊞ 10m ADD nou.vim to pack/*
  [⡢⡺⢚⢼] 30m use again plugins I skipped
    [X] DEV: filter unused plugins
  [⡢⡺⢹⠪] 20m CFG #nvim RSI
  >>>
  [‣] ◔ only this dir starting from this file left to SEIZE
    https://github.com/bageljrkhanofemus/dotfiles/blob/master/dot_config/nvim/lua/configs/keymaps.lua
  [_] ◔ add my usual useful options/keybindings
  [_] ⊞ ADD nou.vim to work properly
  [_] PERF: profile nvim baseline vs my config commented line by line
    baseline: $ strace -qCfttts48 -o/t/strace vv -cq
  +++
  [~] #tm:sweeping (old %tasks)
    [￪] look through &next tasks / archive improbable to ./rest


2022-05-11-Wed-W19
  [%] 1h25m CFG #nvim in Lua ※⡢⡸⣠⢀
    [+] ↯ 15m #nvim load ranger
    [⡢⡻⢅⡵] ↯ 30m #nvim FIXME !ranger ERR due to XDG and VimEnter
    [⡢⡻⢈⣼] ↯ 15m #nvim PERF !strace
    [+] ↯ 10m #nvim FIXME !ranger ERR :tmap <M-o> does not work
    [+] ↯ 15m #nvim strace / <space-out>
  [%] 3h <W> CFG #nvim plantuml
    [+] 1h30m #nvim CFG plantuml / vsel / openbrowser
    [+] 50m #nvim CFG .lua BUG not deleted /tmp, loads whole /@/airy
      [>] CHECK: sumneko .lua ROOT:string() -- does it generate /tmp name OR if some other fn does
    [+] 20m #nvim CFG plantuml / openbrowser
    [+] 20m #ranger FIX grep
  [_] #nvim SEIZE
    dotfiles/.config/nvim at master · nanotee/dotfiles ⌇⡢⡻⢛⠝
      https://github.com/nanotee/dotfiles/tree/master/.config/nvim


2022-05-12-Thu-W19
  [⡢⡽⠠⣦] 30m CHECK: sumneko .lua ROOT:string() -- does it generate /tmp name OR if some other fn does
    ::: FIXED: wrapper for server to delete tempdir ++ config.diagnostics.workspaceDelay=-1 to disable scanning
    sh               10397  10394    0 /usr/bin/sh /usr/bin/lua-language-server
    mktemp           10398  10397    0 /usr/bin/mktemp -d /tmp/lua-language-server.XXXX
    lua-language-se  10397  10394    0 /usr/lib/lua-language-server/bin/lua-language-server -E
      /usr/lib/lua-language-server/main.lua
      --logpath=/tmp/lua-language-server.VPOz/log
      --metapath=/tmp/lua-language-server.VPOz/meta
  [%] 30m/ restore !r.dict on


2022-05-13-Fri-W19
  [%] 20m <W> #nvim surround
    BET: ur4ltz/surround.nvim: A surround text object plugin for neovim written in lua. ⌇⡢⡾⢬⡼
      https://github.com/ur4ltz/surround.nvim
    ALSO: windwp/nvim-autopairs: autopairs for neovim written by lua ⌇⡢⡾⢩⣮
      https://github.com/windwp/nvim-autopairs
      [$] https://github.com/steelsojka/pears.nvim
    TRY:WF: mg979/vim-visual-multi: Multiple cursors plugin for vim/neovim ⌇⡢⡾⢪⠒
      https://github.com/mg979/vim-visual-multi
    mattn/emmet-vim: emmet for vim: http://emmet.io/ ⌇⡢⡾⢪⡜
      https://github.com/mattn/emmet-vim
  [_] SEIZE: gibhagwan/nvim-lua ⌇⡢⡾⢩⡏
    https://github.com/ibhagwan/nvim-lua
    https://github.com/ibhagwan/fzf-lua
    https://github.com/tjdevries/express_line.nvim
  [_] TODO: tabline IDEA: show only different path sections between all buffers
    [_] show .ext only if basenames are the same
    [_] show ./parent/ if basenames are the same
    [~] collapse common pfx/sfx in long basenames


2022-05-14-Sat-W19
  [+] 1h CFG #nvim ts textobj ※⡢⡸⣠⢀
  [!] PERF:NICE: SEIZE tricks for better lazy loading
    NvChad/NvChad: An attempt to make neovim cli functional like an IDE while being very beautiful, blazing fast startuptime ~ 20ms to 70ms ⌇⡢⡿⢱⣘
      https://github.com/NvChad/NvChad
  [!] RFC: replace my vim.cmd by nvim_cmd()
    `nvim_cmd` merged into Neovim master : neovim ⌇⡢⡿⢲⡥
      https://www.reddit.com/r/neovim/comments/uncloj/nvim_cmd_merged_into_neovim_master/
 FUTURE
  [_] FIND: review on github/gitlab directly in vim
    Introducing gh.nvim - A fully featured GitHub integration for reviewing code on the GitHub platform. : neovim ⌇⡢⡿⢲⣞
      https://www.reddit.com/r/neovim/comments/ul1tx3/introducing_ghnvim_a_fully_featured_github/
  [_] DEBUG ++ ALSO vim.pretty_print()
    Better global P function to print lua data structures : neovim ⌇⡢⡿⢳⡮
      https://www.reddit.com/r/neovim/comments/uonvnc/better_global_p_function_to_print_lua_data/
  [_] NICE:ALT:TRY: .nou
    nvim-neorg/neorg: Modernity meets insane extensibility. The future of organizing your life in Neovim. ⌇⡢⡿⢴⠒
      https://github.com/nvim-neorg/neorg#-philosophy
