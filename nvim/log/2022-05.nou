
2022-05-01-Sun-W17
  [⡢⡮⢳⢐] 1h15m ^⡢⡜⠥⣩ CFG #nvim commentary + ENH keybindings
  [⡢⡮⢾⣧] 20m ^⡢⡜⠥⣩ CFG #nvim ENH send jupyter on save
  [⡢⡮⣒⢸] 25m ^⡢⡜⠥⣩ CFG #nvim ENH telescope / which-key
  [⡢⡮⣞⡏] 15m CFG #tenjo fix global <g.*> opening :/path in non-@/todo repos
  [⡢⡮⣬⢙] ✗ 1h15m FIXME #nvim .py errors in !pylint log / !black does not work
    ~~ MAYBE:COS: require('impatient')
      ::: must wait until diagnostics fully loaded before saving/reformatting file


2022-05-02-Mon-W18
  [%] ◔ 30m DEBUG #nvim LSP does not work


2022-05-03-Tue-W18
  [X] 2h20m DEBUG #nvim LSP does not work
    [X] ≈ FIXME #nvim .py errors in !pylint log / !black does not work
  [+] 1h CFG #nvim PERF: startup/switch USE !execsnoop
  [+] 2h40m CFG #nvim PERF: new minimal mod @/airy
  [+] 1h #nvim FIXME: lualine disable calling "git diff" on BufEnter/Write
  [+] 2h #nvim DEV: my own colorscheme
  [+] 2h #nvim DEV: my own statusline


2022-05-04-Wed-W18
  [%] 4h25m CFG #nvim in Lua ⌇⡢⡳⡶⠫
    [⡢⡲⢢⠓] 20m ADD !vv cmd to run vim wo swap/plugins for pass edit
      ~~ BUT: !vis has peculiar grep-replace system from !sam, therefore I can't delete it either
    [⡢⡲⣗⡫] 3h20m FIXME: packadd/autocmd not loaded ※⡢⡲⣜⣯
      [⡢⡲⣁⣹] TODO: grep all event names $ /@/airy/nvim/exe/grep-autocmd
    [%] 45m lazy for "treesitter" too
      lua/nvim-treesitter/configs.lua:  api.nvim_create_autocmd("FileType", {
      lua/nvim-treesitter/indent.lua:  vim.api.nvim_create_autocmd("Filetype", {
  [_] #nvim IDEA:PERF: disable "filetype on"
  [_] HACK:TRY: lazy load plugins on "FuncUndefined"
    ~/.cache/vim/dein/repos/github.com/Shougo/dein.vim/autoload/dein/min.vim:30
    [_] NICE:ALT: plugins which are not easily automated (e.g. vim-surround) -- can be loaded after delay
      The illusion of fast startup times in vim | Devlog ⌇⡢⡳⡰⢽
        https://vonheikemen.github.io/devlog/tools/the-illusion-of-fast-startup-times-in-vim/
    [_] ALT: keybinding loading for e.g. :PlantUML
      command! MarkdownPreview packadd markdown-preview.nvim | call mkdp#util#open_preview_page()"
      autocmd! FileType qf packadd quickfix-reflector.vim


2022-05-05-Thu-W18
  [%] 4h20m CFG #nvim in Lua ⌇⡢⡴⣌⢣
    [X] 35m XLR: links
    [⡢⡳⣢⢌] 25m Speedup neovim - rok ⌇⡢⡳⣢⢇
      https://aca.github.io/neovim_startuptime.html
    [X] 25m MOVE vim/lua into nvim
    [⡢⡳⣴⢾] 50m SEIZE https://www.reddit.com/r/vim/comments/ufgrl8/journey_to_the_ultimate_imap_jk_esc/
    [X] 15m PERF #nvim
    [⡢⡴⠒⣞] 1h50m PERF colorscheme in .lua batch API
      [X] NICE:(nvim_set_hl): use as a base
        /@/plugins/nvim/core/start/nvim-treesitter/plugin/nvim-treesitter.lua
      [⡢⡴⠃⣰] SEE: *api-highlights* nvim_buf_add_highlight()
        PERF:NOTE: hl multiple regions in buf by single group ##
          src = vim.new_highlight_source()
          buf = vim.current.buffer
          for i in range(5):
              buf.add_highlight("String",i,0,-1,src_id=src)
      [⡢⡴⠐⣭] FAIL: should use ns_id=0 to override colorscheme
        # local ns_id = vim.api.nvim_create_namespace(vim.g.colors_name)
      [⡢⡴⠑⢶] CMP: almost no difference
        OLD: # 017.366  002.150  002.150: sourcing /@/airy/nvim/colors/airy.vim
        NEW: # 017.073  001.871  001.871: sourcing /@/airy/nvim/colors/airy.lua
      [⡢⡴⠒⢮] TRY: "blend/combine" to highlight word "hi" in bold w/o altering its color
        https://git.packetlostandfound.us/chiefnoah/neovim/commit/628f8f3dfdbc734096b04c3040c1f4d2cea873c4
        ::: FAIL: "blend" works like "opacity"
           and "nocombine" ¦ override attributes instead of combining them
    [%⡢⡴⠝⢉] 40m FIXME lazy load for "treesitter"
      [X] check PERF logs
  [_] TRY: use similar hi! by treesitter like in Semshi
    [_] TODO: re-create colorscheme from zero -- redefine only needed groups
      USE: as a base -- vim.g.material_style = "deep ocean" /@/plugins/#/material.nvim
  [_] #nvim USE new cfg for .nou
    [_] NEED: merge notches/etc. plugins into single pack with nou.vim
    [_] NEED: bkgr ranger
  [_] INSTALL:
    andymass/vim-matchup: vim match-up: even better % navigate and highlight matching words modern matchit and matchparen ⌇⡢⡳⣞⠢
      https://github.com/andymass/vim-matchup
      [_] TRY: lazy load by pressing "%"
    phaazon/hop.nvim: Neovim motions on speed! ⌇⡢⡳⣢⡈
      https://github.com/phaazon/hop.nvim
      nmap <silent><Leader>w :packadd hop.nvim \| :lua require'hop'.jump_words()<cr>
    Intelligently reopen files at your last edit position with `remember.nvim` : neovim ⌇⡢⡴⠈⣉
      https://www.reddit.com/r/neovim/comments/ufi9ws/intelligently_reopen_files_at_your_last_edit/
      Preserve last editing position in VIM - Stack Overflow ⌇⡢⡴⠈⣠
        https://stackoverflow.com/questions/7894330/preserve-last-editing-position-in-vim/14449484#14449484


2022-05-06-Fri-W18
  [•] 5h CFG #nvim in Lua ⌇⡢⡵⡤⣛
    [X] 1h CFG "cmp" again
    [+] 2h FIXME smart lazy loading
    [⡢⡵⡎⠵] 1h10m ^⡢⡜⠥⣩ CFG #nvim BUG: no auto-suggestions on "." in .py
      trigger completion menu after pressing `.` · Issue #340 · hrsh7th/nvim-cmp ⌇⡢⡵⡍⣾
        https://github.com/hrsh7th/nvim-cmp/issues/340
        ::: seems like it simply... works again ?
    [⡢⡵⡢⠧] 50m FIXME: luasnip does not have snippets
      ::: DONE: at least loads my own vim snippets based on honza/vim-snippets
      [$] BAD: too little of useful snippets ⌇⡢⡵⡛⢌
        https://github.com/molleweide/LuaSnip-snippets.nvim
      [≫] ADD my own .lua snippets :: BAD: too cumbersome syntax to use
        https://github.com/L3MON4D3/LuaSnip/blob/master/DOC.md#lua-snippets-loader
        https://github.com/L3MON4D3/LuaSnip/blob/master/Examples/snippets.lua#L190
      [≫] MERGE: pick only needed and cvt to .lua into my own snips
        /@/xdg_cache/vim/dein/repos/github.com/honza/vim-snippets/snippets/python.snippets
        /@/xdg_cache/vim/dein/repos/github.com/honza/vim-snippets/UltiSnips/python.snippets
        /@/xdg_cache/vim/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets/python.snip
    [⡢⡵⡤⡁] READ: paq-nvim/paq.lua at master · savq/paq-nvim ⌇⡢⡵⡤⠽
      https://github.com/savq/paq-nvim/blob/master/lua/paq.lua
      ::: nothing immediately useful
        [≫] FUTURE:SEIZE: how to call processes through vim.loop
    [•] #nvim SEIZE https://github.com/bageljrkhanofemus/dotfiles
    [_] DEV statusline with bufferlist and hl
  [_] CFG super-tab
    Example mappings · hrsh7th/nvim-cmp Wiki ⌇⡢⡵⡗⢢
      https://github.com/hrsh7th/nvim-cmp/wiki/Example-mappings#luasnip
