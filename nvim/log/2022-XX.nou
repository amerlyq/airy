
2022-07-01-Fri-W26
  [⡢⢿⡎⡦] 5m #nvim MOVE undo/etc. to ~/.local/state
    defaults: move session persistent data to $XDG_STATE_HOME by etircopyh · Pull Request #15583 · neovim/neovim ⌇⡢⢿⡎⠳
      https://github.com/neovim/neovim/pull/15583
    Add XDG_STATE_DIR (4f2884e1) · Commits · xdg / xdg-specs · GitLab ⌇⡢⢿⡎⠚
      https://gitlab.freedesktop.org/xdg/xdg-specs/-/commit/4f2884e16db35f2962d9b64312917c81be5cb54b
  [⡢⢿⡂⠝] ⊞ 30m #nvim as PAGER inof !less ⌇⡢⣀⠡⠡
    ::: USE: page-git
    ~ lucc/nvimpager: Use nvim as a pager to view manpages, diffs, etc with nvim's syntax highlighting ⌇⡢⢿⠼⡔
      https://github.com/lucc/nvimpager
    [X] ✓ I60R/page: Use neovim as pager ⌇⡢⢿⠼⡎
      https://github.com/I60R/page
    [_] TRY:VIZ: other available pagers
      $ pikaur --sync --noedit --nodiff --search pager
      [_] FIND: !pikaur FMT show date of last update
    [_] SEE
      Use Neovim as Your Man Pager ⌇⡢⢿⠽⠿
        https://www.chrisdeluca.me/article/use-neovim-as-your-man-pager/
      Nifty Nvim/Vim Techniques That Make My Life Easier -- Series 8 - jdhao's digital space ⌇⡢⢿⠽⡇
        https://jdhao.github.io/2020/11/11/nifty_nvim_techniques_s8/
      Using Neovim as MANPAGER, is there a way to preserve/improve syntax highlighting? : neovim ⌇⡢⢿⠽⡪
        https://www.reddit.com/r/neovim/comments/5kvy7d/using_neovim_as_manpager_is_there_a_way_to/
        ¦ This is a known issue. There is no way to get around it for now. If you would like to know more,
        see https://github.com/nhooyr/neovim/pull/1
        edit: I've opened https://github.com/neovim/neovim/issues/5846 for this
        edit: fixed at https://github.com/neovim/neovim/pull/5847 ;)


2022-08-06-Sat-W31
  [⡢⣮⣖⡒] 10m #nvim READ: LSP & Neovim; A Retrospective! - Vikas Rajbanshi ⌇⡢⣦⢔⣾
    https://www.vikasraj.dev/blog/lsp-neovim-retrospective
    [>] NICE: !neovim=0.8 will have {au LspAttach}
      -- I can remove lspconfig altogether SEE cfg snip above ※⡢⣦⢔⣾


2022-08-15-Mon-W33
  [⡢⣺⠲⠠] 14:05 ٍ⊞ 35m #nvim USAGE grep and yank all buffers matches ⌇⡢⣺⢚⡰
    LIOR
      :call setreg('b', [])
        OR: :let @b=""
      :bufdo g//norm!"Byy
      :bufdo g//norm!//"Byy | norm!"bp
      https://stackoverflow.com/questions/19430200/how-to-clear-vim-registers-effectively
    //e
      https://www.reddit.com/r/vim/comments/1xc2yr/shortcut_to_jump_to_end_of_search_match/
      https://stackoverflow.com/questions/5955965/move-to-start-and-end-of-search-lookup
    :execute "cexpr [] | bufdo vimgrepadd // %" | copen
      https://vi.stackexchange.com/questions/2904/how-to-show-search-results-for-all-open-buffers
    :bufdo vimgrepadd threading % | copen
      https://stackoverflow.com/questions/11975174/how-do-i-search-the-open-buffers-in-vim
    cdo %s/<search term>/<replace term>/cg
      https://stackoverflow.com/questions/5686206/search-replace-using-quickfix-list-in-vim/38559267#38559267
    :let buf=bufnr('%') | exec 'bufdo some_command' | exec 'b' buf
      https://stackoverflow.com/questions/24726022/how-do-i-prevent-changing-buffer-when-using-the-bufdo-command
    :vimgrep /\%>10l-/ *.txt  # skip yaml header
      https://vi.stackexchange.com/questions/29745/search-multiple-buffers-without-replacing
