[Commands]
1\Automatic=true
1\Icon=\xf014
1\Match="^[\\s\\n]*(.{,2})?[\\s\\n]*$"
1\Name=Ignore garbage
1\Remove=true
10\Icon=\xf0c5
10\InMenu=true
10\Name=current: delete to &trash
10\Remove=true
10\Shortcut=d
10\Tab=&trash
11\Command="copyq:\nvar color = 'rgba(255, 100, 255, 0.7)'\nvar mime = 'application/x-copyq-color'\n\nvar firstSelectedItem = selectedItems()[0]\nvar currentColor = str(read(mime, firstSelectedItem))\nif (currentColor != color)\n  setData(mime, color)\nelse\n  setData(mime, '')"
11\Icon=\xf1fc
11\InMenu=true
11\Name=current: highlight/mark
11\Shortcut=m
12\Command=copyq: selectItems(index())
12\Icon=\xf1fc
12\InMenu=true
12\Name=current: select
12\Shortcut=v
13\Command="copyq: \ntab(selectedTab())\nitems = selectedItems()\n// Always copy -- to edit separate copy\n// if (items.length > 1) {\n  var s = ''\n  for (i in items)\n    s += str(read('text/plain', items[i])) + '\\n';\n  tab(tab()[0])\n  add(s)\n  select(0)\n// }"
13\Icon=\xf066
13\InMenu=true
13\Name=selection: yank/join
13\Shortcut=y
14\Command="copyq: \ntab(selectedTab())\nitems = selectedItems()\nif (items.length > 1) {\n  var s = ''\n  for (i in items)\n    s += str(read('text/plain', items[i])) + '\\n';\n  add(s)\n  select(0)\n} else {\n  select(index())\n}\nhide()"
14\Icon=\xf066
14\InMenu=true
14\Name=selection: paste
14\Shortcut=space
15\Command="copyq: \ntab(selectedTab())\nitems = selectedItems()\nif (items.length > 1) {\n  var s = ''\n  for (i in items)\n    s += str(read('text/plain', items[i])) + '\\n';\n  add(s); edit(0)\n} else {\n  edit(index())\n}"
15\Icon=\xf040
15\InMenu=true
15\Name="selection: edit "
15\Shortcut=e
16\Command="copyq: copy(clipboard()); paste()"
16\GlobalShortcut=meta+shift+v
16\Icon=\xf0ea
16\IsGlobalShortcut=true
16\Name=paste: clipboard as plain text
17\Command="copyq:\ntab(selectedtab())\nitems = selecteditems()\nif (items.length > 1) {\n    text = ''\n    for (i in items)\n        text += read(i);\n    copy(text)\n} else {\n    select(items[0])\n}\n\nhide()\npaste()\ncopy('')"
17\Icon=\xf0ea
17\InMenu=true
17\Name=paste: and forget
17\Shortcut=ctrl+return
18\Command=copyq:\ncopy(dateString('yyyy-MM-dd hh:mm:ss'))\npaste()
18\Enable=false
18\Icon=\xf017
18\InMenu=true
18\Name=paste: date + time
19\Command="copyq:\nvar url = str(input())\nhide()\nexecute('r.b', url)\n// eval(\"execute(...,\".url.split(' '))"
19\Icon=\xf040
19\InMenu=true
19\Input=text/plain
19\Match=^(https?)://|^www\\.|\\.html?$
19\Name=open: url
19\Shortcut=o
2\Automatic=true
2\Command="copyq:\nvar url = str(data('text/plain'))\n  .replace(/^https:\\/\\/encrypted\\.google\\.com\\/url\\?q=/, '')\n  .replace(/&sa=U&.*$/, '')\ntab(selectedtab())\nsetData('text/plain', url)\ncopy(url)"
2\Enable=false
2\Icon=\xf127
2\InMenu=true
2\Match="^https://encrypted\\.google\\.com/url\\?q=.*&sa=U"
2\Name=purify: url
20\Command="copyq:\nvar editor = config('editor')\n\nvar fileName = str(input())\n  .replace(/^\\/([a-zA-Z])\\//, '$1:/')\n  .replace(/^file:\\/\\//, '')\n\nhide()\nexecute(editor, fileName)"
20\Icon=\xf040
20\InMenu=true
20\Input=text/plain
20\Match=^([a-zA-Z]:[\\\\/]|~|file://|%\\w+%|$\\w+|/)
20\Name=open: file
20\Shortcut=o
21\Command=copyq: edit(index())
21\Icon=\xf040
21\InMenu=true
21\Input=text/plain
21\Name=open: editor
21\Shortcut=o
22\Command="copyq: execute('r.dict', '--vim', str(input()))"
22\Icon=\xf040
22\InMenu=true
22\Input=text/plain
22\Name=open: dict
22\Shortcut=t
23\Automatic=true
23\Command="copyq:\nvar window = str(data('application/x-copyq-owner-window-title'))\nvar tagsMime = 'application/x-copyq-tags'\nvar tags = str(data(tagsMime)) + ', ' + window\nsetData(tagsMime, tags)"
23\Icon=\xf009
23\Name=Store Window Title
24\Automatic=true
24\Command="copyq:\nvar time = dateString('yyyy-MM-dd hh:mm:ss')\nsetData('application/x-copyq-user-copy-time', time)\n\nvar tagsMime = 'application/x-copyq-tags'\nvar tags = str(data(tagsMime)) + ', ' + time\nsetData(tagsMime, tags)"
24\Icon=\xf017
24\Name=Store Copy Time
25\Automatic=true
25\Icon=\xf0c5
25\Match=^(https?|ftps?|file)://
25\Name=Copy URL to &web
25\Tab=&web
26\Automatic=true
26\Icon=\xf0c5
26\Match=^[a-zA-Z0-9._]@([a-z]\\.)+[a-z]$
26\Name=Copy e-mail to &email
26\Tab=&email
27\Automatic=true
27\Command="copyq:\n    item = unpack(input())\n    window_title = item[\"application/x-copyq-owner-window-title\"]\n    if (window_title) {\n        // Remove the part of window title before dash\n        // (it's usually document name or URL).\n        tabname = str(window_title).replace(/.* (-|\x2013) /, \"\")\n        tab(\"Windows/\" + tabname)\n        write(\"application/x-copyq-item\", input())\n    }\n    "
27\Enable=false
27\Icon=\xf009
27\Input=application/x-copyq-item
27\Name=Window Tabs (for each of app)
28\Command="copyq:\nvar shortcut = str(data(\"application/x-copyq-shortcut\"))\nvar number = shortcut ? shortcut.replace(/^\\D+/g, '') : currentItem();\nselectItems(number)\ncopy(\"application/x-copyq-item\", pack(getItem(number)))"
28\Enable=false
28\Icon=\xf0cb
28\InMenu=true
28\Name=Copy Nth Item
28\Shortcut=ctrl+1, ctrl+2, ctrl+3, ctrl+4, ctrl+5, ctrl+6, ctrl+7, ctrl+8, ctrl+9, ctrl+0
29\Command="copyq:\n// Copy without changing X11 selection (on Windows you can use copy instead).\nfunction copy2() {\n  try {\n    var x = config('copy_clipboard')\n    config('copy_clipboard', false)\n    try {\n      copy.apply(this, arguments)\n    } finally {\n      config('copy_clipboard', x)\n    }\n  } catch(e) {\n    copy.apply(this, arguments)\n  }\n}\n\ncopy2()\nvar text = str(clipboard())\n\nif (text) {\n  var r1 = 'Text'\n  var r2 = 'Replace with'\n  var reply = dialog(r1, '', r2, '')\n\n  if (reply) {\n    copy2(text.replace(new RegExp(reply[r1], 'g'), reply[r2]))\n    paste()\n  }\n}"
29\Enable=false
29\GlobalShortcut=meta+alt+r
29\Icon=\xf040
29\IsGlobalShortcut=true
29\Name=Replace in Selection
3\Command=copyq: next()
3\Enable=false
3\GlobalShortcut=meta+v
3\Icon=\xf063
3\IsGlobalShortcut=true
3\Name=Copy next item
30\Command="copyq:\nseconds = 2;\npopup(\"\", clipboard(), seconds * 1000)"
30\Enable=false
30\GlobalShortcut=meta+alt+c
30\IsGlobalShortcut=true
30\Name=Show clipboard
31\Automatic=true
31\Command="copyq:\nvar link = str(input());\nvar href = '<a href=\"###\">###</a>';\nwrite(\n  'text/plain', link,\n  'text/html', href.replace(/###/g, link)\n);"
31\Enable=false
31\Icon=\xf127
31\Input=text/plain
31\Match=^(https?|ftps?|file|mailto)://
31\Name=Linkify
31\Remove=true
32\Automatic=true
32\Icon=\xf03e
32\Input=image/png
32\Name=Move Images to Other Tab
32\Remove=true
32\Tab=&images
33\Command="copyq:\ntext = str(input())\nurl = \"https://translate.google.com/#auto/en/???\"\n\nx = url.replace(\"???\", encodeURIComponent(text))\nhtml = '<html><head><meta http-equiv=\"refresh\" content=\"0;url=' + x + '\" /></head></html>'\n\ntab(selectedtab())\nwrite(index() + 1, \"text/html\", html)"
33\Enable=false
33\InMenu=true
33\Input=text/plain
33\Name=Translate to English
34\Command="copyq:\ntab(selectedtab())\nwrite(index() + 1, 'text/html', input())"
34\Icon=\xf035
34\InMenu=true
34\Input=text/plain
34\Match=^\\s*<(!|html)
34\Name=Render HTML
34\Shortcut=ctrl+r
35\Command="copyq:\ntext = str(input())\njs = 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'\n\nhtml = '<html><head><script type=\"text/javascript\" src=\"' + js + '\"></script></head><body>' + escapeHTML(text) + '</body></html>';\n\ntab(selectedtab())\nwrite(index() + 1, 'text/html', html)"
35\Enable=false
35\Icon=\xf12b
35\InMenu=true
35\Input=text/plain
35\Name=Render Math Equations
36\Command=copyq: plugins.itemtags.tag(decodeURIComponent('Important'))
36\Icon=\xf02b
36\InMenu=true
36\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) && fail()
36\Name=Tag as \x201cImportant\x201d
37\Command=copyq: plugins.itemtags.untag(decodeURIComponent('Important'))
37\Icon=\xf02b
37\InMenu=true
37\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) || fail()
37\Name=Remove tag \x201cImportant\x201d
38\Command=copyq: plugins.itemtags.tag()
38\Icon=\xf02b
38\InMenu=true
38\Name=Add a Tag
39\Command=copyq: plugins.itemtags.untag()
39\Icon=\xf02b
39\InMenu=true
39\Input=application/x-copyq-tags
39\Name=Remove a Tag
4\Command=copyq: previous()
4\Enable=false
4\GlobalShortcut=meta+c
4\Icon=\xf062
4\IsGlobalShortcut=true
4\Name=Copy previous item
40\Command=copyq: plugins.itemtags.clearTags()
40\Icon=\xf02b
40\InMenu=true
40\Input=application/x-copyq-tags
40\Name=Clear all tags
41\Command=copyq: plugins.itempinned.pin()
41\Icon=\xf08d
41\InMenu=true
41\Input=!OUTPUT
41\Name=Pin
41\Output=application/x-copyq-item-pinned
42\Command=copyq: plugins.itempinned.unpin()
42\Icon=\xf08d
42\InMenu=true
42\Input=application/x-copyq-item-pinned
42\Name=Unpin
5\Command="copyq: paste(); next()"
5\Enable=false
5\GlobalShortcut=meta+ctrl+v
5\Icon=\xf01a
5\IsGlobalShortcut=true
5\Name=Paste and copy next
6\Command="copyq: paste(); previous()"
6\Enable=false
6\GlobalShortcut=meta+ctrl+c
6\Icon=\xf01b
6\IsGlobalShortcut=true
6\Name=Paste and copy previous
7\Command=copyq: edit(-1)
7\Enable=false
7\GlobalShortcut=meta+shift+x
7\Icon=\xf044
7\IsGlobalShortcut=true
7\Name=Edit clipboard
8\Command=copyq: toggle()
8\Enable=false
8\GlobalShortcut=meta+x
8\Icon=\xf022
8\IsGlobalShortcut=true
8\Name=Show/hide main window (Chg: WM_hotkey)
9\Icon=\xf0c5
9\InMenu=true
9\Name=current: copy to &favorite
9\Shortcut=f
9\Tab=&favorite
size=42
