#!/bin/bash
#
# You can run this script from xsessionrc before each start of i3.
# In generator -- bind colors to $vars, so you can change color themes consistently
# In generation process by specifying one var you could change themes between light and dark

source ~/.bash/functions
source ~/.bash_export

  if [ "$1" == "-t" ]; then thm_nm="$1"
elif [ "$1" == "-l" ]; then
    for file in ~/.i3/themes/*.i3; do echo ${file##*/}; done; exit
else case ${1:-$CURR_THEME} in
#  transparent) wstr '#define Transparent' ;;
#       opaque) wstr '#define Opaque' ;;
       light) thm_nm="snow"  ;;
      dark|*) thm_nm="grass" ;;
esac; fi
source ~/.i3/themes/"${thm_nm}.i3"


# ----- Paths -----
dst=~/.i3/config
wbegin
wcat ~/.i3/config_base


# ---- Strings ----

# Choose appropriate terminal (get current launched v-terminal)
# Somehow works unstable, backing one level deeper to term=zsh instead of term=urxvt
#   when you launch it from install.sh and not directly
# pid=$$
# while [ "$(echo $pid)" != 1 ]; do
#     term=`ps -h -o comm -p $pid 2>/dev/null`
#     pid=`ps -h -o ppid -p $pid 2>/dev/null`
#     echo ": $term"
# done

bs="bindsym"   ;  t="    "       ;  def='$def'     ;  exno="\$exno"
mod="$bs \$mod";  mSd="$bs \$mSd";  mCd="$bs \$mCd";  mCS="$bs \$mCS"
ts="$t$bs"     ;  tod="$t$mod"   ;  tSd="$t$mSd"   ;  tCd="$t$mCd"   ;  tCS="$t$mCS"

ealws="exec_always --no-startup-id"
exi3="$exno i3-input -F "

term=`update-alternatives --get-selections | grep 'x-terminal-emulator' | awk '{ print $3 }'`
term="${term##*/}"

if [ "$term" == "urxvtd" ]; then
  term="urxvt"        # i3-sensible-terminal
  eurx="$exno urxvt"  # Many times inside tmux demon was hanged, so it's better use separate processes
else eurx="$exno $term"; fi

eflo="$eurx -name Float"
## Disabled: wnd name wrong setted in zsh only!
#ecli="$exno urxvtcd -e \$SHELL -i -c " #--hold

# ---- Writers ----
w_header(){ wprf "### $1 ###\n"; }
wmode_kmap(){ wstr "$1 mode \"\$mode_$2\""; }
wmode_begin(){ local m="\$mode_$2"
    wstr "set $m $3"; wmode_kmap "$1" "$2"; wstr "mode \"$m\" {"; }
wmode_end(){ wprf "\
$ts Return $def\n$ts Escape $def
$ts space  $def\n$ts q      $def
}\n\n"; }


# ----- Lists -----
hjkl="h j k l"
digits="1 2 3 4 5 6 7 8 9 0"
arrows="left down up right"
Arrows="Left Down Up Right"
wnames=( `cat ~/.i3/names | sed '/^[0-9]\+/!d' | awk '{ print $0 }' RS='\n' ORS=' '` )
wrknum=( $(echo \$w{01..10}) )
# for 12 wrk need to fix shift+1-7 interval, names from file. Maybe use also and 'grave' window?
wrkkey="1 2 3 4 5 6 7 8 9 0" # minus equal
wrksps="${wrknum[@]}"

# ----- Vars -----

wprf "\n### =========== Script-generated items ============= ###\n"
w_header "Bind: Refresh on i3mod"

wlistf "set %s %s" "$wrksps" "${wnames[@]}"

# wstr "set \$refbar bash -c 'kill -s SIGRTMIN+1 \$(pidof i3blocks)'"
# i3mod=64 #LAlt
#wstr "bindcode $i3mod $exno \$upd lang"
# key_ralt=108
# wstr "bindcode --release $key_ralt $exno \$upd lang"

wprf "\n### ================== Workspaces ================== ###\n"

M1=( `cat ~/.cache/displayside | sed 1d` )
if [ ! -z "$M1" ]; then
    if [ ${#M1[@]} -le 1 ]; then M2="${M1[0]}"; else M2="${M1[1]}"; fi
    for i in {1..5}; do monitors="$M1 $monitors $M2"; done
    w_header "WorkSpaces: Output"
    wlistf "workspace %s output %s" "$wrksps" "$monitors"
fi

w_header "WorkSpaces: Focus"
    wlistf "$mod+%s workspace number %s" "$wrkkey" "$wrksps"

w_header "WorkSpaces: Move container"
    wlistp "$mSd+%1 \$move_ctw number %2" "$wrkkey" "${wrknum[*]:0:7}"

w_header "WorkSpaces: Move and move container"
    wlistp "$mCd+%1 \$move_ctw number %2, workspace number %2" "$wrkkey" "$wrksps"

wprf "\n### ================== Navigation ================== ###\n"
w_header "Navigation: Focus"
    wlistf "$mod+%-5s focus %s" "$hjkl $Arrows" "$arrows $arrows"

smove="50 px"
w_header "Navigation: Move"
    wlistf "$mSd+%-5s move %s $smove" "$hjkl $Arrows" "$arrows $arrows"

wprf "\n### ================== Mark & Go =================== ###\n"
w_header "Navigation: Mark"
    wmode_begin "$mod+t" 'mark' "Mark this: 0..9, <mod+T>"
        wprf "$tod+t $exi3 'mark %%s' -P 'Mark name: ' ,$def\n\n"
        wlistf "$ts %s mark mrk%s ,$def" "$digits" "$digits"
    wmode_end

w_header "Navigation: GoTo"
    wmode_begin "$mod+g" 'goto' "GoTo mark: 0..9, Mod+G"
        wprf "$tod+g $exi3 '[con_mark=%%s] focus' -P 'Go to mark: ' ,$def\n\n"
        wlistf "$ts %s [con_mark=\"mrk%s\"] focus ,$def" "$digits" "$digits"
    wmode_end

w_header "Navigation: Direct Go"
    m_dir="-> [v]im, [r]anger, [n]cmpcpp, [h]top | [u]rxvt, [g]vim, [f]irefox, [p]idgin"
    wmode_begin "$mod+s" 'godir' "$m_dir"
        # Temporary solution: Jump exactly to the next open instance
        wlistf "$ts %s [class=\"(?i)$term\" title=\"(?i)%s\"] focus ,$def" "v r n h" "vim ranger ncmpcpp htop"
        wlistf "$ts %s [class=\"(?i)%s\"] focus ,$def" "u g f p" "urxvt gvim Firefox Pidgin"
    wmode_end

w_header "Navigation: <F1..12>"
for i in {1..12}; do wprf "
$mSd+F$i mark mrkF$i
$mCS+F$i unmark mrkF$i
$mod+F$i [con_mark=\"mrkF$i\"] focus
$mCd+F$i [con_mark=\"mrkF$i\"] \$move_ctw current
"; done


wprf "\n### ==================== Edit ====================== ###\n"
w_header "Containers: Edit"
    smoveprecise="5 px"
    ssize="10 px or 2 ppt"
    wmode_begin "$mod+e" 'container' "Edit"
        wstr "$ts f floating toggle"
        wlistf "$ts %s $exno ~/.i3/ext/ratio_size %-5s ,$def" "1 2 3" \
            "0.5" "0.667" "0.75"
        # direction = <up, down, left, right, width or height>
        # resize <grow|shrink> <direction> [<px> px [or <ppt> ppt]]
        wlistf "$ts %s resize %-12s $ssize" "$hjkl" \
            "shrink right" "grow down" "shrink down" "grow right"
        wlistf "$ts Shift+%s resize %-11s $ssize" "$hjkl" \
            "grow left" "shrink up" "grow up" "shrink left"
        wlistf "$ts %-5s resize %-13s $ssize" "$Arrows" \
            "shrink width" "grow height" "shrink height" "grow width"
        wlistf "$tod+%s move %-5s $smoveprecise" "$hjkl" "$arrows"
        wlistf "$ts Shift+%-5s move %-5s $smoveprecise" "$Arrows" "$arrows"
    wmode_end

    wmode_begin "$mCd+e" 'workspace' "Workspace/Tune-up"
        wstr "$ts r $exi3 '$exno ~/.i3/ext/rename_current_workspace \"%%s\"' -P 'WS Name: ' ,$def"
        wprf "$tSd+r $exno ~/.i3/ext/rename_as_focused ,$def\n\n"
        #bar hidden_state hide|show|toggle [<bar_id>]
        #bar mode dock|hide|invisible|toggle [<bar_id>]
        wlistf "$t$bs \$m%sd+grave bar mode %-9s ,$def" "o S C" "toggle dock invisible"
    wmode_end

wprf "\n### =================== System ===================== ###\n"
wstr "$mSd+r restart"
wstr "$mSd+x $exno ~/.i3/ext/i3exit lock"

w_header "Mode: System"
msg_sys='<i3> : shu[t]down, [r]eboot, [l]ock | log[o]ut, [s]uspend, [h]ibernate | re[c]onf, re[n]ew, [e]xit'
    wmode_begin "$mCd+Delete" 'system' "$msg_sys"
        wlistf "$ts %s $exno ~/.i3/ext/i3exit %-9s ,$def" "l o s h r t" \
            "lock logout suspend hibernate reboot shutdown"
        # c - reload the configuration file
        # n - restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
        # e - logs you out of your X session
        wlistf "$ts %s %s" "c n" "reload restart"
        wstr "$ts e $exno ~/.i3/ext/i3exit logout"
    wmode_end
    wmode_kmap "$mSd+Escape" 'system'


wprf "\n### ================== Launchers =================== ###\n"
# Autochoose filemng by OS version.
STD_FMG="pcmanfm"
command -v $STD_FMG >/dev/null 2>&1 || STD_FMG="nemo --no-desktop"

w_header "Mode: Open"
m_open="<Open> : [n]cmpcpp, [h]top | [P]owertop, [t]lp | [g]vim, [c]opyq, [p]idgin, [f]irefox, [F]m, [S]ets | [m]usic (s)ound"
    wmode_begin "$mod+o" 'open' "$m_open"
        wlistf "$ts %s $eflo -e %s ,$def" "n h Shift+p t" \
            "ncmpcpp" "htop" "gksudo powertop" "gksudo tlp start"
        wlistf "$ts %s $exno %s ,$def" "g c p Shift+f m Shift+s"  \
            "gvim" "copyq toggle" "pidgin" "$STD_FMG" "~/.i3/ext/dmenu_mpd_fmove" \
            "/usr/lib/cinnamon-settings/cinnamon-settings.py sound"
    wmode_end


w_header "Run: Prgs"
    wstr "$mod+u $eurx"      # Because it's urxvt!
    wstr "$mod+Return $eurx -e zsh -ic ranger-auto"
    wstr "$mSd+Return $eflo -e ranger-auto"
    wstr "$mCd+Return $eflo"

w_header "Run: Menus"
    wstr "$mCd+d $exno j4-dmenu-desktop"   #ALT (slow): i3-dmenu-desktop
    wstr "$mod+d $exno ~/.i3/dmenu/lsbin"  #ALT (firm): dmenu_run
    wstr "$bs Print $exno ~/.i3/ext/screenshot"

w_header "Autostart"
    wstr "$ealws auto-start"

wprf "\n### ================= Multimedia =================== ###\n"

w_header "Control: volume"
    wlistf "$bs %-20s $exno ~/.i3/ext/volume %-3s" \
        "XF86AudioRaiseVolume XF86AudioLowerVolume XF86AudioMute" \
        '20%' '2%+' '2%-' ' '
    wlistf "$mod+%-5s $exno ~/.i3/ext/volume %-3s" \
        "Home Prior Next End" '20%' '2%+' '2%-' ' '

w_header "Control: ncmpcpp"
    wlistf "$bs %s $exno ncmpcpp %-6s && \$upd mpd" \
        "XF86AudioPlay XF86AudioNext XF86AudioPrev XF86AudioStop" \
        "toggle next prev stop"
    wlistf "$mCd+%-5s $exno mpc %-6s && \$upd mpd" \
        "Home Prior Next End" toggle prev next "seek +5 >/dev/null"

w_header "Control: lang"
    wlistf "$mSd+%s $exno ~/.i3/ext/lang %s" "0 9 8" "us ru ua"

# w_header "Control: touchpad on/off"
#   wlistf "$mod+%s $exno synclient TouchpadOff=%s" "p Shift+p" 1 0
#   bindsym XF86TouchpadToggle exec "synclient TouchpadOff=$(synclient | awk '/TouchpadOff/ {print ($3+1)%2}')"
#   bindsym XF86AudioMicMute exec "amixer -D pulse sset Capture toggle"

wprf "\n### =================== Windows ==================== ###\n"
w_header "Windows: Settings"
# wlistf "assign [class=\"^%1\$s\"] %2\$s" "\$w4 \$w4 \$w9 \$w9 \$w8" \
    # Firefox Pale_moon Wine Steam t-engine64

wstr "assign [class=\"^Firefox$\"]    \$w04"
wstr "assign [class=\"^Pale\ moon$\"] \$w04"
wstr "assign [class=\"^Wine$\"]       \$w09"
wstr "assign [class=\"^Steam\"]       \$w09"
wstr "assign [class=\"^t-engine64\"]  \$w08"
wstr "assign [title=\"^Win7hdd\"]     \$w07"

# How to launch in floating regime? Simply create window with name starting with Float*.
# floating enable running before launching of exec, so influence on previous focused wndw
wstr "for_window [class=\"(?i)$term\" instance=\"(?i)^Float*\"] floating enable"

wstr "for_window [window_role=\"pop-up\"] floating enable"
#wstr "for_window [class=\"(?i)$term\"] border 1pixel"
#wstr "for_window [class=\"(?i)$term\" title=\"(?i)vim\"] border none"

# wlistf "for_window [class=\"(?i)%s\"] floating enable" \
#     "lxappearance Copyq Pidgin"
#wstr "for_window [class=\"(?i)$term\" instance=\"(?i)htop\"] move scratchpad"

wstr "for_window [class=\"^Pidgin\"] floating enable"
wstr "for_window [instance=\"feh\"] fullscreen"
wstr "for_window [class=\"^Conky\"] border none"
wstr "for_window [instance=\"^Download\" class=\"^Firefox\"] floating enable"
wstr "for_window [class=\"^t-engine64\"] border none"

wprf "\n### ================== Bar & Theme ================= ###\n"
# (dzen2, xmobar, maybe even gnome-panel?),
# you can just remove the i3bar configuration and start your favorite bar instead.

    # You can restrict i3bar to one or more outputs (monitors). The default is to handle all outputs.
    # Restricting the outputs is useful for using different options for different outputs by using multiple bar blocks.
    # You could specify many times 'output <output>' to duplicate in multiple monitors
    # LVDS1 - laptop, HDMI2, DP2 - DisplayPort, DFP3|DFP4
    #output            LVDS1
    #none if lxpanel
    #tray_output         primary   # <none|primary|output>

    # Needs to be generated
    # https://github.com/ultrabug/py3status
    # https://github.com/sardemff7/j4status
    #status_command conky -c ~/.i3/i3conky.conf | dzen2 -h '17' -w '600' -x '1317' -y '1062' -bg '#000000' -ta 'rm'
    #status_command conky -c ~/.i3/i3conky.conf | dzen2 -h '18' -w '600' -x '766' -y '751' -bg '#000000' -ta 'rm'
    #status_command    i3status --config ~/.i3/i3status.conf
    #status_command sh ~/bin/.conkyi3.sh

    #error: binding_mode_indicator yes
    # hide - hidden and is only unhidden in case of urgency hints or by pressing the modifier key
    # show - it is drawn on top of the currently visible workspace
    #error: hidden_state        hide    # <hide|show>


#~/.i3/i3status.sh
wstr "$wndtheme
bar {
    id                  bar-main # Specifies the bar ID for the configured bar instance (if many)
    mode                dock     # <dock|hide|invisible>
    position            bottom   # <top|bottom>
    workspace_buttons   yes
    status_command      i3blocks -c ~/.i3/i3blocks.conf
    modifier            \$mod
    $bartheme}
"

echo "W: $dst"

