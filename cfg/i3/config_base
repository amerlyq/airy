# vim: ft=sh
# i3 config file (v4) :
# http://i3wm.org/docs/
# https://wiki.archlinux.org/index.php/i3
# NOTE:
#   Comment with '#' only full lines
#       cause i3 appends line-comments to valid args and create mess
#   Vars: no recursive expansion

# see
# 4.12. Automatically putting clients on specific workspaces
# 4.16. Interprocess communication
# 6. List of commands
# 6.3. Manipulating layout
# +- 6.4. Focusing/Moving containers
# 6.16. i3bar control

# not very clean what it is
# 5.4. Bar ID
# Commands: ipc_socket, ipc-socket

# To get appropriate key syms use '$ xev'
#bind \mod\w, bindcode [--release] [0-9]\+

# Valid: Mod1-Mod5, Shift, Control (see xmodmap(1)).
# Mod1 (Alt) is more comfortable in use, so I remapped Alt<->Win
# to use Mod4 in place of Alt and keep Alt functionality.
set $mod Mod4
floating_modifier $mod
focus_follows_mouse no  # auto on hover <yes|no>


popup_during_fullscreen smart # <smart|ignore|leave_fullscreen>
# display hint over 'this' time, when switching to urgent wksp
force_display_urgency_hint 800 ms

# When being in a tabbed or stacked container, the first container will be focused when you use focus down on the last container?—?the focus wraps. If however there is another stacked/tabbed container in that direction, focus will be set on that container. This is the default behavior so you can navigate to all your windows without having to use focus parent.
# If you want the focus to always wrap and you are aware of using focus parent to switch to different containers, you can use the force_focus_wrapping configuration directive. After enabling it, the focus will always wrap. <yes|no>
force_focus_wrapping no
#  Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".
workspace_auto_back_and_forth yes

#floating_minimum_size 75 x 50
#floating_maximum_size -1 x -1

### New wksp ###
default_orientation auto # <horizontal|vertical|auto>
workspace_layout default # <default|stacking|tabbed>
hide_edge_borders none # <none|vertical|horizontal|both>
# border <normal|pixel> [0-9], only 'normal' with titlebar
new_window pixel 1
new_float pixel 1

# ==================== Appearance ===========================

# split in <horizontal,vertical> orientation
bindsym $mod+n split vertical
bindsym $mod+m split horizontal
bindsym $mod+f fullscreen


#mode "Change" { #Mode to occacionaly control the appearance and behaviour
# change container layout {stacked, tabbed, toggle split}
bindsym $mod+period layout stacking
bindsym $mod+comma  layout tabbed
bindsym $mod+slash  layout toggle split
#bindsym $mod+slash  layout toggle all
# window border style 'border <normal|1pixel|none|pixel>'
bindsym $mod+b border toggle
#}

# ==========================================================

# kill focused window
bindsym $mod+backslash kill
# kill all wdws on wksp
bindsym $mod+Control+backslash focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, kill, workspace back_and_forth
bindsym $mod+Shift+q kill

bindsym $mod+semicolon focus parent
bindsym $mod+Shift+semicolon focus child
#bindsym $mod+apostrophe focus child

bindsym $mod+Tab workspace next_on_output
bindsym $mod+Shift+Tab workspace prev_on_output
bindsym $mod+Control+Left workspace prev
bindsym $mod+Control+Right workspace next

### Current and previous ###
# Works like a charm tag system -- we can share browser, moving it throughout all wksps
bindsym $mod+a workspace back_and_forth
bindsym $mod+Control+a move container to workspace back_and_forth; workspace back_and_forth
bindsym $mod+Control+Shift+a move container to workspace back_and_forth

#i3-msg 'rename workspace "1: www" to "10: www"'
bindsym $mod+z exec i3-input -P 'WS Name: ' -F 'exec --no-startup-id ~/.i3/ext/rename_current_workspace "%s"'

### ==================== Workspaces ===================== ###

# you can let i3 execute any command when it encounters a specific window.
# The valid criteria are the same as those for commands, see [command_criteria]
# #class #instance #window_role #id #title #urgent #con_mark #con_id (all beside ids are regex (PCRE))
#       xprop | grep -i 'class'
#       obxprop | grep WM_CLASS

# # A less useful, but rather funny example:
# # makes the window floating as soon as I change
# # directory to ~/work
# for_window [title="x200: ~/work"] floating enable
# resize window (you can also use the mouse for that)


### ======================= Scratchpad ======================= ###
# The scratchpad container gets displayed in the centre of a window in a floating mode.
# Exmpl: ncmpcpp, mc, bash prompt, email, REPL, alsamixer, or emacs for notes
# Make the currently focused window a scratchpad (could contain >1 windows)
# Toggle show/hide for the first scratchpad window (you can have >1 scratchpad container)
bindsym $mod+i scratchpad show
bindsym $mod+Shift+i move scratchpad

# By default, scratchpads only contain a single window. However, containers can also be made a scratchpad.
# Create a new container (for example, Mod+Enter), split it (Mod+v) and create another container. Focus the parent (Mod+a), split in the opposite direction (Mod+h), and create again.
# Focus the first container (with focus parent as needed), make the window floating (Mod+Shift+Space), and move it to the scratchpad (Mod+Shift+-). You can now split containers to preference.
# Note: Containers cannot be resized individually in floating windows. Resize the containers before making windows floating.
# Tip: When only using terminal applications, consider a multiplexer such as tmux instead.

# Use Mouse+$mod to drag floating windows to their wanted position
# Change focus between tiling / floating windows
# Toggle tiling / floating (also remove current window from scratchpad)
# mod+Control+space don't work with my xkb (no keycode!), use space for some more useful
bindsym $mod+Shift+f focus mode_toggle
bindsym $mod+Control+f floating toggle #enable

# Show the sup-mail scratchpad window, if any.
# bindsym mod4+s [title="^Sup ::"] scratchpad show

# switching to the appropriate workspace and setting focus to the windows
# Need module such as launcher with the same names but for focusing


### ===================== Multi-monitors ===================== ###
# SEE: configuring your monitors and 'xrandr' usage
# http://i3wm.org/docs/userguide.html#multi_monitor
# http://i3wm.org/docs/userguide.html#_giving_presentations_multi_monitor

# Scratchpad, containers: move them between the screens with std move command.
# Restrict to the current output: use workspace [next/prev]_on_output
# move container to output <<left|right|down|up>|<output>>
# move workspace to output <<left|right|down|up>|<output>>
# Container: can move wdw to current workspace (makes sense only with criteria).

# Move the current workspace to the next output
# (effectively toggles when you only have two outputs)
bindsym $mod+bracketleft  focus output left
bindsym $mod+bracketright focus output right
bindsym $mod+Control+bracketleft  move container to output left
bindsym $mod+Control+bracketright move container to output right
bindsym $mod+Control+Shift+bracketleft  move workspace to output left
bindsym $mod+Control+Shift+bracketright move workspace to output right
# Focusing wksps in pairs on two monitors
bindsym $mod+Shift+bracketleft  focus output left; workspace prev_on_output; focus output right; workspace prev_on_output
bindsym $mod+Shift+bracketright focus output left; workspace next_on_output; focus output right; workspace next_on_output

## Put this window on the presentation output.
#bindsym $mod+x move container to output VGA1

# Other miscellaneous keybindings.
# bindsym XF86Sleep exec --no-startup-id systemctl suspend
# bindsym Mod4+l exec --no-startup-id i3lock && xset s dpms force off
# bindcode XF86Launch1 exec /usr/bin/pactl play-sample that_was_easy
# bindcode 233 exec xbacklight -inc 20
# bindcode 232 exec xbacklight -dec 20
# bindcode 251 exec xbacklight -set 86

bindsym $mod+x [urgent=latest] focus
bindsym $mod+Insert exec --no-startup-id ~/.i3/ext/rename_as_focused

