# i3 config file (v4) :
# vim: ft=sh

### ================== Variables =================== ###

set $mod Mod4
set $mSd Mod4+Shift
set $mCd Mod4+Control
set $mCS Mod4+Control+Shift

set $exno exec --no-startup-id
set $move_ctw move container to workspace

set $def mode "default"
set $upd ~/.i3/blocks/update


### =================== Options ==================== ###

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
focus_follows_mouse no                     # auto on hover <yes|no>
popup_during_fullscreen leave_fullscreen   # <smart|ignore|leave_fullscreen>
# Display hint 'this' more time on switch to urgent wrksp
force_display_urgency_hint 800 ms

# When being in a tabbed or stacked container, the first container will be focused when you use focus down on the last container?—?the focus wraps. If however there is another stacked/tabbed container in that direction, focus will be set on that container. This is the default behavior so you can navigate to all your windows without having to use focus parent.
# If you want the focus to always wrap and you are aware of using focus parent to switch to different containers, you can use the force_focus_wrapping configuration directive. After enabling it, the focus will always wrap. <yes|no>
force_focus_wrapping no
#  Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".
workspace_auto_back_and_forth yes

floating_minimum_size 100 x 80
#floating_maximum_size -1 x -1

### New wksp ###
default_orientation auto    # <horizontal|vertical|auto>
workspace_layout default    # <default|stacking|tabbed>
hide_edge_borders none      # <none|vertical|horizontal|both>
# border <normal|pixel> [0-9] px, only 'normal' with titlebar
new_float pixel 2 px
new_window pixel 2 px


### ================== Appearance ================== ###

# split in <horizontal,vertical> orientation
bindsym $mod+n split vertical
bindsym $mod+m split horizontal
bindsym $mod+f fullscreen


#mode "Change" { #Mode to occacionaly control the appearance and behaviour
# change container layout {stacked, tabbed, toggle split}
bindsym $mod+period layout stacking
bindsym $mod+comma  layout tabbed
bindsym $mod+slash  layout toggle split
#bindsym $mod+slash  layout toggle all
#}


### ================== Operations ================== ###

# kill focused window
bindsym $mod+backslash kill
bindsym $mCS+backslash $exno ~/.i3/ctl/wnd_active_kill
# kill all wdws on wksp
# bindsym $mSd+backslash focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, focus parent, kill, workspace back_and_forth
bindsym $mSd+q kill

bindsym $mod+semicolon focus parent
bindsym $mSd+semicolon focus child
#bindsym $mod+apostrophe focus child
bindsym $mod+z [urgent=latest] focus

bindsym $mod+Tab   workspace next_on_output
bindsym $mSd+Tab   workspace prev_on_output
bindsym $mCd+Tab   $move_ctw next_on_output, workspace next_on_output
bindsym $mCS+Tab   $move_ctw prev_on_output, workspace prev_on_output
bindsym $mCd+Left  workspace prev
bindsym $mCd+Right workspace next

### Current and previous ###
# Works like a charm tag system -- we can share browser, moving it throughout all wksps
bindsym $mod+a workspace back_and_forth
bindsym $mSd+a $move_ctw back_and_forth
bindsym $mCd+a $move_ctw back_and_forth; workspace back_and_forth


### ================== Scratchpad ================== ###
# The scratchpad container gets displayed in the centre of a window in a floating mode.
# Exmpl: ncmpcpp, mc, bash prompt, email, REPL, alsamixer, or emacs for notes
# Make the currently focused window a scratchpad (could contain >1 windows)
# Toggle show/hide for the first scratchpad window (you can have >1 scratchpad container)
bindsym $mod+i scratchpad show
bindsym $mSd+i floating enable
bindsym $mCd+i floating disable
bindsym $mCS+i move scratchpad

# By default, scratchpads only contain a single window. However, containers can also be made a scratchpad.
# Create a new container (for example, Mod+Enter), split it (Mod+v) and create another container. Focus the parent (Mod+a), split in the opposite direction (Mod+h), and create again.
# Focus the first container (with focus parent as needed), make the window floating (Mod+Shift+Space), and move it to the scratchpad (Mod+Shift+-). You can now split containers to preference.
# Note: Containers cannot be resized individually in floating windows. Resize the containers before making windows floating.
# Tip: When only using terminal applications, consider a multiplexer such as tmux instead.

# Change focus between tiling / floating windows #toggle/enable
# Toggle tiling / floating (also remove current window from scratchpad)
bindsym $mod+w focus mode_toggle
bindsym $mSd+w floating enable
bindsym $mCd+w floating toggle

# Show the sup-mail scratchpad window, if any.
# bindsym mod4+s [title="^Sup ::"] scratchpad show

# Need module such as launcher with the same names but for focusing. Use dmenu?

### ================ Multi-monitors ================ ###
# Scratchpad, containers: move them between the screens with std move command.
# Restrict to the current output: use workspace [next/prev]_on_output
# move container to output <<left|right|down|up>|<output>>
# move workspace to output <<left|right|down|up>|<output>>
# Container: can move wdw to current workspace (makes sense only with criteria).

# Move the current workspace to the next output
# (effectively toggles when you only have two outputs)
bindsym $mod+bracketleft  focus output left
bindsym $mod+bracketright focus output right
bindsym $mCd+bracketleft  move workspace to output left
bindsym $mCd+bracketright move workspace to output right
bindsym $mSd+bracketleft  move container to output left;  focus output left
bindsym $mSd+bracketright move container to output right; focus output right
# Focusing wksps in pairs on two monitors
bindsym $mCS+bracketleft  focus output left; workspace prev_on_output; focus output right; workspace prev_on_output
bindsym $mCS+bracketright focus output left; workspace next_on_output; focus output right; workspace next_on_output

## Put this window on the presentation output.
#bindsym $mod+x move container to output VGA1

# Other miscellaneous keybindings.
# bindsym XF86Sleep exec --no-startup-id systemctl suspend
# bindsym Mod4+l exec --no-startup-id i3lock && xset s dpms force off
# bindcode XF86Launch1 exec /usr/bin/pactl play-sample that_was_easy
# bindcode 233 exec xbacklight -inc 20
# bindcode 232 exec xbacklight -dec 20
# bindcode 251 exec xbacklight -set 86
