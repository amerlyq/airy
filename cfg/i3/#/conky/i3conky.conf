# vim: ft=json
# https://github.com/patrickpowns/dotfiles/blob/master/.conkyrc
background no  # Set to yes if you want Conky to be forked in the background
out_to_x no
own_window no
# To disable shadows around conky windows - when used compton
own_window_class conky
out_to_console yes
double_buffer no

update_interval 1
total_run_times 0
short_units yes
pad_percents 3
override_utf8_locale yes
uppercase no
use_spacer right # left, right, none


## Sensors examples
# Top Process: ${top name 1}
# Root: {fs_used /}/${fs_size /} /home ${fs_free /home} /${fs_size /home}
# Load: ${loadavg 1} ${loadavg 2} ${loadavg 3}
# Load: $loadavg
# Swap: ${swap}/${swapmax} (${swapperc}%)
# Processes: ${running_processes} / ${processes}
# CPU: $cpu%
# HDD: $diskio_read :Read $diskio_write :Write
# Temp: Core0: ${exec sensors | awk '/Core 0/ {print $3}'} Core1: ${exec sensors | awk '/Core 1/ {print $3}'}
# Freq: ${freq cpu0}Mhz
# Uptime: $uptime
# Kernel:$kernel on $machine
# Name: $nodename - $sysname
# Battery: ${battery_percent BAT0}%

# Weather temperature
#${exec weather --headers="Temperature" -q | awk '/Temperature/ {print $2}'}C ${exec weather --headers="Sky conditions" -q | awk '/Sky conditions/ {print $3 " " $4}'} | \
# Volume %
#Vol: ${mixer}
#V ${exec pactl list sinks | grep "Volume: 0"| tail -n 1 | awk '{print substr($3, 1, index($3, "%") - 1)}'}%

#{"full_text": " ☠ [${exec whoami}] ", "color":"\#ffffff","separator":false},
#{"full_text": " ♥ [${exec hostname}] ", "color":"\#ffffff","separator":false},
#{"full_text": " ▲ [${upspeed p4p1}] ", "color":"\#ffffff","separator":false},
#{"full_text": " ▼ [${downspeed p4p1}] ", "color":"\#ffffff","separator":false},
#{"full_text": " || [$membar] ", "color":"\#ffffff","separator":false},
#{"full_text": " ■ [$cpubar] ", "color":"\#ffffff","separator":false},
#{"full_text": " ↑ [${uptime}] ","color": "\#ffffff","separator":false},
#{"full_text": " [${time %a %d %b} ${time %H:%M:%S}] ","color": "\#ffffff","separator":false}

TEXT
#^fg(\#75dcff)C $cpu%  ^fg(\#87ff73) M$memperc%^fg() | ^fg(\#ffa24e)${time %A %d %B %I:%M}^fg()
#"
 [
  { "full_text" : "${if_running deadbeef-gtkui}${execi 3 /opt/deadbeef/bin/deadbeef --nowplaying "%a  --  %t (%e/%l)"}${endif}", "color" : "\#338B78", "icon":"${if_running deadbeef-gtkui}/home/bfg/bin/xbm/phones.xbm${endif}",  "icon_color": "\#ECC3FF"},
  { "full_text" : "$mem/$swap", "color" : ${if_match ${memperc}<70}"\#338B78"${else}"\#abab00"${endif}, "icon":"/home/bfg/bin/xbm/mem.xbm",  "icon_color": ${if_match ${memperc}<70}"\#ECC3FF"${else}"\#abab00"${endif}},
  { "full_text" : "${cpu cpu0}%", "color" : ${if_match ${cpu cpu0}>90}"\#a00000"${else}"\#338B78"${endif}, "icon":"/home/bfg/bin/xbm/cpu.xbm",  "icon_color":${if_match ${cpu cpu0}>90}"\#a00000"${else}"\#ECC3FF"${endif}},
  { "full_text" : "$battery_percent%$battery_time", "color" : ${if_match $battery_percent>60}"\#338B78"${else}"\#abab00"${endif}, "icon":"/home/bfg/bin/xbm/bat_full_01.xbm",  "icon_color": ${if_match $battery_percent>60}"\#ECC3FF"${else}"\#abab00"${endif}},
  { "full_text" : "${if_existing /proc/net/route wlan0}▲ ${upspeed wlan0} ▼ ${downspeed wlan0}${endif}" , "color" : "\#338B78", "icon":"${if_existing /proc/net/route wlan0}/home/bfg/bin/xbm/wifi_01.xbm${endif}",  "icon_color": "\#ECC3FF"},
  { "full_text" : "${if_existing /proc/net/route eth0}▲ ${upspeed eth0} ▼ ${downspeed eth0}${endif}" , "color" : "\#338B78", "icon":"${if_existing /proc/net/route eth0}/home/bfg/bin/xbm/net-wired.xbm${endif}",  "icon_color": "\#ECC3FF"},
  { "full_text" : "${if_existing /proc/net/route ppp0}▲ ${upspeed ppp0} ▼ ${downspeed ppp0}${endif}" , "color" : "\#338B78", "icon":"${if_existing /proc/net/route ppp0}/home/bfg/bin/xbm/usb_02.xbm${endif}",  "icon_color": "\#ECC3FF"},
  { "full_text" : "U: $uptime_short" , "color" : "\#338B78"},
  { "full_text" : "${time %d}.${time %m} (${time %a}), ${time %X}" , "color" : "\#a0a0a0"}
  ],
