FIND
	Is it possible to have two sets of desktops?
		: One -- for work-related windows, one for my own

SEE
	Haskell
		Ref
			https://wiki.haskell.org/Learn_Haskell_in_10_minutes
			https://en.wikibooks.org/wiki/Haskell/Indentation
			>> http://learnyouahaskell.com/making-our-own-types-and-typeclasses
		Intro
			> http://echo.rsmw.net/n00bfaq.html
			http://prajitr.github.io/quick-haskell-syntax/
			https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/Simple%20examples
			>> http://www.toves.org/books/hslist/
			https://www.haskell.org/tutorial/monads.html
			http://learnyouahaskell.com/a-fistful-of-monads
		Workspace
			>>> http://docs.haskellstack.org/en/stable/README/http://docs.haskellstack.org/en/stable/README/
			>> http://www.stephendiehl.com/posts/vim_haskell.html
	Xmonad
		Ref
			https://wiki.haskell.org/Xmonad
			http://xmonad.org/xmonad-docs/xmonad/XMonad-Operations.html
			:	CHECK: hide/reveal
			: http://xmonad.org/xmonad-docs/xmonad/XMonad-StackSet.html
			SEE
				[_] 48% https://wiki.haskell.org/Xmonad/General_xmonad.hs_config_tips
				https://wiki.haskell.org/Xmonad/Frequently_asked_questions
				https://wiki.haskell.org/Xmonad/Config_archive
			>>> http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Doc-Extending.html#Editing_key_bindings
			: http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Doc-Extending.html
		Blog
			>> https://ro-che.info/docs/xmonad/
			>>> http://lynnard.me/blog/2013/11/05/building-a-vim-like-xmonad-prompt-task-groups-topical-workspaces-float-styles-and-more/
			https://wiki.haskell.org/Xmonad/Config_archive/John_Goerzen%27s_Configuration
			http://lynnard.me/blog/2014/01/06/supercharge-your-xmonad-colored-tabs-dynamic-prompt-window-slash-workspace-insert-position/
			> https://draftin.com/documents/490906?token=i8AJR0nv8RK3G8KYV07NXxzArVeDgkTBvPvj4qa3M8BkdX-mUs07C8ZGj6_T4mwZAr8A22gcRjkqgUr3PmHR2rM
		Examples
		: https://github.com/mcmaniac/xmonad/blob/master/xmonad.hs
		: http://www.vicfryzel.com/2010/06/27/obtaining-a-beautiful-usable-xmonad-configuration/
		: http://lpaste.net/52657
		: http://xmonad.org/xmonad-docs/xmonad/src/XMonad-Config.html
		: https://github.com/vicfryzel/xmonad-config/blob/master/xmonad.hs
		@ http://www.cgogolin.de/downloads/xmonad.hs
		: https://raw.githubusercontent.com/chtaube/xmonad-config/master/xmonad.hs
		>> https://gist.github.com/kmels/2882350
		> https://github.com/rileyrg/xmonad/blob/master/xmonad.hs
		>> https://github.com/thomasf/dotfiles-thomasf-xmonad/blob/master/.xmonad/lib/XMonad/Config/A00001.hs#L620
			:TRY: great example of 'addName' to annotate keymap
	Bar
		https://wiki.archlinux.org/index.php/Xmobar
		http://projects.haskell.org/xmobar/
		>>> https://github.com/tsiliakis/xmobar

	CHECK
		+ http://stackoverflow.com/questions/6232804/xmonad-set-screen-and-workspace
		~ http://unix.stackexchange.com/questions/217213/getting-xmonad-to-show-name-of-current-workspace-in-xmobar

THINK:ENH
	Alt navi
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-Navigation2D.html
		http://stackoverflow.com/questions/27747079/xmonad-is-there-a-way-to-bind-a-simultaneously-triggered-keychord
	Menu pop
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-Commands.html
	Action on empty WS
		https://mail.haskell.org/pipermail/xmonad/2012-February/012357.html
	[_] Rotate all slave windows through master --> like tiled Circle
		:= Useful when all slaves are too small to estimate which are unnecessary already
	[_] M-a -- instead toggleWS use nextMatch/History?
		Need to skip all windows in current WS
		Cycle through all previous WS in history order?
	[_] Each $ xmonad --restart # drops to wksp 1
		[_] how to make that action only from ~/.xinitrc but not when restart manually?
		:= so, it must work on startuHook but not on --restart
		[_] make on (re)start jumping to `windows (current || 1)`
	[_] gmrun
	[_] xkill
	[_] open next empty workspace for browser/etc (maybe on M-Tab? Better <BS>)
		THINK: what to do when all workspaces are exhausted?
		: Maybe, provide additional wksp on M-`++[0-9-=], and use M-`-M-` for IM wksp
		: ALT: use <BS> as prefix for wksp -- then could add even <BS>-[a-z]
	[_] Modular Configuration
		: As of xmonad-0.9, any additional Haskell modules may be placed in ~/.xmonad/lib/ are available in GHC's searchpath. Hierarchical modules are supported: for example, the file ~/.xmonad/lib/XMonad/Stack/MyAdditions.hs could contain:
		; module XMonad.Stack.MyAdditions (function1) where
		; 	function1 = error "function1: Not implemented yet!"
		: Your xmonad.hs may then import XMonad.Stack.MyAdditions as if that module was contained within xmonad or xmonad-contrib.
	[_] RFC: 'let mCopyq = ("M-z " ++)' extract as function applying to list to create submaps
	[_] optimize map lambda on tuple's 1st/2nd element -- CHECK: \f -> map (f *** id)
		http://stackoverflow.com/questions/10818779/can-i-map-the-first-element-of-a-pair-without-arrows
		: CHECK Control.Arrow.first
	[_] TRY: show [ ]\d in left-below corner for fullscreen, where \d -- number of active windows
		:= use special small subscript font <fc=1>
		:TRY: simultaneously use superscript font for floating windows
	[_] show somewhere master windows count if it != 1
		:= use same subscript like for fullscreen?
		:= but then how about two masters in fullscreen?
	[_] Bind to F1..F12 some macro functions to apply to all wksp? OR create macro on-the-fly?
	[_] NEED: back to last in history non-empty workspace
		:= useful after 'nextEmptyWS' and after simultaneously jumping on additional wksp like M-g [a-z]
		:= Maybe, even replace default action on M-a, and move original to M-A-a

RFC
	: myManageHook = composeAll . concat $
	: [ [ className   =? c --> doFloat           | c <- myFloats]
	: , [ title       =? t --> doFloat           | t <- myOtherFloats]
	: , [ className   =? c --> doF (W.shift "3") | c <- webApps]
	: , [ className   =? c --> doF (W.shift "4") | c <- ircApps]
	: ]

TODO
	Add menu to xmobar -- to control windows -- float/kill/move/resize
		:= resize: latch mouse down and activate resizing
		:	after resize you can simply click Mouse1 again
	Switch wksp by mouse click in xmobar
		http://www.arch-ed.dk/xmobar-clickable-workspaces/
		https://bbs.archlinux.org/viewtopic.php?id=185798
		http://xmonad.org/xmonad-docs/xmonad-contrib/src/XMonad-Hooks-DynamicLog.html
			: NEED? re-implement dynamic logger
		: -- ENH:NEED: backward Map for wksp nm -> keyseq for xdotool
		: -- WARNING: remove all possible tags <...> from input before passing
		: -- NEED:ENH: use XMonad.EZConfig.parseSpecial to convert other keys
		: toXdotool ' ' = " "
		: toXdotool '-' = "+"
		: toXdotool 'M' = "super"
		: toXdotool 'C' = "ctrl"
		: toXdotool 'S' = "shift"
		: toXdotool 'A' = "alt"
		: -- ALT to map()
		: -- toXdotool [] = ""
		: -- toXdotool (x:xs) = convert x ++ toXdotool xs
		: id2xkey ws = concatMap toXdotool $ mkMap M.! ws
	Fullscreen/layout
		ToggleLayouts
			: import XMonad.Layout.ToggleLayouts  (toggleLayouts, ToggleLayout(..))
			: , ("M-f"        , sendMessage ToggleLayout)
			: myLayout = toggleLayouts Full tiled ||| toggleLayouts Full (Mirror tiled)
	Cycling
		FIXME:CHG: latching modifier
		: import XMonad.Actions.CycleRecentWS (cycleWindowSets)
		: import Graphics.X11.ExtraTypes.XorgDefault  -- xK_ISO_Left_Tab
		: let visWs w = map (W.greedyView `flip` w) (visTags w)
		:     hidWs w = map (W.greedyView `flip` w) (hidTags w)
		:     rctWs w = map (W.view `flip` w)       (map ($ hidTags w) [head, last])
		: in [ ("M-<Tab>"  , cycleWindowSets visWs [xK_Super_L] xK_Tab xK_ISO_Left_Tab)
		:    , ("M-S-<Tab>", cycleWindowSets hidWs [xK_Super_L] xK_ISO_Left_Tab xK_Tab)
		:    , ("M-a"      , cycleWindowSets rctWs [xK_Super_L] xK_a xK_a)
		: ] ++
	Cycle through workspaces
		: import XMonad.Util.WorkspaceCompare (getSortByIndex)
		: let followTo :: CC.Direction1D -> CC.WSType -> X ()
		: followTo dir t = CC.doTo dir t getSortByIndex (\w -> (windows (W.shift w)) >> (windows (W.greedyView w)))
	wmname
		: import XMonad.Hooks.SetWMName
		: , startupHook = setWMName "LG3D"
	TRY: minimized windows -- are they enhance experience? Or individual wksp are better?
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Layout-Minimize.html
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Layout-BoringWindows.html

	2016-03-14 [X] mark & goto like i3
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-TagWindows.html

	TRY: sharing window between workspaces
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-CopyWindow.html

	THINK: right/left docking persistent bar tab/panel ~ 1/8 screen width
		: -- to keep there small mpv  preview when watching amv and doing work
		: -- some status widgets / load graphics
		:= bottom/top panel seems also acceptable -- with video like 27:10

	[_] ADD prompt for Xmonad commands -- to do doIgnore on mpv and make it docking
		:= can be used as temporary alternative to completed wishes/functions

	[_] How in Layout.IM use second region for Skype
		:= Or split left zone by vertical and use two masters

	[_] Mouse drag-n-drop windows
		XMonad.Layout.WindowSwitcherDecoration
		many integrated into -> XMonad.Config.BlueTile

	[_] Toggle manageHook order -- to bring new windows in slave or in master
		> S-Space must be inverted to Space behaviour

	USE:
		spawn or bring up
		> http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-WindowGo.html
		: import XMonad.Actions.WindowGo (runOrRaise)
		: startup = do
		: 	runOrRaise <String executable> (<Query Bool to find it>)
		: 	runOrRaise "chromium" (className =? "Chromium")
		: 	runOrRaise ...

		SEE: http://blog.komar.be/my-way-of-handling-pdfs-in-xmonad/


FIND:(how to)
	[_] toggle two different actions on one keybind?
	[_] combine actions in keybindings
		http://superuser.com/questions/562653/xmonad-bind-key-to-chain-of-commands
	[_] make operator :: (map f x) when x=list and (f x) when string


FIXME
	[_] focus back from master
		TODO: back in history, but in bound of current workspace
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-GroupNavigation.html
		> http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-CycleWindows.html
	[_] open new windows as slave (don't replace / keep master)
		THINK:ENH: https://mail.haskell.org/pipermail/xmonad/2009-October/008930.html
		:> manageHook = (doF W.swapDown) <+> manageHook defaultConfig
	[_] stacking/tabbed layout as in i3
		> https://www.reddit.com/r/xmonad/comments/g5z3g/ask_rxmonad_tabbed_master_area/
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Layout-Tabbed.html
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Layout-SubLayouts.html
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Layout-Groups.html
	[_] control floating window
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-FloatKeys.html
		http://stackoverflow.com/questions/9157349/xmonad-when-floating-a-window-move-or-resize-it
		http://stackoverflow.com/questions/19975180/xmonad-toggle-a-window-between-floating-and-tiled
		http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Hooks-ManageHelpers.html
			: see more do*Float
		> http://unix.stackexchange.com/questions/30865/dragging-and-resizing-floating-windows-in-xmonad-without-the-modkey
		CHECK http://stackoverflow.com/questions/9157349/xmonad-when-floating-a-window-move-or-resize-it
	[_] toggle workspace on M-[0-9] back and forth
	[_] move current window to prev WS
		: ("M-S-a"      , shiftToPrev >> toggleWS)
	[_]	force spawn on master pane
		: ("M-S-u"      , spawn "r.t" >> windows W.swapMaster)
	[_] launch auto-start on xmonad restart
	[_] Set ResizeTile directly to concrete value
		: "M-C-," 1/2 ; "M-C-." default
	[_] when last window on WS is closed, deactivate layout to default
		:= or only mostly problematic one - fullscreen
		: https://mail.haskell.org/pipermail/xmonad/2012-February/012414.html
		: http://xmonad.haskell.narkive.com/jYM0p2Em/reset-layout-to-default-on-last-window-close
	[_] hide/unhide xmobar on M-S-f
	[_] replace import XMonad.Config with direct code
		: http://xmonad.org/xmonad-docs/xmonad/src/XMonad-Config.html
	[_] need disable mod+Mouse1 from making windows floating (OR? maybe M-S-m1)
		:= Better solution: allow making floating only after (x*x+y*y > threshold)
		: http://xmonad.org/xmonad-docs/xmonad/src/XMonad-Config.html
	[_] when works doFloat hook -- make (x, y) -> (10, 10) instead (0, 0)
		:= it's too close to screen borders, which feels bad
	[_] Replace EZConfig by manual submaps
		[_] null/stop default action if any other key beside submap
		[_] show indicator of current state
		: http://xmonad.org/xmonad-docs/xmonad-contrib/XMonad-Actions-Submap.html
		[_] search in sources of Submap for in/out state variable to use for indicator


BUG
	[_] After floating window open/close, focus drops to Master window instead last slave
	[_] 'f' in mpv don't make fullscreen -- SEE FullscreenMessage
		https://github.com/mpv-player/mpv/issues/888
		:BUT it works if mpv is floating!
	[_] Why I need 'nm!!0:[]' instead of head nm?
	[_] xkb latching залипает for Mod4+a -- cycleWindows -- then you need only 'a'
		:= scenario norm: press and hold Alt, then click 'a', release Alt
		:= scenario bad: press/release Alt, then click 'a', 'a'
		:= maybe it's _double_ latching -- xmonad also treats *activator* as latcher
		:> USE XMonad.Actions.CycleWS simpler functions
	2016-02-23 [X] xmobar 'M+C' -- then 'leds' -- "Could not execute command 'python3'"
	[_] onWorkspace -- can't switch layout on '4' workspace afterwards -- only fixed list?
		:= I want 'preffered' layout instead of 'single'
	[_] new floating windows are hidden, borders are shadowed by upper windows
		: myManageHook = composeAll $ [ insertPosition Below Newer
		https://bbs.archlinux.org/viewtopic.php?id=98695
		https://github.com/NickHu/dotxmonad/blob/master/xmonad.hs
		http://wpr.cz/ccx/paste/2012-04-10/1.txt
		[_] floating windows can be located deeper then tailed after restart?
		[_] compton casts shadow on border of windows, making it dim
			:= Reason -- insertPosition Below Newer -- below moves Z-axes also
			:= new window becomes master and placed on the top
			:= NEED: to always place active window to top of the stack
		[_] BUG: new floating are always master -- breaks fullscreen experience
	[_] ranger -> *.html in slave window
		riffle opens vimb in stack below
		but after closing vimb, focus moves to next slave window, instead prev
		:= maybe, to determine next focus on some event use history somehow?
	2016-02-29 [X] Intermitten ERR: executeFile
		:> NEED paci xorg-xmessage to show errors
		: System.Posix.Process.executeFile
		: System.Environment.getEnvironment
