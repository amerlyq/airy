#!/usr/bin/env python3

from subprocess import check_output, CalledProcessError
import re

try:
    out = check_output(['xset', '-q'])
except CalledProcessError:
    out = ''
else:
    out = out[:-1].decode('ascii')

m = re.search('LED mask:\s*(\w+)', out)
leds = int(m.group(1), 16) if m else 0

indicators = (1, 11, 2, 3, 4, 9, 12, 13)
colors = ((1, 1, 0), (1, 1, 0), (0, 1, 0), (0, 0, 1),
          (1, 0, 1), (0, 1, 1), (0.2, 0.2, 0.2), (1, 0, 0))
state = [bool(leds & (1 << (n - 1))) for n in indicators]

code = 0x2800 + sum([(1 << i) for i, b in enumerate(state) if b])
tr = list(map(list, zip(*[colors[i] for i, b in enumerate(state) if b])))

ss = list(map(sum, tr)) if tr else [1, 1, 1]
clr = "%02X"*3 % tuple(map(lambda v: v*255 // max(ss), ss))

print("{0:c}\n{0:c}\n#{1:s}".format(code, clr))
