// vim: ft=cpp

default partial
xkb_compatibility "latch"  {

    virtual_modifiers  Alt,Meta,Super,Hyper;

    interpret.repeat= False;
    setMods.clearLocks= True;
    latchMods.clearLocks= True;

    // BUG: not working at all
    // interpret ISO_Lock+Any {
    //     //useModMapMods= level1;
    //     action = LockMods(modifiers=modMapMods);
    // };

    // ----------------------------------------------
    latchMods.latchToLock= True;

    interpret Shift_L {
        action= LatchMods(modifiers=Shift);
    };

    interpret Shift_R {
        action= LatchMods(modifiers=Shift);
    };

    interpret Control_R {
        action= LatchMods(modifiers=Control);
    };

    interpret Alt_L+Any {
        //useModMapMods= level1;
        virtualModifier= Alt;
        action = LatchMods(modifiers=modMapMods);
    };

    interpret Alt_L {
        action = LatchMods(modifiers=Alt);
    };


    interpret Meta_L+Any {
        //useModMapMods= level1;
        virtualModifier= Meta;
        action = LatchMods(modifiers=modMapMods);
    };

    interpret Meta_L {
        action = LatchMods(modifiers=Meta);
    };

    // ----------------------------------------------
    latchMods.latchToLock= False;

    interpret Super_L+Any {
        //useModMapMods= level1;
        virtualModifier= Super;
        action = LatchMods(clearLocks,modifiers=modMapMods);
    };

    interpret Super_L {
        action = LatchMods(modifiers=Super);
    };

    interpret Super_R+Any {
        //useModMapMods= level1;
        virtualModifier= Super;
        action = LatchMods(clearLocks,modifiers=modMapMods);
    };

    interpret Super_R {
        action = LatchMods(modifiers=Super);
    };

    // ----------------------------------------------
    interpret Control_L {
        action= SetMods(modifiers=Control);
    };

    interpret Hyper_L+Any {
        //useModMapMods= level1;
        virtualModifier= Hyper;
        action = SetMods(modifiers=modMapMods);
    };

    // Clear any locked modifiers when the key is released.
    interpret Hyper_L {
        action = SetMods(modifiers=Hyper); // ,clearLocks
    };
};
