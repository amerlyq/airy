"1.1

loadplugins '\.(js|penta)$'
group user
command! -nargs=1 jumptodef -javascript let sourceLocation = function(str) {
       \    let mapping = function(s) {
       \        let [, mc, key] = /(?:(.)_)?(.*)/.exec(s);
       \        return mappings.get(mc ? modes.modeChars[mc] : modes.NORMAL, key) ||
       \            dactyl.echoerr("Bad bad: " + s);
       \    };
       \    if (isArray(str))
       \        str = str[0];
       \    let frame = ((str[0] === ":") ? commands.get(str.substr(1)) :
       \        /'.*?'/.test(str) ? options.get(str.slice(1,-1)) :
       \        mapping(str)).definedAt;
       \    return { url: util.fixURI(frame.filename), line: frame.lineNumber };
       \};
       \//buffer.viewSource(sourceLocation(args[0]));
       \let loc = sourceLocation(args[0]);
       \window.openDialog("chrome://global/content/viewSource.xul",
       \    "_blank", "all,dialog=no",
       \    loc.url, null, null, loc.line);
command! smartReader -javascript if (typeof window.__readable_by_evernote === "object") {
       \    dactyl.execute("emenu Tools.Clearly");
       \} else if (typeof window.FirefoxReader === "object") {
       \    dactyl.execute("feedkeys <M-A-z>");
       \} else if (typeof commands.get("readability") === "object") {
       \    dactyl.execute("readability");
       \} else {
       \    dactyl.execute("bml-readability");
       \}
command! trans -javascript let getParameterByName = function(url, name) {
       \    let name = name.replace(/[\[]/, '\\\[').replace(/[\]]/, '\\\]');
       \    let regexS = '[\\?&]' + name + '=([^&#]*)';
       \    let regex = new RegExp(regexS);
       \    let results = regex.exec(url);
       \    if (results == null)
       \        return '';
       \    else
       \        return decodeURIComponent(results[1].replace(/\+/g, ' '));
       \};
       \if (buffer.URL.spec.startsWith('http://translate.google.com/')) {
       \    dactyl.open(getParameterByName(buffer.URL.spec, 'u'));
       \} else {
       \    dactyl.open('http://translate.google.com/translate?hl=en&sl=auto&tl=en&u=' + encodeURIComponent(buffer.URL.spec));
       \}
map -count -modes=n j -builtin <count>3j
map -count -modes=n k -builtin <count>3k
map -count -modes=n d -builtin <count>D
map -count -modes=n D -builtin <count>d
map -count -modes=n gd -builtin <count>:js<Space>config.tabbrowser.removeTab(tabs.getTab())<Return>
map -count -modes=n p -builtin <count>P
map -count -modes=n P -builtin <count>p
map -count -modes=n w -builtin <count><C-p>
map -count -modes=n e -builtin <count><C-n>
map -count -modes=n h -builtin <count><C-o>
map -count -modes=n l -builtin <count><C-i>
map -count -modes=n <C-o> -builtin <count>10<Right>
map -count -modes=n <C-i> -builtin <count>10<Left>
map -count -modes=n x -builtin <count><C-^>
map -count -modes=n U -builtin <count>:undo<Space>
map -count -modes=n gm -builtin <count>:set<Space>guioptions!=m<Return>
map -count -modes=n gf -builtin <count>:tab<Space>viewsource<Return>
map -count -modes=n,v <C-c> -builtin <count><C-v><C-c>
map -count -modes=n ,r -builtin <count>:smartReader<Return>
map -count -modes=n ,t -builtin <count>:trans<Return>
map -count -modes=i <C-c> -builtin <C-v><C-c>
map -count -modes=i <C-v> -builtin <C-v><C-v>
map -count -modes=i <C-x> -builtin <C-v><C-x>
set complete=location,suggestion
set guioptions=bBCTrs
set maxitems=10
set nextpattern='[下后]\s*一?\s*[页张个篇章頁]','\bolder\s*posts\b',^→$,'^Next [>»]','^Next »','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bmore\b'
set previouspattern='[上前]\s*一?\s*[页张个篇章頁]','\bnewer\s*posts\b',^←$,'[<«] Prev$','« Prev$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)','(<|«)$'
set scrolltime=0
set showstatuslinks=''
set strictfocus=tao123.com:despotic,'chrome:*':laissez-faire,*:moderate
style chrome://browser/content/browser.xul statuspanel#statusbar-display { display:block; visibility: visible; overflow-x: hidden; }
style chrome://browser/content/browser.xul statuspanel#statusbar-display[label^="Looking"], statuspanel#statusbar-display[label^="Connect"], statuspanel#statusbar-display[label^="Transfer"], statuspanel#statusbar-display[label^="Waiting"], statuspanel#statusbar-display[label^="Read"], statuspanel#statusbar-display[label^="Time"] {opacity: 0 !important; }

" vim: set ft=pentadactyl:
