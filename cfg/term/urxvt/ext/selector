#!/usr/bin/env perl

use warnings;
use strict;
use lib "$ENV{HOME}/.urxvt/ext";
use urxcommon qw(:API);

my %keymap = (
    'y' => sub { $_[0]->status_osd("yes"); $_[0]->deactivate(); },
    'n' => sub { $_[0]->status_osd("no");  $_[0]->deactivate(); },
);

# DEV for hints use vertical overlay over whole screen on left side
#   (two char width)

sub status_osd
{
    my ($self, $pref, $str) = @_;
    my $status = $pref .': ';
    $status .= $str if $str;

    $self->{overlay}->set(0,0, $self->special_encode($status));
}

sub key_press
{
    my ($self, $event, $keysym, $string) =  @_;
    my $key = fmt_key($self, $event, $keysym);
    # Check on white list: $action =~ m/[0-9][a-z]/i
    ($keymap{$key} || sub {})->($self);
    $self->status_osd($key);

    1  # EXPL intercept all keys until confirm choice
}


sub activate {
    my ($self) = @_;
    $self->{overlay}->show();
    $self->enable (
        key_press => \&key_press,
        tt_write  => sub { 1 }
    );
}

sub deactivate {
    my ($self) = @_;
    $self->{overlay}->hide();
    $self->disable('key_press', 'tt_write');
}


sub on_user_command
{
    my ($self, $cmd) = @_; $_ = $cmd;
    return () unless s/^selector://;

    if (/^run$/) {
        # print "S:", @INC, "\n";
        $self->status_osd("Run? (y/n)");
        $self->activate();

    } else { cmd_err($_); }

    ()
}

sub on_start
{
    my ($self) = @_;
    $self->{overlay} = $self->overlay(0,-1, $self->ncol,1, urxvt::OVERLAY_RSTYLE, 0);
    $self->{overlay}->hide();

    ()
}

sub on_destroy
{
    my ($self) = @_;
    $self->deactivate();
    delete $self->{overlay} if $self->{overlay};
}
