Launch in dir with 'tags' and open file with corresponding symbol/function
  vim -t funcName
Edit binary (somewhat useful options preset)
  vim -b file
  | :set bin
  Read and do:
   http://vim.wikia.com/wiki/Improved_hex_editing

| vim -   | read stdin for input, not cmds; ex commands read from stderr
| vim -R  | :set noro  | to disable readonly
| vim -m  | :set write | to allow 'write'
| vim -M  | :set ma   | to be 'modifiable'
| :w!     | to save in readonly

| +[num]  | line num
| +/{pat} | line with patt
| -c {command} | execute in ex
| -W / -s | write keys to file and read file as script
 Useful to source macro in registers, do repetitive edits on text, etc

Investigate
| :h remote
$ vim --servername "gvim" --remote-expr "2+2"
$ vim --servername Foo --remote-send "GoHello world! <ESC>"

Suspend-resume
$ v() {
if [ -z "$_V" ] ; then
  { vim --servername vim$$ $@; } &
  _V=$(jobs -l | grep $! | sed -e "s/^\[\(.*\)\].*/\1/")
  fg $_V && unset _V
else
  # Resume to bg vim and load new files
  {   sleep .1
    vim --servername vim$$ --remote-silent $@
    vim --servername vim$$ --remote-send ':redraw<CR>'
  } &
  fg $_V && unset _V
fi
}

Batch and encoding (charset) of files
  All in subdirs
    $ ls **/*(.c)
    $ iconv -f CP1251 -t UTF-8 *.srt
  Count files with each encoding
    $ find . -type f -exec file -i {} \; | sed '/.*charset=\(\S\+\)$/s//\1/' | sort | uniq -c
  Batch convert by vim
    $ find . -type f -exec file -i {} \; G iso-8859-1 | sed 's/^\([^:]\+\):.*/"\1"/' > /tmp/lst
    $ cat /tmp/lst | xargs -I file vim -c "set nomore" -S cmm.vim file
