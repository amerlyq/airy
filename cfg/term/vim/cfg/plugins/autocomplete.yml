--- ## General
scrooloose/syntastic:  # CHECK
  description: Check syntax on file save for many languages
  lazy: 0

tpope/vim-endwise:  # CHECK
  description: Automatic not-persistent closing statements
  mappings: [[i, <CR>, <C-x><CR>]]

# Alt: bb:abudden/taghighlight "(small and fast) from bitbucket
# NOTE: easytags can make CursorMove very slow
#   https://github.com/xolox/vim-easytags/issues/68#issuecomment-28480981
#NeoBundle xolox/vim-easytags, { depends: xolox/vim-misc }

--- ## Neo-based
osyo-manga/vim-marching:  # CHECK
  description: |
    - Async clang code completion.
    - Integration with neocomplete: for stdlib++, boost, etc (works on Windows)
    - http://www.reddit.com/r/vim/comments/1x4mvg/vimmarching_with_neocomplete_doesnt_complete_c/
  filetypes: [c, cpp]
  depends: Shougo/vimproc.vim

# THINK what can be useful to add
# repository = Shougo/neoinclude.vim
# repository = Shougo/neco-vim
# repository = Shougo/neco-syntax

Shougo/neocomplete.vim:  # CHECK
  description: lua-based autocompletion framework, for all beside ycm. Need much less memory.
  disabled: '!has("lua") || has("nvim")'
  vim_version: 7.3.885
  insert: 1
  depends:
    - Shougo/context_filetype.vim
    - Shougo/vimproc.vim

Shougo/deoplete.nvim:  # CHECK
  description: |
    Like neocomplete but for neovim
    DO: :UpdateRemotePlugins and restart. Then once execute :DeopleteEnable
  neovim: 1
  insert: 1
  depends: Shougo/context_filetype.vim

# ALT SirVer/ultisnips
Shougo/neosnippet.vim:  # CHECK
  filetypes: snippet
  insert: 1
  depends:
    - Shougo/neosnippet-snippets
    - honza/vim-snippets
    - Shougo/context_filetype.vim
    - Shougo/vimproc.vim
  unite_sources:
    - neosnippet
    - neosnippet/user
    - neosnippet/runtime

# --- ## Others
## Clang
#Lazy loading like this
#Rip-Rip/clang_complete: {}  # CHECK
#autocmd FileType c,cpp NeoBundleSource clang_complete


## YCM
# Valloric/YouCompleteMe:
#   description: Autocompletion for Python and C-like languages. Need Python2 exclusively
#     augroup: youcompletemeStart
#     commands: [YcmDebugInfo]
#     filetypes: [c, cpp, python]
#     build:
#       linux: ./install.sh --clang-completer
#       # unix: ./install.sh --clang-completer --system-libclang
#     disabled: !has(python)
#     vim_version: 7.3.584

# TODO FIX: resolve completion conflicts -- seems like isn't disabled?
# autocmd FileType c,cpp if exists(:YcmCompleter) | NeoCompleteDisable | endif
# neocomplete: autoload: { filetypes: [ vim, sh, shell, votl ], }

# {{{Manual build instruction for YCM : if [ ! -e ./third_party/ycmd/ycm_core.so ]
#   1. git submodule update --init --recursive
#   2. cd third_party/ycmd && mkdir -p build && cd build && cmake .. ../cpp
#   5a. (optional) ccmake . # configure
#   6. make
# For win: https://github.com/Valloric/YouCompleteMe/wiki/Windows-Installation-Guide
# }}}
