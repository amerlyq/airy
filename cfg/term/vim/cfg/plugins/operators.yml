## Operators
kana/vim-operator-user:
  description: Dependency of 'vim-operator-*' and vim-clang-format
  functions: operator#user#define
  contract: &opu
    mappings: [[nx, <Plug>]]
    depends: kana/vim-operator-user
  lazy: 0  # BUG: don't loads from inside 'ag.vim/plugin/' by lazy 'functions'

rhysd/vim-operator-surround:
  description: |
    Manage surrounding block pairs ({[&quot'` over the motion
    ALT:
      - (TODO: compare code) https://github.com/machakann/vim-sandwich
    DEPRECATED:
      - (bloated) tpope/vim-surround
  depends:
    - kana/vim-operator-user
    ## For chained mappings (Optional)
    - thinca/vim-textobj-between
    - beloglazov/vim-textobj-quotes
    - rhysd/vim-textobj-anyblock
  # CHG mappings: [[nx, q[adr]], [n, q[bBfFQ], q[({[&quot'<`] ]
  <<: *opu

## DISABLED: |
#     - For VISUAL (where I use append the most), original plugin is convenient
#     - THINK:ADD: direct operators for NORMAL?
# osyo-manga/vim-operator-surround-before:
#   description: Allows direct char appends after surround
#   mappings: [[nx, <Plug>(operator-surround-append-before]]
#   depends:
#     - kana/vim-operator-user
#     - rhysd/vim-operator-surround

kana/vim-operator-replace:
  description: Replaces motion by register content
  # CHG mappings: [[nxo, gr]]
  <<: *opu

tommcdo/vim-exchange:
  description: |
    Exchange text: cx{motion} on first, then cx{motion} on other.
    USAGE: line 'cxc' and clear 'cxx', as 'cxc' is more comfortable
  # CHG : [[x, X], [n, cx, cxc, cxx]]
  mappings: [[nx, <Plug>(Exchange]]

tpope/vim-commentary:
  description: |
    Toggle commentstring, ADD textobj-comment
    DEPRECATED: - (overladen) 'tomtom/tcomment_vim'
  mappings: [[nxo, gc], [n, gcc, cgc, gcu]]
  commands: Commentary

AndrewRadev/sideways.vim:
  description: |
    Shift/jump func-args/list-item/table-cell, ADD textobj-args
    ALT:TODO:SEE:
      - sgur/vim-textobj-parameter
      - PeterRincker/vim-argumentative
  # CHG mappings: [[xo, aa, ia], [n, ga, gA, '[a', ']a']]
  mappings: <Plug>Sideways
  commands: [SidewaysLeft, SidewaysRight, SidewaysJumpLeft, SidewaysJumpRight]
  depends: tpope/vim-repeat

rhysd/vim-clang-format:
  description: Auto-formatter for c/cpp/obj-c
  external_commands: clang-format
  mappings: <Plug>(operator-clang-format)
  commands: [ClangFormat, ClangFormatEchoFormattedCode]
  filetypes: [c, cpp, objc]
  depends:
    - kana/vim-operator-user
    - Shougo/vimproc.vim

Chiel92/vim-autoformat:
  description: |
      Autoformatting with one button, can use custom (like clang-styler)
      ATTENTION: Not operator, but placed near to 'vim-clang-format'
  external_commands: [clang-format, astyle, tidy]
  commands: [Autoformat, NextFormatter, NextFormatter]
