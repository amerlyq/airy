# SEE
#   http://www.yaml.org/refcard.html
#   http://learnxinyminutes.com/docs/yaml/

## Move to autocompl
# tpope/vim-endwise:
#   description: Automatic not-persistent closing statements
#   mappings: [[i, <CR>, <C-x><CR>]]

---
## Operators
kana/vim-operator-user:
  description: Dependency of 'vim-operator-*' and vim-clang-format
  functions: operator#user#
  mappings: [[nx, <Plug>]]

rhysd/vim-operator-surround:
  description: |
    Manage surrounding block pairs ({[&quot'` over the motion
    DEPRECATED:
      - (bloated) tpope/vim-surround
  # CHG mappings: [[nx, q[adr]], [n, q[bBfFQ], q[({[&quot'<`] ]
  mappings: [[nx, <Plug>]]
  depends:
    - kana/vim-operator-user
    ## For chain mappings (Optional)
    - thinca/vim-textobj-between
    - beloglazov/vim-textobj-quotes
    - rhysd/vim-textobj-anyblock

kana/vim-operator-replace:
  description: Replaces motion by register content
  # CHG mappings: [[nxo, gr]]
  mappings: [[nx, <Plug>]]
  depends: kana/vim-operator-user

tommcdo/vim-exchange:
  description: |
    Exchange text: cx{motion} on first, then cx{motion} on other.
    USAGE: line 'cxc' and clear 'cxx', as 'cxc' is more comfortable
  # CHG : [[x, X], [n, cx, cxc, cxx]]
  mappings: [[nx, <Plug>(Exchange]]

tpope/vim-commentary:
  description: |
    Toggle commentstring, ADD textobj-comment
    DEPRECATED: - (overladen) 'tomtom/tcomment_vim'
  mappings: [[nxo, gc], [n, gcc, cgc, gcu]]
  commands: Commentary

AndrewRadev/sideways.vim:
  description: |
    Shift/jump func-args/list-item/table-cell, ADD textobj-args
    ALT:TODO:SEE:
      - sgur/vim-textobj-parameter
      - PeterRincker/vim-argumentative
  # CHG mappings: [[xo, aa, ia], [n, ga, gA, '[a', ']a']]
  mappings: <Plug>Sideways
  commands: [SidewaysLeft, SidewaysRight, SidewaysJumpLeft, SidewaysJumpRight]
  depends: tpope/vim-repeat

rhysd/vim-clang-format:
  description: Auto-formatter for c/cpp/obj-c
  external_commands: clang-format
  mappings: <Plug>(operator-clang-format)
  commands: [ClangFormat, ClangFormatEchoFormattedCode]
  filetypes: [c, cpp, objc]
  depends:
    - Shougo/vimproc.vim
    - kana/vim-operator-user

Chiel92/vim-autoformat:
  description: |
      Autoformatting with one button, can use custom (like clang-styler)
      ATTENTION: Not operator, but placed near to 'vim-clang-format'
  external_commands: [clang-format, astyle, tidy]
  commands: [Autoformat, NextFormatter, NextFormatter]

---
## Textobj
kana/vim-textobj-user: &tou
  description: Dependency of 'vim-textobj-*'
  functions: textobj#user#
  ## EXPL Loopback for following back-refs {{{
  depends: kana/vim-textobj-user
  mappings: [[ox, <Plug>]]  # }}}

rhysd/vim-textobj-anyblock:
  description: |
    Content of closest block pair
    NOTE pairs by priority ({[&quot'<`
    DEPRECATED: - (old, in jap) osyo-manga/vim-textobj-multiblock
  mappings: [[ox, ab, ib]]
  <<: *tou
thinca/vim-textobj-between:
  description: Between same found symbols
  mappings: [[ox, af, if]]
  <<: *tou
kana/vim-textobj-entire:
  description: Whole buffer w/[o] empty lines (instead ggVG)
  # CHG mappings: [[ox, aG, iG]]
  <<: *tou
kana/vim-textobj-fold:
  description: Fold-marked regions
  mappings: [[ox, az, iz]]
  <<: *tou
kana/vim-textobj-function:
  description: Function definition+body (C/Java/Vimscript)
  # CHG mappings: [[ox, aF, iF, agf, igf]]
  <<: *tou
kana/vim-textobj-indent:
  description: Equally indented blocks (Python-like)
  mappings: [[ox, ai, ii, aI, iI]]
  <<: *tou
vimtaku/vim-textobj-keyvalue:
  description: |
    Key/value with/beside quotes and space
    WARNING:NEED:DEV: fork, as it works only for specified filetypes
  mappings: [[ox, ak, ik, av, iv]]  # <Plug>(textobj-[key,value]-*
  <<: *tou
kana/vim-textobj-lastpat:  # OR:STD:NOTE: '..[ai]g[nN]'
  description: Last searched pattern
  mappings: [[ox, a/, i/]]
  <<: *tou
kana/vim-textobj-line:
  description: Line content only (without \n)
  mappings: [[ox, al, il]]
  <<: *tou
  # "slkd": "djjj"
beloglazov/vim-textobj-quotes:
  description: Any nearest quotes of #'"`
  # CHG mappings: [[o, q]]
  mappings: [[ox, aq, iq]]
  <<: *tou
vimtaku/vim-textobj-sigil:
  description: Vars for bash/perl ( $name{...} )
  # CHG mappings: [[ox, ad, id]]
  <<: *tou
saihoooooooo/vim-textobj-space:
  description: Space between words or before indent
  # CHG mappings: [[ox, as, is]]
  <<: *tou
kana/vim-textobj-syntax:
  description: Highlighted syntax region
  # CHG mappings: [[ox, ah, ih]]
  <<: *tou
coderifous/textobj-word-column.vim:
  description: «Smart» words column
  mappings: [[ox, ac, ic, aC, iC]]
  <<: *tou
lucapette/vim-textobj-underscore:
  description: Parts, separated by '_' ( ...nameof_some_func )
  mappings: [[ox, a_, i_]]
  <<: *tou

---
##Motions
matchit.zip:
  description: STD plugin for matching pairs/triples of block expr
  mappings: [[nvo, '%', 'g%', '[%', ']%'], [v, 'a%']]

tpope/vim-rsi:
  description: |
      Readline style motions in insert and cmdline
      SEE: http://www.vim.org/scripts/script.php?script_id=4359
  lazy: 0  # Direct key mappings have no sense in being lazy

bkad/CamelCaseMotion:
  description: Motions in _camel_case_ for all modes
  mappings: [<Leader>w, <Leader>b, <Leader>e]  # <Plug>CamelCaseMotion_
# }}}

justinmk/vim-sneak:
  description: |
      Two-letters find on whole screen scope
      DEPRECATED:
        - (bloated) Lokaltog/vim-easymotion
        - (altered) https://github.com/rhysd/clever-f.vim
  mappings: <Plug>Sneak
  depends: tpope/vim-repeat

---
## Actions
tpope/vim-repeat:
  description: Dependency of support to '.' on <Plug> mappings
  mappings: [[n, ., u, U, <C-r>]]  #<Plug>(Repeat
  functions: repeat#

tpope/vim-speeddating:
  description: Use CTRL-A/X to increment dates, times, and more
  mappings: [[nx, <C-a>, <C-x>], [n, d<C-a>, d<C-x>]]  # <Plug>SpeedDating
  depends: tpope/vim-repeat

kana/vim-niceblock:
  description: On insert in VISUAL mode behave like as V-BLOCK
  mappings: [[x, A, I, gI]]  # <Plug>(niceblock-

terryma/vim-expand-region:
  description: Expand/shrink current visual selection
  # CHG mappings: [[x, +, -]]
  mappings: [[x, <Plug>(expand_region_]]
