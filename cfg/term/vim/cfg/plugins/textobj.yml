## Textobj
## STD:
# [ai][wWps] -- whole word, paragraph, sentence itself
# [ai][()b{}B<>\[\]t'"`] -- content of *brackets*, tags, quotes

kana/vim-textobj-user:
  description: Dependency of 'vim-textobj-*'
  functions: textobj#user#
  contract: &tou  ## EXPL: Loopback for '*tou' refs in yaml
    depends: kana/vim-textobj-user
    mappings: [[ox, <Plug>]]

rhysd/vim-textobj-anyblock:
  description: |
    Content of closest block pair
    NOTE pairs by priority ({[&quot'<`
    DEPRECATED: - (old, in jap) osyo-manga/vim-textobj-multiblock
    ALT: - (TODO: compare) https://github.com/Vesion/vim-textobj-surrounding
  mappings: [[ox, ab, ib]]
  <<: *tou
thinca/vim-textobj-between:
  description: Between identical found symbols in both directions
  mappings: [[ox, af, if]]
  <<: *tou
osyo-manga/vim-textobj-blockwise:
  description: Use textobj of words column w/o V-BLOCK selection
  lazy: 0  # EXPL: too much to remap:  (o:IA|x_b:ia)[wWspbBt<>[](){}'"`]
  <<: *tou
rhysd/vim-textobj-conflict:
  description: Jump/select git merge conflicts ['<<<' .A. '===' .B. '>>>']
  mappings: [[ox, a=, i=]]
  <<: *tou
machakann/vim-textobj-delimited:  # CHECK:TRY:
  description: |
    - Direct textobj for N-th '_' partition (SEE name_of_some_func)
    - EXPL: Faster then CamelCaseMotion:  2,wdi,e  -->  d3i_
  # CHG mappings: [[ox, [ai]{N}(_|<Leader>_)]]
  <<: *tou
kana/vim-textobj-entire:
  description: Whole buffer w/[o] empty lines (instead ggVG)
  # CHG mappings: [[ox, aG, iG]]
  <<: *tou
kana/vim-textobj-fold:
  description: Fold-marked regions
  mappings: [[ox, az, iz]]
  <<: *tou
kana/vim-textobj-function:
  description: Function definition+body (C/Java/Vimscript)
  # CHG mappings: [[ox, agF, igF, agf, igf]]
  <<: *tou
kana/vim-textobj-indent:
  description: |
    - Equally indented blocks (Python-like)
      [ai] - include empty lines '^$' or stop at them
      [Ii] - only same indent or also all nested deeper
  mappings: [[ox, ai, ii, aI, iI]]
  <<: *tou
amerlyq/vim-textobj-keyvalue:
  description: HACK Key/value with/beside quotes and space
  mappings: [[ox, ak, ik, av, iv]]  # <Plug>(textobj-[key,value]-*
  <<: *tou
rhysd/vim-textobj-lastinserted:
  description: Last inserted text
  mappings: [[ox, au, iu]]
  <<: *tou
saaguero/vim-textobj-pastedtext:
  description: Last pasted text (my gv == vgb)
  mappings: [[ox, gb]]
  <<: *tou
kana/vim-textobj-lastpat:  # OR:STD: '..[ai]g[nN]'
  description: Last searched pattern
  mappings: [[ox, a/, i/]]
  <<: *tou
kana/vim-textobj-line:
  description: Line content only (without \n)
  mappings: [[ox, al, il]]
  <<: *tou
beloglazov/vim-textobj-quotes:
  description: Any nearest quotes of #'"`
  # CHG mappings: [[o, q]]
  mappings: [[ox, aq, iq]]
  <<: *tou
vimtaku/vim-textobj-sigil:
  description: Vars for bash/perl (like $name{...} )
  # CHG mappings: [[ox, ad, id]]
  <<: *tou
saihoooooooo/vim-textobj-space:
  description: Space between words or before indent
  # CHG mappings: [[ox, as, is]]
  <<: *tou
kana/vim-textobj-syntax:
  description: Highlighted syntax region
  # CHG mappings: [[ox, ah, ih]]
  <<: *tou
coderifous/textobj-word-column.vim:
  description: |
    - «Smart» words column
    # DEV:FIX: up/down bounds detection -- more smart
    ALT? (column-mappings) osyo-manga/vim-textobj-blockwise
  mappings: [[ox, ac, ic, aC, iC]]
  <<: *tou
