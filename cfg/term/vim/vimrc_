" vim:ts=2:sw=2:sts=2:fdm=marker:fdl=1
set nocompatible
set fileformats=unix,dos,mac

if has("multi_byte")
  if &termencoding == "" | let &termencoding = &encoding | endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  set fileencodings=utf-8,cp1251,cp866
endif

if has("unix") | language messages C | else "elseif
    language messages en_US.UTF-8 "C, en, en_US, en_US.UTF-8
    "set langmenu=en_US.UTF-8
    " Window size
    set lines=32
    set columns=112
endif

"================ Windows ====================== {{{1
" Make $VIMHOME point to .vimrc location independent of OS
if isdirectory($XDG_CONFIG_HOME.'/vim')
  let $VIMHOME=expand('$XDG_CONFIG_HOME/vim')
  let $CACHE=expand('$XDG_CACHE_HOME/vim')
else
  let $VIMHOME=expand('~/.vim')
  let $CACHE=expand('~/.cache/vim')
endif

if has('vim_starting')
  set runtimepath+=$VIMHOME
  set runtimepath+=$CACHE  " For ./spell
endif

if has('win32') || has('win64')
" Fix the path of vimrc and gvimrc for Windows
  let $MYVIMRC=$VIMHOME . '/vimrc'
  let $MYGVIMRC=$VIMHOME . '/gvimrc'
  cd d:\
endif

"============= Vim dirs structure ============== {{{1
" Backup, undo, swap, etc
" The '//' at directory end: use full path for filename with '%' separators
set backupdir=$CACHE/bckpdir//,~/.tmp,/var/tmp,/tmp
set directory=$CACHE/swapdir//,~/.tmp,/var/tmp,/tmp
" backup current file, not deleted afterwards: you need free space!
set backup writebackup backupcopy=auto swapfile
if !has("nvim")
  set viminfo+=n$CACHE/.viminfo
endif
" for v:version >= 703
set undodir=$CACHE/undodir//
set undofile


let g:netrw_home=$CACHE
" let g:netrw_dirhistmax = 0
" The Vim Netrw plugin allows one to view the contents of an http hyperlink via CTRL-W_CTRL-F
" launch as $ agent tempfile url -- See: https://github.com/danchoi/elinks.vim
let g:netrw_http_cmd = "elinks-for-vim"


let cdirs = ['bundle', 'bckpdir', 'swapdir', 'undodir']  " 'easytags.d'
for nm in cdirs
  if !isdirectory(expand('$CACHE/' . nm))
    call mkdir(expand('$CACHE/' . nm), 'p')
  endif
endfor

"================ Configuration ================ {{{1
source $VIMHOME/neobundle.vim
runtime! bundle/*.vim cfg/*.vim ext/*.vim

augroup StartupOptions
    autocmd!
    " Open at last position
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
        \| exe "normal g'\"" | endif
augroup END

" Search rc in current dirs, but don't execute :autocmd, shell and write commands
set exrc secure

" SEE loadorder of *.vim by :scriptnames
