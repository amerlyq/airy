#!/usr/bin/env bash

# FIXME: python navigation is locked until preview generated
#       TODO: -- simply skip files as if preview were disabled
#
# https://www.dartmouth.edu/~rc/classes/ksh/run-with-timeout.html
# set +o bgnice
# NOTE:
#   http://stackoverflow.com/questions/14690010/bash-trick-program-into-thinking-stdout-is-an-interactive-terminal
# script -qc "vimcat -u ~/.vim/vimcatrc \"$path\"" /tmp/typescript

set -o pipefail
mkdir -p /tmp/preview

fpath="${@: -1}"
# eval '${@:1:($#-1)} "$ftmp"'

EXT="${0%/*}"
vimrc=$EXT/vimcatrc
script=$EXT/vimcat.vim
# OR choose your own extension from vim:ft=...
pipe="/tmp/preview/${fpath##*/}"

trap "rm -f $pipe" HUP INT QUIT ILL TRAP KILL BUS TERM EXIT
[[ -p $pipe ]] || mkfifo $pipe
(head -n 50 "$fpath" > $pipe) &

# WARNING: In general we can't cut on width, or syntax will be messed up!
# perl -lpe '$.>40&&last||($_=substr($_,0,80))' "$fpath" > "$ftmp"
# awk 'NR>128{exit} {print substr($0,0,length)}' "$fpath" > "$ftmp"

# BUG script waits at the end?
# parent=$$
# (sleep 1 && touch /tmp/$$= && kill -s KILL $parent >/dev/null 2>&1) & alert=$!
# touch /tmp/preview/$!_$$

if [[ $# -eq 1 ]]; then
    vim -E -X -R -i NONE -u ${vimrc} \
    -c "source ${script} | visual | call AnsiHighlight(\"">(cat)"\") | q" \
    -- $pipe </dev/tty >/dev/null 2>&1
else
    pygmentize -g -f terminal256 -O style=solarizeddark $pipe
fi

# kill -s KILL $alert >/dev/null 2>&1
# touch /tmp/preview/$!_$alert
