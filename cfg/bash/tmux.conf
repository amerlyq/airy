# /etc/tmux.conf or ~/.tmux.conf
# tmux source-file ~/.tmux.conf | Reload current configuration
# vim ft=config
# g = global option

# General
# Must be 'screen-*' in any case
set-option -sg default-terminal  'screen-256color-bce'
set-window-option -g utf8 on
set-option -sg status-utf8 on

set-option -sg repeat-time 600
#set-option -g mode-mouse off
set-option -g mouse-select-pane on

# Change prefix key to C-s, disable suspend on C-s before this
set -g prefix C-f
unbind C-f #this line gonna be before upper set?
bind C-f send-prefix  # this line can be not needed?
# ======================================================

# use vi-keys inside copy-mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

# vi-style controls for copy mode
setw -g mode-keys vi

# Disable escape-waiting delay in vim
set -sg escape-time 0

# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

## move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

## feel free to change the "1" to however many lines you want to resize by, only one at a time can be slow
#bind < resize-pane -L 1
#bind > resize-pane -R 1
#bind - resize-pane -D 1
#bind + resize-pane -U 1
#
## bind : to command-prompt like vim
## this is the default in tmux already
#bind : command-prompt


# ======================================================
 
# toggle last window like screen
bind-key C-a last-window

# shortcuts for moving between windows
#bind -r C-p select-window -t :-
#bind -r C-n select-window -t :+

# shortcuts for interaction with X selection buffer
#bind C-y save-buffer ~/.tmux-buffer \; run-shell "xsel -i <~/.tmux-buffer && rm ~/.tmux-buffer"
#bind C-p run "tmux set-buffer | \"$( xclip -o )\"; tmux paste-buffer"

# ======================================================
#
set-window-option -g monitor-activity on
set-option -g visual-activity on
set-window-option -g automatic-rename on
set-window-option -g xterm-keys on #After doing that, mappings of <Esc>[1;3A seemed to work. 

set-option -sg status on
set-option -sg status-fg colour231
set-option -sg status-bg colour234
set-option -sg status-left-length 20
set-option -sg status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'
set-option -sg status-right '#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] ⌚ %Y-%m-%d | %H:%M '
set-option -sg window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[fg=colour249]#W "
set-option -sg window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# enables highlighting the current window using the yellow colour. You may also specify one of: "black", "red", "green", "blue", "magenta", "cyan" and "white" or write "colour\d+", e.g. "colour5" or "colour170"
set-window-option -g window-status-current-bg yellow
