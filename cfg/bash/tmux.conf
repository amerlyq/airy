# vim ft=config
# /etc/tmux.conf or ~/.tmux.conf

# See:
# implement launching scripts (is only what remain untouched)
#    https://wiki.archlinux.org/index.php/tmux
#    http://mutelight.org/practical-tmux

# General
# Must be 'screen-*' in any case
#ARCH: set-option -g default-terminal  'screen-256color'
set-option -sg default-terminal  'screen-256color-bce'
set-window-option -g utf8 on
set-option -sg status-utf8 on
set -g history-limit 10000
# By default, all windows in a session are constrained to the size of the smallest client connected to that session, even if both clients are looking at different windows. Change it.
setw -g aggressive-resize on

# set -g default-command "reattach-to-user-namespace -l zsh"

# Change prefix key to C-s, disable suspend on C-s before this
# As <C-m> and <Enter> are the same, them will work as before with double-press (see send-prefix)
# Use <C-j> instead of <Enter>
unbind C-b 
unbind C-l 
set -g prefix C-l
# It allows send command into inner window as is (like vim's C-v)
bind C-l send-prefix  

# Disable escape-waiting delay in vim
set -sg escape-time 0
set-option -sg repeat-time 600
# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1


## Reload current configuration
bind-key C-r tmux source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
bind-key | resize-pane -Z \; display-message "Zoom zoom zoom"

#Mouse works as expected
setw -g mode-mouse on
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# Activity
set-window-option -g monitor-activity on
set-option -g visual-activity on
set-window-option -g automatic-rename on
set-window-option -g xterm-keys on #After doing that, mappings of <Esc>[1;3A seemed to work. 
# ======================================================

# use vi-keys inside copy-mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

# vi-style controls for copy mode
setw -g mode-keys vi


# vim's definition of a horizontal/vertical split is reversed from tmux's
bind C-n split-window -v
bind C-m split-window -h
unbind '"'
unbind %

## move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# moving between windows with vim movement keys
bind -r , select-window -t :-
bind -r . select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

## feel free to change the "1" to however many lines you want to resize by, only one at a time can be slow
#bind < resize-pane -L 1
#bind > resize-pane -R 1
#bind - resize-pane -D 1
#bind + resize-pane -U 1
#
## bind : to command-prompt like vim
## this is the default in tmux already
#bind : command-prompt


# ======================================================
 
# toggle last window like screen
bind-key C-a last-window

# shortcuts for moving between windows
#bind -r C-p select-window -t :-
#bind -r C-n select-window -t :+

# shortcuts for interaction with X selection buffer
#bind C-y save-buffer ~/.tmux-buffer \; run-shell "xsel -i <~/.tmux-buffer && rm ~/.tmux-buffer"
#bind C-p run "tmux set-buffer | \"$( xclip -o )\"; tmux paste-buffer"

# ======================================================

# To browse URL's inside tmux you must have urlview installed and configured. 
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

##CLIPBOARD selection integration
bind C-y run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-p run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# y and p as in vim
bind Escape copy-mode
bind [ copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
#bind -t vi-copy 'Space' halfpage-down
#bind -t vi-copy 'Bspace' halfpage-up

# To allow the title bar to adapt to whatever host you connect to
set -g set-titles on
set -g set-titles-string "#T"



## Color theme / Status bar # Bad wolf Mod
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set-option -sg status on
set-option -sg status-fg colour231
set-option -sg status-bg colour234
set-option -sg status-left-length 20
set-option -sg status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'
set-option -sg status-right '#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] ⌚ %Y-%m-%d | %H:%M '
set-option -sg window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[fg=colour249]#W "
set-option -sg window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# enables highlighting the current window using the yellow colour. You may also specify one of: "black", "red", "green", "blue", "magenta", "cyan" and "white" or write "colour\d+", e.g. "colour5" or "colour170"
set-window-option -g window-status-current-bg yellow
set -g window-status-activity-attr bold


# # default window title colors
# set-window-option -g window-status-fg colour244 #base0
# set-window-option -g window-status-bg default
# #set-window-option -g window-status-attr dim
# # active window title colors
# set-window-option -g window-status-current-fg colour166 #orange
# set-window-option -g window-status-current-bg default
# #set-window-option -g window-status-current-attr bright
# # pane border
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01
# # message text
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange
# # pane number display
# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange
# # clock
# set-window-option -g clock-mode-colour green #green
