#!/usr/bin/perl -w
# @ref: MIT, (c) amerlyq, 2015
# Inspired by: http://karma-lab.net/creer-plugin-urxvt-sauvegarder-vim-automatiquement

use strict;
use warnings;
use Time::HiRes qw(usleep);

# Escape sequences cab be custom, like:
# ENABLE:  echo -ne "\033]777;focus;on\007"
# DISABLE: echo -ne "\033]777;focus;off\007"
# VIM: -- add appropriate snippet with checking only to urxvt!
# my $csi_in = "\033[UlFocusIn";
# my $csi_out = "\033[UlFocusOut";

my $csi_in = "\033[I";
my $csi_out = "\033[O";

sub on_start {
    my($self) = @_;
    $self->{focus_activated} = 0;
}

sub on_osc_seq_perl {
    my ($self, $osc, $resp) = @_;

    # NOTE: Default xterm/iTerm2 enable/disable: CSI ? 1004 h/l
    #   e.g.: <Esc>[?1004l / <Esc>[?1004h

    # Catching urxvt control group "OSC 777 xxx BEL"
    return unless $osc =~ s/^focus;//;
    $self->{focus_activated} = $osc eq 'on' ? 1 : 0;
}

sub on_focus_in {
    my($self) = @_;
    if ($self->{focus_activated}) {
        # WARNING postpone this event on 16 mS, because focus_in in next
        # terminal will forestall focus_out from previous, and will process
        # under old system state, primary to state changed by focus_out.
        usleep(16000);
        $self->tt_write($csi_in);
    }
}

sub on_focus_out {
    my($self) = @_;
    if ($self->{focus_activated}) {
        $self->tt_write($csi_out);
    }
}
