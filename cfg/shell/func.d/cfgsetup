# vim: ft=sh:ts=2:sw=2:sts=2:fdm=marker:fdl=1
source ~/.shell/profile
source ~/.shell/func.d/system
trap_errors

### Argparse ###
OPTIND=1
CFG_ARGS=( "$@" )  # Backup default arguments
while getopts "cdirs:t:u" opt; do case $opt
in t) case "$OPTARG" in dark|light|lucid|opaque) THEME="$OPTARG" ;; esac
;; [iucf]) : # Install/update/clean/force all configs/packages
;; [rd]) cfgOptAdd 'u'  # Reset/debug
;; s) CFG_S+=("$OPTARG")
;; :|"?") die 1 "Err: need value for '-$opt'"
;; esac; cfgOptAdd "$opt"; done
shift $((OPTIND - 1))

### Choose theme
if [[ ! "${THEME:=$(< "${CURR_DIR_CACHE:?No}/theme")}" =~ ^[a-z]+$ ]]
then THEME=dark; fi


### LINKS ###
link(){ ~/.bin/prg.d/linkcp $@; }
linkdir(){ for nm in "${@:2}"; do link "$PWD/$nm" "${1?No}$nm"; done }
# ALT linkdir(){ mkdir -p $2 && lndir "$1" $2; }


if distro arch; then
  mkdef() { link "${2?No bin}" "$CURR_DIR_CACHE/bin/${1?No name}"; }
  svc_enable() { systemctl is-enabled "$1" > /dev/null || sudo systemctl enable "$1"; }
  svc_restart() { sudo systemctl restart "$1"; }
  usvc_activate() { systemctl --user daemon-reload &&  # Refresh configurations
      systemctl --user enable "$1" && systemctl --user start "$1"; }
  # System user for demons without shell access and without a home directory
  add_sysuser() { id "${1:?No}" >/dev/null 2>&1 ||
      sudo useradd -r -U -d /dev/null -s /usr/bin/nologin "$1"; }

elif distro ubuntu; then
  mkdef() { update-alternatives --get-selections | grep -q "^$1.*$2\$" ||
      sudo update-alternatives --set $1 "$2"; }
  svc_enable() { sudo update-rc.d "$1" defaults; }
  svc_restart() { sudo service "$1" restart; }
fi

### Go to current script's directory
cd $(dirname $(readlink -m ${0}))
airy_cache_pwd_mod

### Populate all run, run.pr1 scripts into mycache/bin
for path in "$PWD/run"*; do [[ -f "$path" ]] || continue
  link "$path" "$CURR_DIR_CACHE/bin/r.${PWD##*/}${path#$PWD/run}"
done
for path in "$PWD/env"*; do [[ -f "$path" ]] || continue
  link "$path" "$CURR_DIR_CACHE/env/${PWD##*/}${path#$PWD/env}"
done
# =============================== ALT ==================================

## Subdirectories:
# for dir in "$PWD"/*; do if [[ -d "$dir" && -f "$dir/setup" ]]
# then echo ">>> Cfg: $dir <<<"; "$dir/setup" "$ARGS"; fi; done
## Packages
# [[ "${PKG_LIST[@]} " =~ "${PWD##*/} " ]] || exit
## Robust find with exec
# find . -mindepth 2 -type f -wholename "*/setup" -not -exec \
#     bash -c "echo '>>> {} <<<' && '{}' $ARGS || exit" \; -quit

# ALT: Interactive choose defaults
#   sudo update-alternatives --config gnome-www-browser
#   update-alternatives --display x-session-manager

# ALT: Check distro name and version: lsb_release -si
# lsb_release -ds 2>/dev/null || cat /etc/*release 2>/dev/null | head -n1 || uname -om

## ALT: Instead of my "$CURR_PLTF"
# case "$OSTYPE" in
#   cygwin|msys) echo "Windows"
#   solaris*) echo "SOLARIS" ;;
#   darwin*)  echo "OSX" ;;
#   linux*)   echo "LINUX" ;;
#   bsd*)     echo "BSD" ;;
#   *)        echo "unknown: $OSTYPE" ;;
# esac
