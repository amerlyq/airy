# vim: ft=sh:ts=2:sw=2:sts=2:fdm=marker:fdl=1
source ~/.shell/profile
source ~/.shell/func.d/system
trap_errors
cwd_script
# cache=${CURR_DIR_CACHE:?}
cache=$(r.airy-get-cache)
[[ :$PATH: == *:$cache/bin:* ]] || export PATH=$cache/bin:$PATH

### Argparse ###
CFG_ARGS=( "$@" )  # Backup default arguments

# Keys: clean/debug/force/install/main/reset/set:/theme:/upgrate/Update
OPTIND=1; while getopts 'cdfimrs:t:uU' o; do case $o in :|'?') die 1
;; t) THEME=$OPTARG
;; s) CFG_S+=("$OPTARG")
esac; cfgOptAdd "$o"; done; shift $((OPTIND - 1))

### Choose theme
# DEV: must be placed after 'airy_cache_pwd_mod' for individual themes
[[ ${THEME_ALLOWED-} ]] || THEME_ALLOWED='dark|light|lucid|opaque'
# DEV:USE: $(<.../theme/{PWD##*/} || <.../theme/default)
# TODO: use THEME_DEFAULT if set, else -- .../theme/default
[[ ${THEME-} ]] || [[ ! -s $cache/theme ]] || THEME=$(<"$cache/theme")
[[ ${THEME-} =~ ^($THEME_ALLOWED)$ ]] || THEME=${THEME_ALLOWED%%|*}

### LINKS ###
# BUG: on error we can't exit from forked shell and fail main one!
fork_m(){ cfgOpt m && eval '"$@" &' || "$@"; }

if distro arch; then
  # TODO:DEV: add fallback -- for each arg until pr found OR err
  mkdef() { linkcp "$(which "${2:?No bin}")" \
    "$cache/bin/${1:?No name}"; }
  # System user for demons without shell access and without a home directory
  add_sysuser() { id "${1:?No user}" >/dev/null 2>&1 ||
      sudo useradd -r -U -d /dev/null -s /usr/bin/nologin "$1"; }

elif distro ubuntu; then
  # ALT: Interactive choose defaults
  #   sudo update-alternatives --config gnome-www-browser
  #   update-alternatives --display x-session-manager
  mkdef() { update-alternatives --get-selections | grep -q "^$1.*$2\$" ||
      sudo update-alternatives --set $1 "$2"; }
fi

if cfgOpt m; then
  repo=$(git -C "$PWD" rev-parse --show-toplevel 2>/dev/null)
  r.airy-cache-links -t "$cache/bin" -p "$([[ $repo =~ q$ ]]&&echo q||echo r).%d-"
  r.airy-cache-alias -o "$cache/aliases"
  airy_cache_pwd_mod
fi
