# vim: ft=sh:ts=2:sw=2:sts=2:fdm=marker:fdl=1
source ~/.shell/profile
source ~/.shell/func.d/system
trap_errors
cwd_script
[[ :$PATH: == *:${CURR_DIR_CACHE:?}/bin:* ]] ||
  export PATH=${CURR_DIR_CACHE:?}/bin:$PATH

### Argparse ###
CFG_ARGS=( "$@" )  # Backup default arguments
OPTIND=1

# Keys: clean/debug/force/install/main/reset/set:/theme:/upgrate/Update
while getopts 'cdfimrs:t:uU' o; do case $o
in t) THEME=$OPTARG
;; s) CFG_S+=("$OPTARG")
;; :|'?') die 1
esac; cfgOptAdd "$o"; done; shift $((OPTIND - 1))

### Choose theme
# DEV: must be placed after 'airy_cache_pwd_mod' for individual themes
[[ $THEME_ALLOWED ]] || THEME_ALLOWED='dark|light|lucid|opaque'
# DEV:USE: $(<.../theme/{PWD##*/} || <.../theme/default)
# TODO: use THEME_DEFAULT if set, else -- .../theme/default
[[ $THEME ]] || [[ ! -f ${CURR_DIR_CACHE:?}/theme ]] \
|| THEME=$(<"${CURR_DIR_CACHE:?}/theme")
[[ $THEME =~ ^($THEME_ALLOWED)$ ]] || THEME=${THEME_ALLOWED%%|*}

### LINKS ###
# BUG: on error we can't exit from forked shell and fail main one!
fork_m(){ cfgOpt m && eval '"$@" &' || "$@"; }
link(){ linkcp "$@"; }
### Populate all run, run.pr1 scripts into mycache/bin
linkmask(){ local nm mask=$1 fmt=$2
  # ALT:(-m) -z $PS1 -- BUT: we can't manually activate mod
  cfgOpt m && [[ $(readlink -m $0) =~ ^${CURR_DIR_CFG:?} ]] || return 0
  # EXPL: can't use '-x $src' because of 'env'
  for src in "$mask"*; do [[ -s $src ]] || continue
    nm=$(printf "$fmt" "${PWD##*/}" "${src#$mask}")
    linkcp "$src" "${CURR_DIR_CACHE:?}/$nm"
  done
}


if distro arch; then
  # TODO:DEV: add fallback -- for each arg until pr found OR err
  mkdef() { linkcp "$(which "${2:?No bin}")" \
    "${CURR_DIR_CACHE:?}/bin/${1:?No name}"; }
  # System user for demons without shell access and without a home directory
  add_sysuser() { id "${1:?No user}" >/dev/null 2>&1 ||
      sudo useradd -r -U -d /dev/null -s /usr/bin/nologin "$1"; }

elif distro ubuntu; then
  # ALT: Interactive choose defaults
  #   sudo update-alternatives --config gnome-www-browser
  #   update-alternatives --display x-session-manager
  mkdef() { update-alternatives --get-selections | grep -q "^$1.*$2\$" ||
      sudo update-alternatives --set $1 "$2"; }
fi

airy_cache_pwd_mod

if [[ -z $MODS_RUN_DISABLE ]]; then
  linkmask "$PWD/bin/" 'bin/r.%s-%s'
  linkmask "$PWD/run"  'bin/r.%s%s'
  linkmask "$PWD/env"  'env/%s%s'
fi
