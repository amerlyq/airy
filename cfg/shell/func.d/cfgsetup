# vim: ft=sh:ts=2:sw=2:sts=2:fdm=marker:fdl=1
source ~/.shell/profile
source ~/.shell/func.d/system
trap_errors

### Argparse ###
OPTIND=1
CFG_ARGS=( "$@" )  # Backup default arguments
while getopts "cdirs:t:u" opt; do case $opt
in t) case "$OPTARG" in dark|light|lucid|opaque) THEME="$OPTARG" ;; esac
;; [iucf]) : # Install/update/clean/force all configs/packages
;; [rd]) cfgOptAdd 'u'  # Reset/debug
;; s) CFG_S+=("$OPTARG")
;; :|"?") die 1 "Err: need value for '-$opt'"
;; esac; cfgOptAdd "$opt"; done
shift $((OPTIND - 1))

### Choose theme
if [[ ! "${THEME:=$(< "${CURR_DIR_CACHE:?}/theme")}" =~ ^[a-z]+$ ]]
then THEME=dark; fi


### LINKS ###
link(){ ~/.bin/prg.d/linkcp $@; }
linkdir(){ for nm in "${@:2}"; do link "$PWD/$nm" "${1:?No prf}$nm"; done }
# ALT linkdir(){ mkdir -p $2 && lndir "$1" $2; }
### Populate all run, run.pr1 scripts into mycache/bin
linkmask(){ local nm mask=$1 fmt=$2
  [[ -z $PS1 && $0 =~ ^${CURR_DIR_CFG:?} ]] || return 0
  for src in "$mask"*; do [[ -f "$src" && -x "$src" ]] || continue
    nm=$(printf "$fmt" "${PWD##*/}" "${src#$mask}")
    link "$src" "$CURR_DIR_CACHE/$nm"
  done
}


if distro arch; then
  mkdef() { link "${2:?No bin}" "$CURR_DIR_CACHE/bin/${1:?No name}"; }
  svc_enable() { systemctl is-enabled "$1" > /dev/null || sudo systemctl enable "$1"; }
  svc_restart() { sudo systemctl restart "$1"; }
  usvc_activate() { systemctl --user daemon-reload &&  # Refresh configurations
      systemctl --user enable "$1" && systemctl --user start "$1"; }
  # System user for demons without shell access and without a home directory
  add_sysuser() { id "${1:?No user}" >/dev/null 2>&1 ||
      sudo useradd -r -U -d /dev/null -s /usr/bin/nologin "$1"; }

elif distro ubuntu; then
  # ALT: Interactive choose defaults
  #   sudo update-alternatives --config gnome-www-browser
  #   update-alternatives --display x-session-manager
  mkdef() { update-alternatives --get-selections | grep -q "^$1.*$2\$" ||
      sudo update-alternatives --set $1 "$2"; }
  svc_enable() { sudo update-rc.d "$1" defaults; }
  svc_restart() { sudo service "$1" restart; }
fi

### Go to current script's directory
cd $(dirname $(readlink -m ${0}))
[[ -n "$MODS_CACHE_DISABLE" ]] || airy_cache_pwd_mod

if [[ -z $MODS_RUN_DISABLE ]]; then
  linkmask "$PWD/bin/" 'bin/r.%s-%s'
  linkmask "$PWD/run"  'bin/r.%s%s'
  linkmask "$PWD/env"  'env/r.%s%s'
fi
