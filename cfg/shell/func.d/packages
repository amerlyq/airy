# vim: ft=sh:ts=2:sw=2:sts=2:fdm=marker:fdl=1
source ~/.shell/profile

mkdir -p "${CURR_DIR_PKG:=~/pkg}"
distro(){ uname -rv | grep -iq "$1"; }


if distro ubuntu; then
  pkg_inst(){ sudo apt-get --yes install $@ || exit; }
  pkg_make(){ sudo checkinstall --default $@ || exit; }
  deb_wget(){ wget_it $* && sudo dpkg -i "$CURR_DIR_PKG/${2:-${1##*/}}"; }
  ppa_add(){
    local addr="${1#ppa:}"
    addr="${addr#*http://}"
    addr="${addr%% *}"
    grep -q "^$addr" /etc/apt/sources.list /etc/apt/sources.list.d/* || return
    sudo apt-add-repository --yes "$1"
    sudo apt-get update
  }

elif distro arch; then
  pkg_inst(){ sudo pacman -S --noconfirm $@; }
  if hash yaourt >/dev/null 2>&1
  then aur_inst(){ sudo yaourt -S --noconfirm $@; }
  else aur_inst(){ return 1; }
  fi

fi


pkg_build() {
    # It can be, that 'autoreconf' can replace my own vehicle.
    local prdir="$1"; shift; cd "$prdir"

    if [[ -f ./CMakeLists.txt ]]; then
        mkdir -p ./build && bdir="$_"
        cmake -E chdir ./build cmake "" "$prdir" || return
        cd ./build && pkg_make

    elif [[ -f ./Makefile ]]; then
        make && pkg_make

    elif [[ -f ./setup.py ]]; then
        sudo python setup.py install

    elif [[ -f ./build.sh ]]; then
        ./build.sh && pkg_make

    elif [[ -f ./configure.ac ]]; then
        mkdir -p ./build && cd ./build
        [[ -f ../autogen.sh ]] && ../autogen.sh || autoreconf --install || return
        ../configure $@ && make && pkg_make

    else echo "Error: unsupported build system. Build manually."; fi
}


wget_inst() {
  local nobuild link fl prdir; case "$1" in -d) nobuild=1; shift ;; esac
  fl="$CURR_DIR_PKG/${1##*/}" && prdir="${fl%.tar.gz}"
  [[ "${1//'://'}" == $1 ]] && link="https://sf.com/$1" || link="$1"

  if [[ -d "$prdir" ]]; then rm -rf "$prdir"; fi
  wget -c "$link" -O "$fl" --trust-server-names \
    --user-agent="Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) \
Gecko/20100101 Firefox/12.0" #--max-redirect=2
  wget_it "$link" "$fl" && atool -X "$prdir" "$fl"

  if [[ -z "$nobuild" ]]; then pkg_build "$prdir"; fi
}


git_inst() { # $0 -d pr_name
  local nobuild link prdir; case "$1" in -d) nobuild=1; shift ;; esac
  prdir=${1##*/} && prdir="$CURR_DIR_PKG/${prdir,,}"
  [[ "${1//'://'}" == $1 ]] && link="https://github.com/$1" || link="$1"

  #--depth 1 -- disabled by cause of automerges
  if [[ -d "$prdir" ]]; then cd "$prdir" && git pull --rebase --verbose
  else git clone --depth 1 "$link" "$prdir" && cd "$prdir"; fi

  if [[ -z "$nobuild" ]]; then pkg_build "$prdir"; fi
}


hg_inst() {
  local nobuild link prdir; case "$1" in -d) nobuild=1; shift ;; esac
  prdir=${1##*/} && prdir="$CURR_DIR_PKG/${prdir,,}"
  [[ "${1//'://'}" == $1 ]] && link="https://bitbucket.com/$1" || link="$1"

  if [[ -d "$prdir" ]]; then cd "$prdir" && hg pull
  else hg clone "$link" "$prdir" && cd "$prdir"; fi

  if [[ -z "$nobuild" ]]; then pkg_build "$prdir"; fi
}
