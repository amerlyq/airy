SEE:
  https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples
  http://eseth.org/2010/hg-in-zsh.html
DEV
  https://github.com/whiteinge/dotfiles/blob/master/.zsh_shouse_prompt
BUG:
  [_] crash 'st' when press and hold <CR>
    MAYBE: too many proc create-kill
    CPU: load ~80% (Bash: ~5%)

Features:
  - two-line theme to separate cmds output easily
  - pwd full/shrank/name-only depending on term width
    (I like to see full pathes, having many similarly named directories)
  - git icons placed close to input for
    (clean state is needless -- you will see branch/hash)
  - line color as environment indicator
  - line shape as root indicator
  - indicators for vim/emacs editing mods
  - non-intrusive time stamp for logging cmd execution
  - non-intrusive ssh user@host
  - indicators for launching from vim/ranger
  - last command exit code
Integrated:
  - async preparing of git_info by sorin
    (fast prompt displaying in git projects, even on cold systems)
  - msg "elapsed time" for long running cmds by paradox
    (consumes very little resources, useful for building projects, or statistics for interactive programs)

Seized:
  agnoster, cloud, damoekri, giddie, minimal, nicoulaj, paradox,
  peepcode, powerline (moved into script), pure, skwp, smiley, steeef
Screenshot:
  TODO: http://i.imgur.com/

TODO
  [_] git -- show +/- num for ahead/behind right of branch name
  2016-05-31 [X] make urgent bell when cmd run > 2min (beside showing time)
  [_] FIXME: long-running indication don't affect tasks run from 'ranger'
    NEED call this even for non-interactive ZSH? Or force '-i' for ranger?
  [_] Faster startup :: USE autoload
    http://stackoverflow.com/questions/4493173/z-shell-autoload-builtin-what-is-it-good-for

SNIPPETS
  Repetition number specifier
    zmv -n '(**/)(*)' '$1${2//-[A-Za-z0-9]##\./.}'
    zmv -n '(**/)(*)' '$1${2//-[A-Za-z0-9](#c32)/}'

Behaviour
  on cmd: run_timer --> update_now()
  always update on last pid immediately
    pid_c=0
    (pid==0 for all pids || (time > 0.5)) --> update_now()
  update on each process -- after first 0.5s
     --> update_now()
  update on timer of first 0.5s, if some process left


Sockets
: socket -- send module name through it
  http://www.theochem.uni-duisburg.de/cgi-bin/info2www?(zsh)The+zsh/net/socket+Module
  http://www.zsh.org/mla/users/2007/msg00785.html
  : zmodload zsh/net/socket
  : $ zsocket -l -d 3
  : $ zsocket -a -d 4 3
  : $ echo foobar >&4
  : $ 4>&- 3>&
  : fd=20
  : exec {fd}>&-
