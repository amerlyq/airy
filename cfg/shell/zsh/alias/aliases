# vim:ft=zsh
[[ $SHELL =~ zsh$ ]] || return 0  ## Global aliases. Zsh only
# ATTENTION: disallow aliases after commands requiring args

# Prevent running 'ranger' if not exists in chroot
(($+commands[ranger])) || alias r='exit'

# Expand in any place of cmdline.
# Space at the end to allow expanding next command

## Consumers
alias -g N0='&>/dev/null'
alias -g N1=' >/dev/null'
alias -g N2='2>/dev/null'
alias -g N+='2>&1'
alias -g NN='|tee /dev/tty'

## Viewers
if (($+commands[$PAGER])); then
  alias -g L='| "$PAGER" '
  alias -g LL='|& "$PAGER" -r '
fi

if (($+commands[$EDITOR])); then
  alias -g V='| $EDITOR -R - '  # USE ':set noro' to edit
  alias -g VQ='V -c "cgetb|copen"'
  alias -g VG='V -c "set cole=0 fdl=1|setf ag_grp"'
  alias -g V@='|vipe| '
  # ALT:(vipe): V :w!tee
  # SEE: http://stackoverflow.com/questions/3219479/how-to-write-buffer-content-to-stdout
  # NOTE: You cannot simply put vim inside a pipe, because then Vim cannot display its UI.
  #   $ { FROMCMD | vim - 8>&1 >&9 | tac | tac | TOCMD; } 9>&1
fi

## Utils
# BUG: shows command from ~+2 history
alias -g A='; alert'  # USAGE: $ <cmd> A OR $ A <cmd> -- notify-send on long-running cmds.

## Filters
alias -g H='|head'
alias -g C='|wc -l'
alias -g Csum='|paste -sd+|bc'  # NOTE: slower than awk, can't float as perl
# ALT: |perl -nle '$s+=(split)[1];END{print $s}'
alias -g T='|column -t'
alias -g W='|while read line; do'
alias -g NE="|grep -v '^\s*\$'"
alias -g S='|noglob sed -u -rn'
alias -g SN='|noglob sort -n'
alias -g SU='|noglob sort -u'
# ALT: |perl -e 'print sort{length($a) <=> length($b)} <>'
alias -g SL='|awk "{print length,\$0}"|sort -ns|cut -d" " -f2-'
# alias -g TL='| tail -20 '

for i in {1..5}; do alias -g C$i="|awk '{print\$$i}'"; done
alias -g C\$="|awk '{print\$NF}'"
# Prints columns 1 2 3 ... n.
function slit { awk "{ print ${(j:,:):-\$${^@}} }"; }
alias -g CN='|slit'

# Pipes
if (($+commands[grep])); then
  # foreach c ($(<<<'q i F x C2')) alias -g G${c: -1}="G -$c"; end
  alias -g  G="|${aliases[grep]:-grep} -E"
  alias -g GF="|${aliases[grep]:-grep} -F"
  alias -g Gq='G -q'
  alias -g Gi='G -i'
  alias -g Gx='G -x'
  alias -g G2='G -C2'
fi

if (($+commands[xargs])); then
  # BAD:(alias resolves anywhere):
  #   cat $(ls Z); a=(q C2); for i in q C2; do ..
  # NEED: use xargs only if 0<$#
  # NOTE: allow aliases resolution after xargs
  alias -g X0='|xargs -r0 '
  alias -g XA='|xargs -rn1 -d\\n '
  alias -g X='|sed -n /./p XA '
  alias -g X{}='X -I{} '
  # NOTE: xargs fork faster then parallel shell
  # | xargs -0 -rn1 -P$(nproc) -I{} "$@"
  # WARN:(broken pipe):  xargs | head -1  USE: parallel --dry-run
fi

if (($+commands[xsel])); then
  alias -g Y='|tee >(xsel -ib)'
  alias -g Y+='|tee >(xsel -ab)'
  alias -g Y:='xsel -ob'
fi

if (($+commands[fzf])); then
  # ALT:(fzf) https://github.com/garybernhardt/selecta
  # --multi --no-sort --reverse --cycle --no-hscroll
  alias -g F='|r.fzf -m'
  alias -g X@='F X '
  alias -g Y@='F Y '
  # alias -g Z:='Z@ -I{} '
fi

## Buffers
_xsel_tmp_buf=${TMPPREFIX:-${TMPDIR:-/tmp}}/output
alias -g YT='|tee $_xsel_tmp_buf'
alias -g YT+='|tee -a $_xsel_tmp_buf'
alias -g YT:='cat $_xsel_tmp_buf'
alias -g YT.='$_xsel_tmp_buf'

# alias -r @="printf \"$(xsel -ob)\n\""
#   { xsel: Can't open display: (null)
#   { : Inappropriate ioctl for device
# alias -g @="\"\$(xsel -ob)\""

# Re-run last cmd as sudo (ALT: sudo `!!`)
alias please='sudo $(fc -ln -1)'
alias kill='\kill'  # FIXED pid completion by process name

## Shorts
if (($+commands[jcalc])); then
  alias jc='noglob jcalc'
fi

## Std-like
# alias agi='noglob agi'
psg() { ps uwwp ${$(pgrep -d, "${(j:|:)@}"):?no matches}; }
# if (( $+commands[links2] )) ; then

# Colored less in pipe
# http://www.greenwoodsoftware.com/less/faq.html
# https://wiki.archlinux.org/index.php/core_utilities#Colored_output_when_reading_from_stdin
# zmodload zsh/zpty
# pty() {
#     zpty pty-${UID} ${1+"$@"}
#     if [[ ! -t 1 ]];then
#         setopt local_traps
#         trap '' INT
#     fi
#     zpty -r pty-${UID}
#     zpty -d pty-${UID}
# }
# ptyless() {
#     pty $@ | less
# }
## Open less on first word
#  ... | less +/pattern

# Show history
# Uncomment the following line if you want to change the command execution
# time stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"
case $HIST_STAMPS
in "mm/dd/yyyy") alias history='fc -fl 1'
;; "dd.mm.yyyy") alias history='fc -El 1'
;; "yyyy-mm-dd") alias history='fc -il 1'
;;            *) alias history='fc -l 1'
esac
