# vim: ft=zsh
# Executes commands at login post-zshrc.
# BUG:WARNING: urxvt (but not st) sources this file on each startup!

# Execute code that does not affect the current session in the background.
{
  # Compile the completion dump to increase startup speed.
  zcompdump="${ZDOTDIR:-"$HOME/.cache/zsh"}/.zcompdump"
  if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" ||
    "$zcompdump" -nt "${zcompdump}.zwc") ]]
  then zcompile "$zcompdump"; fi
} &!

# Print a random, hopefully interesting, adage.
# if (( $+commands[fortune] )); then
#   if [[ -t 0 || -t 1 ]]; then
#     fortune -s
#     print
#   fi
# fi

while [[ -z "$TMUX" && -z "$VIM" && -z "$EMACS" ]] &&
      [[ "$TTY" =~ /dev/tty[1-3] && "$UID" > 0 ]]
do
  TMUX_SERVER=vtsrv  # USE "vt$XDG_VTNR" to separate vt sessions

  # Create main tmux session (if no session has been defined in tmux.conf)
  if hash tmux &>/dev/null && tmux start-server; then
    tmux has-session -t "$TMUX_SERVER" 2>/dev/null ||
      tmux new-session -d -s "$TMUX_SERVER" "$SHELL"
  fi

  # Launch X only on tty1
  if [[ -z "$DISPLAY" && "$XDG_VTNR" -eq 1 ]]; then
    exec startx
    # OR:1 exec xinit -- :0 -nolisten tcp vt$XDG_VTNR
    # OR:2 exec xinit -- :0 -novtswitch &>/dev/null & logout
  else
    exec tmux attach-session -t "$TMUX_SERVER"
  fi

  # FIXME: On exit cycle through all background sessions
  # while [[ -z "$TMUX" ]]; do
  #   tmux attach || break
  # done

  break
done
