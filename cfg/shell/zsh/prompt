# vim: ft=zsh:ts=2:sw=2:sts=2
# @ref: MIT, (c) amerlyq, 2015
# Theme to easy distinguish different commands output

# Load dependencies.
pmodload 'helper'

function prompt_amer_pwd {
  local ppwd="${PWD/#$HOME/~}"
  local branch=${${${git_info[details]}%%\)*}##*\(}
  local wth=$(($COLUMNS - 6))
  [[ -n "$branch" ]] && (( wth -= ${#branch} + 2 ))

  if [[ "$ppwd" == (#m)[/~] ]]; then
    _prompt_amer_pwd="$MATCH"
    unset MATCH
  else
    ppwd="${${ppwd%/}//\%/%%}"
    [[ $#ppwd -ge $wth ]] && ppwd="${${(@j:/:M)${(@s:/:)ppwd}##.#?}:h}/${ppwd:t}"
    [[ $#ppwd -ge $wth ]] && ppwd="%$wth>…>…/${ppwd:t}%<<"
    _prompt_amer_pwd="$ppwd"
  fi
}

function prompt_amer_git_info {
  # Append Git status.
  if [[ -s "$_prompt_amer_precmd_async_data" ]]; then
    alias typeset='typeset -g'
    source "$_prompt_amer_precmd_async_data"
    # RPROMPT+='${git_info:+${(e)git_info[icons]}}'
    unalias typeset
  fi

  # Reset PID.
  _prompt_amer_precmd_async_pid=0

  # Redisplay prompt.
  zle && zle reset-prompt
}

function prompt_amer_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_amer_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -USR1 $$
}

function prompt_amer_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_amer_pwd

  # Define prompts. Actual for git? Why it was here and not in _setup?
  # RPROMPT[1,0]='${editor_info[overwrite]} %(?:: %F{1}%?↵ %f)'  # Prepend

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_amer_precmd_async_pid > 0 )); then
    kill -TERM "$_prompt_amer_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_amer_git_info USR1
  prompt_amer_precmd_async &!
  _prompt_amer_precmd_async_pid=$!
}

function prompt_amer_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_amer_precmd_async_pid=0
  _prompt_amer_precmd_async_data="${TMPPREFIX}-prompt_amer_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_amer_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{1}…%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%F{1}╼%f'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{3}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%F{2}╢%f'

  # http://www.fileformat.info/info/unicode/category/So/list.htm
  # : ✚ ⬆ ⬇ ✖ ✱ ➜ ✭ ═ ◼ ❮ ❯ ⏎ ♺
  # ✔ ✓ ○ ◯ ϟ ✗ ➤ ø ♯ ✴ ▲ ▼ ↵ ☯ ↻
  # ╓⇥ ╚╩╼ ┌─┘└╼╾┐   ╣╢┾

  ## Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format '%%B%F{2}✚%f%%b'
  zstyle ':prezto:module:git:info:ahead' format '%%B%F{13}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format '%%B%F{13}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format '%%B%F{92}(%b)%f%%b'
  #zstyle ':prezto:module:git:info:clean' format '%F{2}✔%f'
  zstyle ':prezto:module:git:info:commit' format '%%B%F{15}(%.7c)%f%%b'
  zstyle ':prezto:module:git:info:deleted' format '%%B%F{1}✗%f%%b'
  zstyle ':prezto:module:git:info:modified' format '%F{220}◯%f'
  zstyle ':prezto:module:git:info:position' format '%%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format '%%B%F{6}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format '%%B%F{9}✭%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format '%%B%F{5}ø%f%%b'
  zstyle ':prezto:module:git:info:untracked' format '%%B%F{7}♯%f%%b'
  # Coalesce: -- find first non-empty value
  zstyle ':prezto:module:git:info:keys' format \
    'details' '$(coalesce "%b" "%p" "%c")' 'icons' '%s%A%B%S%a%d%m%r%U%u'


  # First line:
  PROMPT='%F{1}┌──%B%F{8}[%F{220}${_prompt_amer_pwd}%F{8}]%b'
  PROMPT+='${git_info:+${(e)git_info[details]}}
'  # Next line:
  PROMPT+='%F{1}└${git_info:+${(e)git_info[icons]}}'
  PROMPT+='%(!. %B%F{1}#%f%b.)${editor_info[keymap]} '

  # Right prompt
  RPROMPT='${editor_info[overwrite]} %(?::%F{1}%?↵ %f)'
  RPROMPT+='${RANGER_LEVEL:+"%B%F{10}R%f%b"}'
  RPROMPT+='${VIM:+"%B%F{10}V%f%b"}%F{1}─%f'
  RPROMPT+='${SSH_TTY:+"%B%F{8}(%F{6}%n%f%F{8}@%f%F{2}%m%F{8})%f%b"}'
  RPROMPT+='%B%F{8}(%F{3}%*%F{8})%f%b'

  # Suggestion prompt
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

prompt_amer_setup "$@"
