#!/bin/bash

hex() { printf "%08lx\n" $(($@)); }
dec() { printf "%ld\n" $(($@)); }
# perl -e "print unpack('s',pack 's', hex('ffaa'))"
d2hex() { { [ -t 0 ] && echo "$1" || cat; } | perl -ne 'printf("%x\n", int($_))'; }
h2dec() { { [ -t 0 ] && echo "$1" || cat; } | perl -ne 'printf("%u\n", hex($_))'; }
# printf '%x\n' "$((2#101010101))"
bits() {
    printf "%08lx:  " $(($@));
    dec "$@" | gawk '{
    for(i=lshift(1,31);i;i=rshift(i,1))
    printf "%d%s", (and($1,i) > 0), ++c%4==0?c%16==0?"   ":" ":"";
    printf"\n"; }'
}

# Prevent expanding for functions
for i in hex dec bits; do
    alias $i='noglob '"$i"' '
done

strace2(){ ( "$@" 3>&1 1>&2- 2>&3- ) | $EDITOR - -c 'setf strace' ; }
find_def(){ $SHELL -x >/dev/null |& ag --hidden -S "$*"; exit; }
alias find_def.a="find_def \"alias\""

# Works with long hex only
ddh() { sudo dd if="$1" bs=1 count=$(h2dec ${2:-0}) skip=$(h2dec ${3:-0}); }
ddb() { dd if="$1" bs=1 count=$((${2:-0})) skip=$((${3:-0})); }  #of="${1}.part"

cmpb() { cmp -l $@ |
    gawk '{printf "%04X %02X %02X\n", $1-1, strtonum(0$2), strtonum(0$3)}'
}

# Add an "alert" alias for long running commands. USAGE:  sleep 10; alert
alias alert='notify-send --urgency=critical -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# alias notes='date +"%Y-%m-%d, %T" >> ./notes.otl && editor ./notes.otl'

term_tree() {
     local leaf=$$
     ps -eo pid,ppid,command | awk -v leaf="$leaf" '
     {parent[$1]=$2;command[$1]=$3;}
     function print_ancestry(pid)
     {
         printf("%s|%05s\n",command[pid],pid); // parent[pid];
         if(pid!=1) print_ancestry(parent[pid])
     };
     END{\
         print_ancestry(leaf)
     }' | column -t -s '|'
}

tmux_display_fix() {
    # When re-attach on ssh, DISPLAY could change and xsel become unavailable

    # Run this script outside of tmux! Set display for all sessions.
    #!!! I think you may want to look at tmux’s update-environment option, I’m pretty sure that this is the normal way of updating a tmux session’s vars.
    for name in `tmux ls -F '#{session_name}'`; do
        tmux setenv -g -t $name DISPLAY $DISPLAY
    done
}

copyq_edit() {
    local fl=`tempfile`
    copyq clipboard > "$fl" && "$EDITOR" -- "$fl" && copyq copy - < "$fl"
    trap "rm -f '$fl'" EXIT
}
