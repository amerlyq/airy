#!/bin/bash -e
source ~/.shell/func.d/system

sys_power(){ #Suspend #Hibernate
    # PORTABLE: http://askubuntu.com/questions/1792/how-can-i-suspend-hibernate-from-command-line/131022#131022
    dbus-send --system --print-reply --dest="org.freedesktop.UPower" \
        /org/freedesktop/UPower org.freedesktop.UPower.$1
    # sudo pm-suspend -- from pm-utils for Debian-based distros.
    # ALT: (sleep 0.5 && systemctl suspend) & #systemctl poweroff
    # dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" \
    #    /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Restart #Stop
}


if systemctl --user is-active main >/dev/null; then
  sys_logout(){ systemctl --user stop main.target; }
else
  sys_logout(){ r.wm quit-wm; }
fi

# TODO: use ctl.hs to query windows list from xmonad
no_windows(){ r.wm is-empty; }

if running_X; then
  confirm(){ [[ $(printf "yes\nno\n" | dmenu -p "$1?" -fn monospace-10) == yes ]]; }
else
  confirm(){ read -p "$1? ([y]es/[N]o): " a; [[ ${a,,} =~ ^y(es)?$ ]]; }
fi

# TODO: add force shutdown, ignoring unpushed commits
confirm_repo(){ local t=$1 dir=~/aura
  if (cd "$dir" && r.git synced)
  then confirm "Shutdown"
  else r.n "$1 warning:" "Sync git in '$dir/*'"; return 1
fi; }
check(){ no_windows && repo_pushed; }

case $1
in     lock|-l) r.lock &  # THINK: really fork -- or better not?
;;  suspend|-s) sys_power Suspend
;;hibernate|-h) sys_power Hibernate
;;   logout|-o) no_windows && confirm "Logout" && sys_logout
;;   reboot|-r) no_windows && confirm "Reboot" && systemctl reboot
;; shutdown|-t) no_windows && confirm_repo "Shutdown" && systemctl poweroff
;;  dpmsoff|-d) xset -d $DISPLAY dpms force off
;; *) echo "Usage: $0
    <[l]ock|log[o]ut|[s]uspend|[h]ibernate|[r]eboot|shu[t]down>"; exit 2
esac
