#!/bin/bash -e
source ~/.shell/func.d/system

scratchpad_is_empty(){
    if ! i3-msg -t get_tree | jshon | awk '/scratchpad_state/{a[$2]=0}
        END{exit (length(a)>1)}'; then
    i3-input -l 1 -P "Your scratchpad isn't empty" -F "scratchpad show"
    return 1; fi
}

sys_logout(){ i3-nagbar -t warning \
    -m 'Logout: exit i3, end your X session, move to login screen' \
    -b 'Yes, exit i3' 'i3-msg exit'
}

sys_power(){ #Suspend #Hibernate
    # PORTABLE: http://askubuntu.com/questions/1792/how-can-i-suspend-hibernate-from-command-line/131022#131022
    dbus-send --system --print-reply --dest="org.freedesktop.UPower" \
        /org/freedesktop/UPower org.freedesktop.UPower.$1
    # sudo pm-suspend -- from pm-utils for Debian-based distros.
    # ALT: (sleep 0.5 && systemctl suspend) & #systemctl poweroff
    # dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" \
    #    /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Restart #Stop
}

if pgrep i3 &>/dev/null; then
  no_windows(){ scratchpad_is_empty; }
else no_windows(){ :; }; fi
# OR: use ctl.hs to query windows list from xmonad

if running_X; then
  confirm(){ [[ $(printf "yes\nno\n" | dmenu -p "$1?" -fn monospace-10) == yes ]]; }
else
  confirm(){ printf '%s? ([y]es/[N]o)' "$1"; read a; [[ ${a,,} =~ ^y(es)?$ ]]; }
fi

# TODO: add force shutdown, ignoring unpushed commits
confirm_repo(){ local t=$1 dir=~/aura
  if (cd "$dir" && r.git synced)
  then confirm "Shutdown"
  else r.n "$1 warning:" "Sync git in '$dir/*'"; return 1
fi; }
check(){ no_windows && repo_pushed; }

case $1 in
       lock|-l) r.lock &            ;;
    suspend|-s) sys_power Suspend   ;;
  hibernate|-h) sys_power Hibernate ;;
     logout|-o) no_windows && confirm "Logout" && sys_logout       ;;
     reboot|-r) no_windows && confirm "Reboot" && systemctl reboot ;;
   shutdown|-t) no_windows && confirm_repo "Shutdown" && systemctl poweroff ;;
 *) echo "Usage: $0
    <[l]ock|log[o]ut|[s]uspend|[h]ibernate|[r]eboot|shu[t]down>"; exit 2
esac
