Key map for ncmpcpp tui to mpd. Copy to ~/.ncmpcpp/bindings
Note: Function def_key accepts non-ascii characters.

##### General rules #####
  Each action has runtime checks whether it's OK to run it.
  NOTE: * Function def_key accepts non-ascii characters.
		* The following actions are not bound to any key/command:
		   - set_volume

	Sequence = consecutively run until one of them gets fully executed.
	: runs first of them which succeeds, then others ignored
		 def_key "key"
		   action1
		 def_key "key"
		   action2
	Chain = runs all
	: runs each of them until succeeds, on fail -- others ignored
		 def_key "key"
		   action1
		   action2
	Disable default action
	: example -- for ability to crop playlists
		 def_key "C"
		 dummy
	Bind to command (action 'execute_command', key ':')
	: [deferred] -- wait <CR> press; or [immediate] -- moment you typed
		 def_command "quit" [deferred]
		   stop
		   quit

MACRO with actions:

  - push_character "character" - pushes given special
	character into input queue, so it will be immediately
	picked by ncmpcpp upon next call to readKey function.
	Accepted values: mouse, up, down, page_up, page_down,
	home, end, space, enter, insert, delete, left, right,
	tab, ctrl-a, ctrl-b, ..., ctrl-z, ctrl-[, ctrl-\\,
	ctrl-], ctrl-^, ctrl-_, f1, f2, ..., f12, backspace.
	In addition, most of these names can be prefixed with
	alt-/ctrl-/shift- to be recognized with the appropriate
	modifier key(s).

  - push_characters "string" - pushes given string into input queue.

  - require_runnable "action" - checks whether given action
	is runnable and fails if it isn't. This is especially
	useful when mixed with previous two functions. Consider
	the following macro definition:

	def_key "key"
	  push_characters "custom_filter"
	  apply_filter

	If apply_filter can't be currently run, we end up with
	sequence of characters in input queue which will be
	treated just as we typed them. This may lead to unexpected
	results (in this case 'c' will most likely clear current
	playlist, 'u' will trigger database update, 's' will stop
	playback etc.). To prevent such thing from happening, we
	need to change above definition to this one:

	def_key "key"
	  require_runnable "apply_filter"
	  push_characters "custom_filter"
	  apply_filter

	Here, first we test whether apply_filter can be actually run
	before we stuff characters into input queue, so if condition
	is not met, whole chain is aborted and we're fine.

  - require_screen "screen" - checks whether given screen is
	currently active. accepted values: browser, clock, help,
	media_library, outputs, playlist, playlist_editor,
	search_engine, tag_editor, visualizer, last_fm, lyrics,
	selected_items_adder, server_info, song_info,
	sort_playlist_dialog, tiny_tag_editor.

  - run_external_command "command" - runs cmd using system() function.
