#!/usr/bin/env bash

# FIXME: python navigation is locked until preview generated
#       TODO: -- simply skip files as if preview were disabled
#
# https://www.dartmouth.edu/~rc/classes/ksh/run-with-timeout.html
# set +o bgnice
# NOTE:
#   http://stackoverflow.com/questions/14690010/bash-trick-program-into-thinking-stdout-is-an-interactive-terminal
# script -qc "vimcat -u ~/.vim/vimcatrc \"$path\"" /tmp/typescript

set -o pipefail
mkdir -p /tmp/preview

fpath="${@: -1}"
# eval '${@:1:($#-1)} "$ftmp"'

EXT=~/.config/ranger/ext
vimrc=$EXT/vimcatrc
script=$EXT/vimcat.vim
ftmp="/tmp/preview/${fpath##*/}"
fout="${ftmp}.dump"

trap "rm -f ${ftmp} ${fout}" HUP INT QUIT ILL TRAP KILL BUS TERM EXIT
# WARNING: We can't cut on width, or syntax will be messed up!
# perl -lpe '$.>40&&last||($_=substr($_,0,80))' "$fpath" > "$ftmp"
# awk 'NR>128{exit} {print substr($0,0,length)}' "$fpath" > "$ftmp"
head -n 40 "$fpath" > "$ftmp"

# parent=$$
# ( sleep 1 && kill -s TERM "$parent" >/dev/null 2>&1 ) & alarm=$!
# disown $alarm

if [[ $# -eq 1 ]]; then
    vim -E -X -R -i NONE -u ${vimrc} \
    -c "source ${script} | visual | call AnsiHighlight(\"${fout}\") | q" \
    -- "${ftmp}" </dev/tty >/dev/null 2>&1

    cat -n "$fout"
else
    $1 "$ftmp" | cat -n
fi

# pgrep "$watcher" >/dev/null &&
# kill -0 "$watcher" &&
# kill -s TERM "$alarm" >/dev/null
