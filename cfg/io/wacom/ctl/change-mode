#!/bin/bash -e
SCRIPT_PATH=$(readlink -m ${BASH_SOURCE[0]})
source "${SCRIPT_PATH%/*/*}/funcs-lib" || exit 1

# IDEA:
#   switch modes on wheel when holding button 1
#   : similar to my trackball capturing mouse wheel or alt-back
#   show in i3bar also "profile : mode" instead of notify

fmod=${TMPDIR:-/tmp}/wacom_mod

curr() { [[ -s $fmod ]] && cat "$fmod"
    # | awk '$1 == '"$(cat ${TMPDIR:-/tmp}/wacom_prof)"' {print $2}'
}

# next() { ## Choose next
#     case "$1" in
#     brush)   mod=rotate  ;;
#     rotate)  mod=undo    ;;
#     undo)    mod=layer   ;;
#     layer)   mod=color   ;;
#     color)   mod=opacity ;;
#     opacity) mod=zoom    ;;
#     zoom)    mod=brush   ;;
#     *) mod=zoom ;; esac
# }

next(){ local -A n=([zoom]=undo [undo]=zoom); mod=${n[$1]:-zoom}; }


# FIXME:
## Indicator
fled(){
  [[ ${1:?} =~ ^[0-3]$ ]] || return
  printf '%s\n' "${1:?}" > /tmp/wacom_led/status_led0_select
  [[ $2 =~ ^[0-9]+$ ]] && (($2>=32)) && (($2<128)) || (($2==0)) || return
  printf '%s\n' "$2" > /tmp/wacom_led/status0_luminance
}

# ALT:(poll each time)
# wledf=$(wpath)  # OR: wledf=$(cat /tmp/wacom_led)
# wledf=$(realpath -e "/sys${wledf%/*/*/*}/wacom_led/status_led0_select")
# fled(){ printf '%s\n' "${1:?}" > "$wledf"; }

# ALT:(ubuntu) wledf=$(ls /sys/bus/usb/devices/*/wacom_led/status_led0_select)
# NOTE: after re-plugging wacom need to update file (so, udev rule is better)
# [[ -s $pledf ]] || find /sys/devices -type f -name 'status_led0_select' > "$pledf"
# NOTE: replaced by udev rule (arch wiki)
# if [[ -f $wledf ]]; then
#     ledmsg="Change wacom led file permission to indicate current mode"
#     [[ -w $wledf ]] || gksudo -m "$ledmsg" chmod 666 "$wledf"
#     bLed=1
# fi

## Next
case $1 in -?*) arg=$1; shift ;; esac
mod=$1

if [[ -z $mod ]]; then
    next $(curr)
else case $mod in
    --next) next $(curr) ;;
 --refresh) mod=$(curr) ;;
   --reset) next ;;
         *) next $mod ;; esac
fi
# awk '$1 == '"$(cat /tmp/aura/wacom_prof)"' {print $1,$2,$3; next} ' /tmp/aura/wacom_mod
echo "$mod" > ${TMPDIR:-/tmp}/wacom_mod

## Orienting on inner half-circle due to hands position
case "$mod" in
rotate) fled 1 32; wacom "$WPAD" <<< '
    Button  1    "key 5"  # reset
    AbsWheelDown "key 6"  # right
    AbsWheelUp   "key 4"  # left
';;
undo) fled 3 32; wacom "$WPAD" <<< '
    Button  1    "key E"  # brush/erase
    AbsWheelDown "key ctrl shift Z"   # redo
    AbsWheelUp   "key ctrl Z"         # undo
' ;;
# THINK: Has not much sense, as there is 'Shift + MMove=Lft/Rgt"
brush) fled 0 32; wacom "$WPAD" <<< '
    Button  1    "key E"  # brush/erase
    AbsWheelDown "key ["  # small
    AbsWheelUp   "key ]"  # big
' ;;
layer) fled 2 32; wacom "$WPAD" <<< '
    Button  1    "key E"  # brush/erase
    AbsWheelDown "key PgDn"
    AbsWheelUp   "key PgUp"
' ;;
color) fled 2 64; wacom "$WPAD" <<< '
    Button  1    "key X"  # swap b/f
    AbsWheelDown "key K"  # dark
    AbsWheelUp   "key L"  # light
' ;;
opacity) fled 0 64; wacom "$WPAD" <<< '
    Button  1    "key E"  # brush/erase
    AbsWheelDown "key I"  # opaque
    AbsWheelUp   "key O"  # transparent
' ;;
zoom) fled 1 64; wacom "$WPAD" <<< '
    Button  1    "key E"  # brush/erase
    AbsWheelDown 4
    AbsWheelUp   5
' ;;
# history) fled 2 64; wacom "$WPAD" <<< '
#     AbsWheelDown "key ctrl z"  # undo without pick-up
#     AbsWheelUp   "key ctrl r"  # redo
# ' ;;
esac

# DEV: complete status line:
#   => touchpad ON/OFF, $group, $mode, curve firm/soft
state(){ local p=/tmp/wacom_bar
  [[ -p $p ]] || mkfifo "$p"
  printf '%s\n' "$1" > "$p"
}

[[ $arg =~ h ]] && echo "$mod"
[[ $arg =~ n ]] && r.n "Wacom: mode" "$mod"
[[ $arg =~ p ]] && state "$mod"
