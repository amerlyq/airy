> CVS
> http://www.cs.umb.edu/~srevilak/cvs.html
> http://web.mit.edu/gnu/doc/html/cvs_20.html
: http://pfspd.sourceforge.net/cvs.html
: https://www-e815.fnal.gov/webspace/cvs/commands.html
  status
    cvs -q -n update
    cvs status -qq
    cvs -q status "$@" | grep '^[?F]' | grep -v 'Up-to-date'
    cvst (:my alias:)

http://wiki.audacityteam.org/wiki/CVS_Tips_and_Tricks

> https://git.wiki.kernel.org/index.php/GitSvnCrashCourse
  git clone == cvs/svn checkout
  git pull == cvs/svn update
  git commit + git push == cvs/svn commit
    : When you commit in CVS or SVN, it instantly sends it back to the server
    : your code came from. With Git, you commit changes to your local
    : repository. Those changes will not be sent anywhere until you call git
    : push.
  git add !== svn/cvs add
    : With Git, when making a commit of changes, you must git add FILENAME and
    : then git commit. This helps make sure only the files you want get
    : committed. You may also call git commit -am 'Commit Message.' to
    : automatically add all changed files. git add is also used for new files,
    : just like CVS/SVN.

CVS mirror
  https://wiki.mozilla.org/How_to_Create_a_CVS_Mirror
  http://www.toptip.ca/2010/02/linux-create-cvs-repository-on-local.html

Branch/Tag
  http://www.astro.princeton.edu/~rhl/cvs-branches.html
  http://ioctl.org/unix/cvs/branches/
  !! http://cvsgui.sourceforge.net/howto/cvsdoc/cvs_5.html

  List branches
    $ cvs log -h 2>&1 | awk -F"[.:]" '/^\t/&&$(NF-1)==0{print $1}' | awk '{print $1}' | sort -u
  This will bring up tags too, but tags and branches are basically the same in CVS.
    $ cvs rlog -h -l -b module1
  Lists all tags and braches for each and any file together with the revision it belongs to.
    $ cvs status -v [<file>]
    BAD: initially uploads current wkdir to server

  List files in tag
  !! http://versioncontrol.wikia.com/wiki/List_history_on_branch
  # This will give you the names of all the files tagged TagName in module ModuleName.
  # You don't have to do an actual checkout. You can use the -n option to only simulate this:
    $ cvs -n co -r$tag $module
    $ cvs log -N -S -r$tag &> ../cvs-one-branch.log
