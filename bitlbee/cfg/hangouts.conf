# vim:ft=config
# USAGE: "account hangouts on"
#   => user "purple_request_0" will as you for your OAuth
#   => send your OAuth "4/AABq...-6C..." into channel and /part it
# TALK https://bitbucket.org/EionRobb/purple-hangouts/issues/71/cannot-authenticate-error-invalid_scope
# Extract iPhone OAuth code for by firefox:
#   <C-S-v> -> Network -> File -> programmatic_auth -> set-cookie -> oauth_code="4/AABq...-6C..." ;Path ...
#
## SEE video and extract your OAuth https://www.youtube.com/watch?v=hlDhp-eNLMU
# https://www.youtube.com/redirect?event=video_description&v=hlDhp-eNLMU&redir_token=BfjszO8eCIj34J7VJy19LXdlDj98MTUyNTE3NzEyMUAxNTI1MDkwNzIx&q=https%3A%2F%2Faccounts.google.com%2Fo%2Foauth2%2Fprogrammatic_auth%3Fhl%3Den%26scope%3Dhttps%253A%252F%252Fwww.google.com%252Faccounts%252FOAuthLogin%2Bhttps%253A%252F%252Fwww.googleapis.com%252Fauth%252Fuserinfo.email%26client_id%3D936475272427.apps.googleusercontent.com%26access_type%3Doffline%26delegated_client_id%3D183697946088-m3jnlsqshjhh5lbvg05k46q1k4qqtrgn.apps.googleusercontent.com%26top_level_cookie%3D1


# NOTE: value of %{user} doesn't matter -- OAuth code will identify any %{user} as yourself
#   BUT: pass <user@gmail.com> anyway for the case of OAuth being embedded into bitlbee in future
account add hangouts %{user}
account hangouts set tag %{tag}

# auto_connect = `true'
# auto_reconnect = `true'
# away is empty
# display_name is empty
# handle_unknown is empty
# mail_notifications = `false'
# mail_notifications_handle is empty
# account %{tag} set nick_format %full_name
# nick_source = `handle'
# password = `********' (hidden)
# show-call-links = `false'
# status is empty
# treat_invisible_as_offline = `false'
# unravel_google_url = `false'
# username = `%{user}'


/join &%{tag}
channel &%{tag} set account %{tag}
channel &%{tag} set auto_join true
channel &%{tag} set fill_by account
# group is empty
# protocol is empty
## WARN! some contacts are "offline" despite being available for conversation
channel &%{tag} set show_users online+,away+,offline
# type = `control'
