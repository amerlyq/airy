#!/bin/bash
set -euo pipefail
d_mod=$(dirname "$(readlink -e "$0")")
BITLBEE_OVERLAY_PATH=$d_mod/cfg
# NOTE: default policy is "append", realized as "var+=:/private/dir"
#   => "append" is user-friendly -- allows to extend defaults
#   => default configs can be disabled by strict assign (override) in profile
#   BAD:THINK: sometimes you need to choose policy per-file (some override, some append, some prepend)
source ~/.shell/profile

[[ " $* " =~ " -r " ]] && renew=1 || unset renew

# ARCH: everything must mimic UNIX in fractal way
# IDEA: use sfx symbols (e.g. "cfg!", "cfg+") in OVERLAY_PATH to explicitly
#   choose "override" or "append" when files with same name were found
# WARN: you can't simply source all *.conf in public and private ./cfg/
#   * user must choose accounts and channels himself -- you won't be able to guess
#   * experimental configs and template files must be left untouched
# NOTE: "./run-cfg" contains policy and "./exe/communicate" implements mechanisms
#   * places where to look for passwords are subject of this script's policy
#     => user may write clean bash script instead of using CHAT_* vars ()
#     SEE:<example> in ./exe/communicate with $(pass ...) commands used only where necessary

IFS=: read -r -d '' -a cfgdirs < <(printf '%s:\0' "${BITLBEE_OVERLAY_PATH:?}")
confpath(){ for d in "${cfgdirs[@]}"; do
  [[ $d && -f $d/$1.conf ]] || continue
  echo "@$d/$1.conf"
done; }

#%WARN: bitlbee server must be runnning
exec > >("$d_mod/exe/communicate" -- ${renew+--renew})

nm=bitlbee
tags=( tag=$nm
  user=${IRC_BITLBEE:-${IRC_USER:?}}
  pass=$(r.query-passwd 'irc/bitlbee')
  some=
) && echo "[${tags[*]}]"
confpath $nm

# ALT:(BITLBEE_LIST): use implicit order of CHAT_* vars declaration (instead of explicit list)
#   $ (IFS=; declare -p) | sed -rn 's/declare -\S\sCHAT_([A-Z0-9]+)[_=].*/\1/p' | sort -u
#   BAD: always uses all vars -- can't use vars only for other programs
#   BAD: some CHAT_* vars may be used by other programs BUT:NOT bitlbee
for nm in "${BITLBEE_LIST[@]:?}"; do
  user=CHAT_${nm^^}
  [[ ${!user+x} ]] || { echo "Err: variable '$user' is unset" >&2; exit 1; }
  pass=$(r.query-passwd "chat/$nm" 2>/dev/null||:)
  nick=${user}_NICK

  tags=( tag=$nm
    user=${!user}
    ${pass+pass=$pass}
    ${!nick+nick=${!nick}}
  ) && echo "[${tags[*]}]"
  confpath $nm
done
