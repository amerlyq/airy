#%USAGE: $ S.r mailsync@account:channel.service
#%VIZ.(channel): new inbox all ...

# TODO: sep unit with Required=davmail.service
#   OR: no need -- it will simply fail on connect and notify user

[Unit]
Description=Mailsync service - %P
Requisite=network.target
Requires=network-online.target
After=network.target network-online.target

# BAD:THINK: how-to sync on headless server w/o xorg notifications
# FAIL: if condition false -- job triggers OnFailure, but can't notify
ConditionFileNotEmpty=/etc/systemd/system/notify-user@.service
ConditionDirectoryNotEmpty=/var/lib/mailsync

# BAD: useful only with Restart= and OnFailure=restart when IntervalSec much smaller than .timer interval
#   => unit becomes failed even if 3 times are normal start and not fail
#   => useless for "oneshot" to limit their overall failure count
# StartLimitBurst=3
# StartLimitIntervalSec=10m

# TODO: include error text from journal or FIND env var with err text
OnFailure=notify-user@critical:OnFailure:%i.service

[Service]
Type=oneshot
User=%{USER}
Group=mailsync
# BAD:SECU: substituted notorious exe in ~/.local/bin will gain access to /var/lib/mailsync
# ALT: ExecStart=/bin/sh -c 'PATH=/var/lib/mailsync/bin:$PATH exec ...'
Environment=PATH=/var/lib/mailsync/bin:/home/%{USER}/.local/bin:/usr/bin
# ALT: ExecStart=/usr/bin/env  r.mailsync %I
ExecStart=/bin/sh -c 'acc=${0%%%%:*}; chan=${0#*:}; \
test "x$chan" == "xnew" && opts=-q || opts=-V; \
exec r.mailsync "$acc" -- "$opts" "$chan"' %I
# BAD: trying to kill process even after successful ending
# ExecStop=/usr/bin/kill -TERM $MAINPID

# FIXME: fetch-new are allowed to fail on long sync-all BUT not otherwise
SuccessExitStatus=0 13

PrivateTmp=true
PrivateDevices=true
ProtectSystem=strict
ProtectKernelTunables=true
