#!/usr/bin/perl
# USAGE Save mail from stdin to file
# DEBUG <mail.eml ./exe/save >! proc.eml && command diff -U0 manual.eml proc.eml | tail -n +3 | shasum
# SEE commit ^60f97fe4 for loop-based impl instead of pipe-based

use warnings FATAL => 'all';
use autodie;
use strict;
use Getopt::Std;

# d=delimiter, p=plain-copy
my %opts=(); getopts('d:p', \%opts);

# NEED set pipe_decode=yes
#   => controls what happens to headers and mime parts when you save
my $delim = $opts{d} // '---==EOF==---';
my $plain = $opts{p} // 0;
my $fout = *STDOUT;

if (defined $ARGV[0]) {
    my $nm = ($ARGV[1] // 'mail') . '.eml';
    open $fout, '>', ($ARGV[0].'/'.$nm);
    END { close $fout; }
}


# if ($plain) {
sub stream_one_msg { my @lines; push @lines, $_ for @_; \@lines; }


sub stream_split_msgs {
    my $after_delim = 0;
    my (@msgs, @lines);
    foreach (@_) {
        # Split msgs on $delim
        if ($after_delim) {
            next if /^\s*$/;  # filter-out empty lines between msgs
            $after_delim = 0;
        } elsif (/^$delim$/) {
            $after_delim = 1;
            push @msgs, [@lines] if @lines;
            undef @lines;
            next
        }
        push @lines, $_;
    }
    push @msgs, [@lines] if @lines;
    @msgs;
}


# TODO?ALSO strip signatures in quoted text
#   +++ as standalone script to preprocess mails on response
#   + when recite is mixed with quoting => to less work
# => from /^(>+)/ till diff nesting lvl of '>'
sub strip_signature { my $keep = 1;
    grep { if($keep){ $keep = 0 if /^-- $/ }; $keep } @_;
}


# ALSO DECIDE strip first-level citation after
#   /^-----Original Message-----$/
#   /14.04.2017 16:39, %user пишет:/
#   -> delete only if all lines /^>|^\s*$/ till EOM
#   <= HACK submit if user dirty-quoted directly inside reciting
sub strip_recite { my $quoted = 0; my @tmp; my @lines;
    foreach (@_) {
        if ($quoted) {
            if (/^>|^\s*$/) {
                push @tmp, $_;
                next
            }
            push @lines, @tmp;
            undef @tmp;
            $quoted = 0;

        } elsif (/^(?:>\s?)?(?:On .*, .* wrote:|-----Original Message-----)$/) {
            $quoted = 1;
            push @tmp, $_;
            next
        }
        push @lines, $_;
    }
    return @lines;
}


# NOTE strip all empty trailing lines /^>*\s*$/
sub strip_trail { my $keep = 0;
    reverse grep { if($keep){ 1 }else{ $keep = !/^>*\s*$/ } } reverse @_;
}


# NOTE useful for threads
sub strip_fields {
    # TODO multiline agent line wrapped on 72
    grep { !/^(?:Subject|User-Agent):\s/ } @_;
    # subject=$(<<<"$message" grep -oPm 1 '^Subject: ?\K.*' | sed 's,/,∕,g')
    # Reformat date in single timezone
    #   mail_date=$(<<<"$message" grep -oPm 1 '^Date: ?\K.*')
    #   formatted_date=$(date -d"$mail_date" +%y%m%d)
}


sub format_block { @_, "\n" }


print $fout map {
    format_block
    strip_fields
    strip_trail
    strip_recite
    strip_signature
        @$_;
} stream_split_msgs <STDIN>;
