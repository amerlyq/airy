#!/bin/bash -eu
set -o pipefail
# WARN: unsecure -- someone with occasional access to system
#   may change this script to dump actual passwords -- use systemwide one
# BET? https://wiki.archlinux.org/index.php/Pass
#   https://github.com/roddhjav/pass-tomb
#   https://wiki.archlinux.org/index.php/Tomb

opts=; while getopts 'm' o; do case $o in :|'?') exit 1
esac; opts+=$o; done; shift $((OPTIND - 1))

prf(){ printf '%s' "$@"; }

key=${1:-$([[ -t 0 ]]||ifne cat)}
key=${key:?}
pass=${2-}

## Debug
# > /tmp/mut
# echo "\$2=$pass" >> /tmp/mut
# prf(){ printf '%s' "$@" | tee -a /tmp/mut; }

path=~/.cache/airy/gpg/mutt.gpg
if [[ -z $pass && -s $path ]]; then
  pass=$(gpg --use-agent --quiet --batch --decrypt "$path" \
    | grep -Fm1 "$key" | awk '{print$NF}')
fi

if [[ -z $pass ]]; then
  read -esp "Mutt pass ($key): " pass </dev/tty
  echo >/dev/tty
fi

if [[ $opts =~ m ]]; then
  prf "set my_pass=$pass"
  if [[ $key =~ ^[a-zA-Z]+$ ]]
  then prf "; set my_pass_$key=$pass"
  else echo 'Err: key must be =~ \w+' >/dev/tty; fi
else
  prf "$pass"
fi

## Debug
# echo>> /tmp/mut
