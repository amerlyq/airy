REF
  https://stedolan.github.io/jq/manual/
  https://github.com/stedolan/jq/wiki/FAQ#general-questions
  TUT https://www.slideshare.net/btiernay/jq-json-like-a-boss
  ++ TUT https://programminghistorian.org/en/lessons/json-and-jq
  https://www.reddit.com/r/commandline/comments/3z9jff/jq_examples/
  ONLINE: https://jqplay.org/

Selection
  https://til.hashrocket.com/posts/uv0bjiokwk-use-jq-to-filter-objects-list-with-regex

Delete keys matching pattern
  https://github.com/stedolan/jq/issues/966
  $ jq '.fields |=with_entries(select(.key|test("^custom")|not))'
  $ jq '{a:{b0:1,b1:2,b2:3}}|delpaths([paths|select(.[0]=="a" and .[1][1:] == "2")])'

Passing variables / env / arrays
  http://bigdatums.net/2016/11/21/using-variables-in-jq-command-line-json-parser/

Table view
  $ jq -r '["ID","NAME"], ["--","------"], (.[] | [.id, .name]) | @tsv'

Extract choosen values
  $ jq -r '.[]|select(.==-1)'
  $ jq -r '.[]|select(.field|contains("-1"))'

Replace choosen values
   .cells |= map(if has("outputs") then .outputs = [] else . end
                 | if has("execution_count") then .execution_count = null else . end)

  $ jq '((.cells[].outputs | select(.) ) |= []) | (((.cells[].execution_count | select(.))) |= null)'
  $ jq 'with_entries(if(.value==-1) then .value=-5 else . end)'


Convert values to numbers
  $ jq 'with_entries(.value |= tonumber)'

Filter by values
  $ jq '[.something | to_entries[] | {"key": .key, "value": .value.foo}] | from_entries'
