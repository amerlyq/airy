%%%%% Compare fs

%%%% Reproducible Builds
  https://wiki.debian.org/ReproducibleBuilds

% Directories
  HACK
    http://superuser.com/questions/832531/can-gnu-diff-recursively-compare-only-filenames-in-different-folder-structures
  $ diff <(find $a -type f|xargs md5sum|sort) <(find $b -type f|xargs md5sum|sort)
  TRY
    # http://askubuntu.com/questions/12473/file-and-directory-comparison-tool
    dirdiff
    diffuse
      # I often use Diffuse for one killer feature - the ability to manually set merge anchors. It doesn't do directories (yet), but for individual and messy diffs, the anchors feature is awesome.
    hashdeep
      http://askubuntu.com/questions/37483/check-the-correctness-of-copied-files/37644#37644
    FreeFileSync
      http://www.freefilesync.org/
  rsync
    The rsync utility first popped into my mind when I saw your question. Doing
    something like below could quickly show what files are in directory a but not in b:
      $ rsync -nrcv /tmp/a /tmp/b
      # -n will run it as a "dry run" and make no changes, but just print out the files that would be updated
      # -r will recurse into the directories
      # -c will compare based on file checksum
      # -v will print the output to stdout verbosely
      This is a good option because you can compare the contents of the files
      as well to make sure they match. rsync's delta algorithm is optimized for
      this type of use case. Then if you want to make b match the contents of
      a, you can just remove the -n option to perform the actual sync.

Some related questions:

http://stackoverflow.com/questions/19396718/compare-files-in-two-directory-on-remote-server-using-unix
http://unix.stackexchange.com/questions/57305/rsync-compare-directories


% Elfs comparison
  THINK: how to ignore only adress minor shifts?
    # http://stackoverflow.com/questions/3231641/comparing-generated-executables-for-equivilance
  $ f=opt/f512/lwipcglue/lib/libtd_ipc_client.so
  $ diff <(objdump -x std/$f) <(objdump -x expat/$f)
  $ diff -I 'addiu' <(objdump -d std/$f) <(objdump -d expat/$f)
  ALT: for each significant section from $ objdump -x $ do
    $ objcopy -j <section> | md5sum
  ALT: eu-elfcmp
  Hex to ascii
    NOTE: use to compare elf .rodata sections
    $ echo 70642f68742f7070 | xxd -r -p
