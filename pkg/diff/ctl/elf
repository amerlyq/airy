#!/bin/bash -e

O=; while getopts 'adhs' o; do case $o
# DFL: elfutils/eu-elfcmp
in d) exec eu-elfcmp --verbose --ignore-build-id "${@:2}"
esac; O+=$o; done; shift $((OPTIND-1))

f1=${1:?}
f2=${2:?}
set -- "$f1" "$f2"
args=( "$@" )
[[ $O ]] || O=hs

# TEMP:SEP:
XCT_PRF=/opt/mips-unknown-linux-uclibc/bin/mips-linux-uclibc-

objdump(){ local f=${@: -1}
  (cd "${f%/*}" && "${XCT_PRF}objdump" "${@:1:$#-1}" "${f##*/}")
}

dhead(){
  # ALT: temp files
  local o1=$(objdump -wx "$1")
  local o2=$(objdump -wx "$2")
  # WARN: process substitution can't catch errors
  diff <(cat<<<"$o1") <(cat<<<"$o2")
}

dasm(){
  local o1=$(objdump -wCD "$1")
  local o2=$(objdump -wCD "$2")
  # TRY:(ignore) -I 'addiu'
  diff <(cat<<<"$o1") <(cat<<<"$o2")
}

dstrings(){
  local o1=$(strings "$1" | sort)
  local o2=$(strings "$2" | sort)
  # TRY:(ignore) -I 'addiu'
  diff <(cat<<<"$o1") <(cat<<<"$o2")
}

if ! diff -q "$@" &>/dev/null; then
  # BAD: no message 'f1 f2 differ' from diff to delimit output
  # BUT: it must be shown only if next line will show error
  # ALT: filter output from 'diff -r' and delete output line if no diff
  show_diff(){ [[ $O =~ $1 ]] && { "${@:2}" "${args[@]}" || err=$?; }; }
  show_diff 'h' dhead
  show_diff 's' dstrings
  show_diff 'a' dasm
  exit "$err"
fi
