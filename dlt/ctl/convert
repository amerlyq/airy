#!/usr/bin/env bash
#%USAGE: $ ./$0 {apid|ctid}..
#%E.G:   $ r.dlt-record -dlqO & r.dlt-convert -fcFI | less -F
set -euo pipefail

colors=
dltfile=
follow=
index=1
prefix=${CMAKE_PREFIX_PATH:-/work/cache/_prefix}
pretty=

while getopts 'fcFi:Ip:123456789' o; do case $o in :|'?') exit 1
;; c) colors=1  # PERF:(160.000 lines): 1.5s -> 6.5s
;; f) follow=1
;; F) pretty=1
;; i) dltfile=$OPTARG
;; I) dltfile=/tmp/dlt.log
;; p) prefix=$OPTARG
;; [1-9]) index=$((o))
esac; done; shift $((OPTIND-1))

filter=()
for id; do filter+=("$id ----" "---- $id"); done
exec < <(printf '%s\n' "${filter[@]}")

if [[ ${prefix+x} ]]; then
  export LD_LIBRARY_PATH=$prefix/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
  export PATH=$prefix/bin:$PATH
fi

[[ -n $dltfile ]] || dltfile=$(find . -maxdepth 1 -name '*.dlt' -printf '%C@\t%f\n'|sort -rnk1|head -"$index"|tail -1|cut -f2-)
[[ -f $dltfile ]] || { echo "Not found *.dlt files" >&2; exit 1; }

compact(){ sed 's/\s\s\+/ /' | cut -d' ' -f7,8,4,10,13- | sed 's/\[/| /;s/\]$//' | expand; }
fcrop(){ stdbuf -oL cut -c-"$(tput cols)"; }
fcolors(){ r.dlt-colors; }
pretty(){ compact | fcrop | fcolors; echo; }

[[ -t 1 ]] || function fcrop { cat; }
[[ -t 1 ]] || ((colors)) || function fcolors { cat; }
if [[ -t 1 ]] || ((pretty)); then exec > >(pretty); fi

# TODO: always cache current output (with pretty if forced) into "${dltfile%.dlt}.txt"
#   => so I could fastly apply coloring and grep on that last .txt

# exec stdbuf -oL -eL tail -f "$dltfile" | stdbuf -i0 -oL -eL xxd
# exec dlt-convert -a "$@" -w /tmp/dlt.log
# exec stdbuf -oL -eL dlt-convert -a "$@"
stdbuf -oL -eL dlt-convert -f/dev/stdin ${follow:+-w} -a "$dltfile"
