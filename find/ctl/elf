#!/bin/bash -eu
set -o pipefail

# USAGE:
# A=all, a=archive, b=bin, c=core, k=kernel, o=object, s=shared
# f=bfmt : elf
# m=masked : find masked by extension
# p=pltf : mips, x86-64

targopt=abckos
opts=; while getopts 'Aabcf:kmop:s' o; do case $o in :|'?') exit 1
;; A) opts+=$targopt
;; f) bfmt=$OPTARG
;; p) pltf=$OPTARG
esac; opts+=$o; done; shift $((OPTIND - 1))
has(){ [[ $opts =~ [$*] ]]; }

src=( "${@:-$PWD}" )
flt=( )  # DEV: preliminary filter-out trash files

[[ -z ${opts//[^$targopt]} ]] && opts=bs  # =DFL

if has m; then
  has $targopt && flt+=( \( -false )
  has a && flt+=( -o -name '*.a' )
  has b && flt+=( -o \( -executable \! -regex '.*\.[ks]?o\(\.[0-9]+\)*$' \) )
  has c && flt+=( -o -name 'core.*' )
  has k && flt+=( -o -name '*.ko' )
  has o && flt+=( -o -name '*.o' )
  has s && flt+=( -o -regex '.*\.so\(\.[0-9]+\)*$' )
  has $targopt && flt+=( \) )
fi

# TODO: distinguish '.o' from '.ko' by file extension
typ=''
has a && typ+='|current ar archive'
has b && typ+='|executable'
has c && typ+='|core file'
has ko && typ+='|relocatable'
has s && typ+='|shared object'
typ="(${typ:1})"

# ATT: intentionally ignores symlinks to skip duplicates (E.G. busybox)
# WARN: some *.so are root-only and will be skipped under user

# TEMP:DONE:(while-read): aug *.a metainfo for consequent filters
# ALT: extract single *.o from *.a to determine its $pltf
#   => no need to write conditional branches !!
# ALT:TRY |elffile|
#   https://blogs.oracle.com/ali/elffile:-elf-specific-file-identification-utility

exec find -H "${src[@]}" ! -readable -prune -o -type f "${flt[@]}" -print \
| file -f- -e apptype -e ascii -e encoding -e cdf -e compress -e elf -e tar \
| while IFS= read -r L; do if [[ $L =~ 'current ar archive'$ ]]
then printf '%s, ELF, %s\n' "$L" "$(readelf -hW "${L%:*}" | grep -oP '^\s*Machine:\s+\K.*')"
else printf '%s\n' "$L"; fi; done \
| grep -iFw "${bfmt-elf}" \
| grep -Ew  "${typ}" \
| grep -iFw "${pltf-}" \
| awk -F': ' '{print $1}'
